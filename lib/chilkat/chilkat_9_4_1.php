<?php

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.4
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

// Try to load our extension if it's not already loaded.
if (!extension_loaded('chilkat_9_4_1')) {
  if (strtolower(substr(PHP_OS, 0, 3)) === 'win') {
    if (!dl('php_chilkat_9_4_1.dll')) return;
  } else {
    // PHP_SHLIB_SUFFIX gives 'dylib' on MacOS X but modules are 'so'.
    if (PHP_SHLIB_SUFFIX === 'dylib') {
      if (!dl('chilkat_9_4_1.so')) return;
    } else {
      if (!dl('chilkat_9_4_1.'.PHP_SHLIB_SUFFIX)) return;
    }
  }
}



/* PHP Proxy Classes */
class SYSTEMTIME {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		$func = 'SYSTEMTIME_'.$var.'_set';
		if (function_exists($func)) return call_user_func($func,$this->_cPtr,$value);
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if (function_exists('SYSTEMTIME_'.$var.'_set')) return true;
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		$func = 'SYSTEMTIME_'.$var.'_get';
		if (function_exists($func)) {
			$r = call_user_func($func,$this->_cPtr);
			if (!is_resource($r)) return $r;
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			return new $c($r);
		}
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_SYSTEMTIME') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_SYSTEMTIME();
	}
}

class CkString {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkString') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkString();
	}

	function get_Utf8() {
		return CkString_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkString_put_Utf8($this->_cPtr,$b);
	}

	function loadFile($fileName,$charset) {
		return CkString_loadFile($this->_cPtr,$fileName,$charset);
	}

	function charAt($idx) {
		return CkString_charAt($this->_cPtr,$idx);
	}

	function intValue() {
		return CkString_intValue($this->_cPtr);
	}

	function doubleValue() {
		return CkString_doubleValue($this->_cPtr);
	}

	function c_clone() {
		$r=CkString_c_clone($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkString($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function countCharOccurances($ch) {
		return CkString_countCharOccurances($this->_cPtr,$ch);
	}

	function appendCurrentDateRfc822() {
		CkString_appendCurrentDateRfc822($this->_cPtr);
	}

	function setStr($s) {
		CkString_setStr($this->_cPtr,$s);
	}

	function endsWith($s) {
		return CkString_endsWith($this->_cPtr,$s);
	}

	function endsWithStr($s) {
		return CkString_endsWithStr($this->_cPtr,$s);
	}

	function beginsWithStr($s) {
		return CkString_beginsWithStr($this->_cPtr,$s);
	}

	function indexOf($s) {
		return CkString_indexOf($this->_cPtr,$s);
	}

	function indexOfStr($s) {
		return CkString_indexOfStr($this->_cPtr,$s);
	}

	function replaceAll($str,$replacement) {
		return CkString_replaceAll($this->_cPtr,$str,$replacement);
	}

	function replaceFirst($str,$replacement) {
		return CkString_replaceFirst($this->_cPtr,$str,$replacement);
	}

	function substring($startCharIdx,$numChars) {
		$r=CkString_substring($this->_cPtr,$startCharIdx,$numChars);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkString($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function matchesStr($str) {
		return CkString_matchesStr($this->_cPtr,$str);
	}

	function matches($s) {
		return CkString_matches($this->_cPtr,$s);
	}

	function getChar($idx) {
		$r=CkString_getChar($this->_cPtr,$idx);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkString($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function removeAll($str) {
		return CkString_removeAll($this->_cPtr,$str);
	}

	function removeFirst($str) {
		return CkString_removeFirst($this->_cPtr,$str);
	}

	function chopAtStr($str) {
		CkString_chopAtStr($this->_cPtr,$str);
	}

	function urlDecode($charset) {
		CkString_urlDecode($this->_cPtr,$charset);
	}

	function urlEncode($charset) {
		CkString_urlEncode($this->_cPtr,$charset);
	}

	function base64Decode($charset) {
		CkString_base64Decode($this->_cPtr,$charset);
	}

	function base64Encode($charset) {
		CkString_base64Encode($this->_cPtr,$charset);
	}

	function qpDecode($charset) {
		CkString_qpDecode($this->_cPtr,$charset);
	}

	function qpEncode($charset) {
		CkString_qpEncode($this->_cPtr,$charset);
	}

	function hexDecode($charset) {
		CkString_hexDecode($this->_cPtr,$charset);
	}

	function hexEncode($charset) {
		CkString_hexEncode($this->_cPtr,$charset);
	}

	function entityDecode() {
		CkString_entityDecode($this->_cPtr);
	}

	function entityEncode() {
		CkString_entityEncode($this->_cPtr);
	}

	function appendUtf8($s) {
		CkString_appendUtf8($this->_cPtr,$s);
	}

	function appendAnsi($s) {
		CkString_appendAnsi($this->_cPtr,$s);
	}

	function clear() {
		CkString_clear($this->_cPtr);
	}

	function prepend($s) {
		CkString_prepend($this->_cPtr,$s);
	}

	function appendInt($n) {
		CkString_appendInt($this->_cPtr,$n);
	}

	function append($s) {
		CkString_append($this->_cPtr,$s);
	}

	function appendChar($c_) {
		CkString_appendChar($this->_cPtr,$c_);
	}

	function appendN($s,$numBytes) {
		CkString_appendN($this->_cPtr,$s,$numBytes);
	}

	function appendStr($str) {
		CkString_appendStr($this->_cPtr,$str);
	}

	function appendEnc($s,$encoding) {
		CkString_appendEnc($this->_cPtr,$s,$encoding);
	}

	function getEnc($encoding) {
		return CkString_getEnc($this->_cPtr,$encoding);
	}

	function setString($s) {
		CkString_setString($this->_cPtr,$s);
	}

	function setStringAnsi($s) {
		CkString_setStringAnsi($this->_cPtr,$s);
	}

	function setStringUtf8($s) {
		CkString_setStringUtf8($this->_cPtr,$s);
	}

	function getAnsi() {
		return CkString_getAnsi($this->_cPtr);
	}

	function getUtf8() {
		return CkString_getUtf8($this->_cPtr);
	}

	function compareStr($str) {
		return CkString_compareStr($this->_cPtr,$str);
	}

	function getString() {
		return CkString_getString($this->_cPtr);
	}

	function getSizeUtf8() {
		return CkString_getSizeUtf8($this->_cPtr);
	}

	function getSizeAnsi() {
		return CkString_getSizeAnsi($this->_cPtr);
	}

	function getNumChars() {
		return CkString_getNumChars($this->_cPtr);
	}

	function trim() {
		CkString_trim($this->_cPtr);
	}

	function trim2() {
		CkString_trim2($this->_cPtr);
	}

	function trimInsideSpaces() {
		CkString_trimInsideSpaces($this->_cPtr);
	}

	function replaceAllOccurances($pattern,$replacement) {
		return CkString_replaceAllOccurances($this->_cPtr,$pattern,$replacement);
	}

	function replaceFirstOccurance($pattern,$replacement) {
		return CkString_replaceFirstOccurance($this->_cPtr,$pattern,$replacement);
	}

	function toCRLF() {
		CkString_toCRLF($this->_cPtr);
	}

	function toLF() {
		CkString_toLF($this->_cPtr);
	}

	function eliminateChar($ansiChar,$startIndex) {
		CkString_eliminateChar($this->_cPtr,$ansiChar,$startIndex);
	}

	function lastChar() {
		return CkString_lastChar($this->_cPtr);
	}

	function shorten($n) {
		CkString_shorten($this->_cPtr,$n);
	}

	function toLowerCase() {
		CkString_toLowerCase($this->_cPtr);
	}

	function toUpperCase() {
		CkString_toUpperCase($this->_cPtr);
	}

	function encodeXMLSpecial() {
		CkString_encodeXMLSpecial($this->_cPtr);
	}

	function decodeXMLSpecial() {
		CkString_decodeXMLSpecial($this->_cPtr);
	}

	function containsSubstring($pattern) {
		return CkString_containsSubstring($this->_cPtr,$pattern);
	}

	function containsSubstringNoCase($pattern) {
		return CkString_containsSubstringNoCase($this->_cPtr,$pattern);
	}

	function equals($s) {
		return CkString_equals($this->_cPtr,$s);
	}

	function equalsStr($s) {
		return CkString_equalsStr($this->_cPtr,$s);
	}

	function equalsIgnoreCase($s) {
		return CkString_equalsIgnoreCase($this->_cPtr,$s);
	}

	function equalsIgnoreCaseStr($s) {
		return CkString_equalsIgnoreCaseStr($this->_cPtr,$s);
	}

	function removeChunk($charStartPos,$numChars) {
		CkString_removeChunk($this->_cPtr,$charStartPos,$numChars);
	}

	function removeCharOccurances($c_) {
		CkString_removeCharOccurances($this->_cPtr,$c_);
	}

	function replaceChar($c1,$c2) {
		CkString_replaceChar($this->_cPtr,$c1,$c2);
	}

	function chopAtFirstChar($c1) {
		CkString_chopAtFirstChar($this->_cPtr,$c1);
	}

	function saveToFile($filename,$charset) {
		return CkString_saveToFile($this->_cPtr,$filename,$charset);
	}

	function split($splitChar,$exceptDoubleQuoted,$exceptEscaped,$keepEmpty) {
		$r=CkString_split($this->_cPtr,$splitChar,$exceptDoubleQuoted,$exceptEscaped,$keepEmpty);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkStringArray($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function split2($splitCharSet,$exceptDoubleQuoted,$exceptEscaped,$keepEmpty) {
		$r=CkString_split2($this->_cPtr,$splitCharSet,$exceptDoubleQuoted,$exceptEscaped,$keepEmpty);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkStringArray($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function tokenize($punctuation) {
		$r=CkString_tokenize($this->_cPtr,$punctuation);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkStringArray($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function splitAtWS() {
		$r=CkString_splitAtWS($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkStringArray($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function beginsWith($sSubstr) {
		return CkString_beginsWith($this->_cPtr,$sSubstr);
	}
}

class CkDateTime {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkDateTime') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkDateTime();
	}

	function get_Utf8() {
		return CkDateTime_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkDateTime_put_Utf8($this->_cPtr,$b);
	}

	function get_IsDst() {
		return CkDateTime_get_IsDst($this->_cPtr);
	}

	function get_UtcOffset() {
		return CkDateTime_get_UtcOffset($this->_cPtr);
	}

	function SetFromCurrentSystemTime() {
		CkDateTime_SetFromCurrentSystemTime($this->_cPtr);
	}

	function SetFromRfc822($rfc822Str) {
		return CkDateTime_SetFromRfc822($this->_cPtr,$rfc822Str);
	}

	function GetAsUnixTime($bLocal) {
		return CkDateTime_GetAsUnixTime($this->_cPtr,$bLocal);
	}

	function GetAsUnixTime64($bLocal) {
		return CkDateTime_GetAsUnixTime64($this->_cPtr,$bLocal);
	}

	function GetAsOleDate($bLocal) {
		return CkDateTime_GetAsOleDate($this->_cPtr,$bLocal);
	}

	function GetAsDosDate($bLocal) {
		return CkDateTime_GetAsDosDate($this->_cPtr,$bLocal);
	}

	function GetAsDateTimeTicks($bLocal) {
		return CkDateTime_GetAsDateTimeTicks($this->_cPtr,$bLocal);
	}

	function SetFromUnixTime($bLocal,$t) {
		CkDateTime_SetFromUnixTime($this->_cPtr,$bLocal,$t);
	}

	function SetFromUnixTime64($bLocal,$t) {
		CkDateTime_SetFromUnixTime64($this->_cPtr,$bLocal,$t);
	}

	function SetFromOleDate($bLocal,$dt) {
		CkDateTime_SetFromOleDate($this->_cPtr,$bLocal,$dt);
	}

	function SetFromDosDate($bLocal,$t) {
		CkDateTime_SetFromDosDate($this->_cPtr,$bLocal,$t);
	}

	function SetFromDateTimeTicks($bLocal,$n) {
		CkDateTime_SetFromDateTimeTicks($this->_cPtr,$bLocal,$n);
	}

	function serialize() {
		return CkDateTime_serialize($this->_cPtr);
	}

	function DeSerialize($serializedDateTime) {
		CkDateTime_DeSerialize($this->_cPtr,$serializedDateTime);
	}

	function AddDays($numDays) {
		return CkDateTime_AddDays($this->_cPtr,$numDays);
	}

	function getAsRfc822($bLocal) {
		return CkDateTime_getAsRfc822($this->_cPtr,$bLocal);
	}
}

class CkDtObj {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkDtObj') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkDtObj();
	}

	function get_Utf8() {
		return CkDtObj_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkDtObj_put_Utf8($this->_cPtr,$b);
	}

	function get_Utc() {
		return CkDtObj_get_Utc($this->_cPtr);
	}

	function put_Utc($newVal) {
		CkDtObj_put_Utc($this->_cPtr,$newVal);
	}

	function get_Year() {
		return CkDtObj_get_Year($this->_cPtr);
	}

	function put_Year($newVal) {
		CkDtObj_put_Year($this->_cPtr,$newVal);
	}

	function get_Month() {
		return CkDtObj_get_Month($this->_cPtr);
	}

	function put_Month($newVal) {
		CkDtObj_put_Month($this->_cPtr,$newVal);
	}

	function get_Day() {
		return CkDtObj_get_Day($this->_cPtr);
	}

	function put_Day($newVal) {
		CkDtObj_put_Day($this->_cPtr,$newVal);
	}

	function get_Hour() {
		return CkDtObj_get_Hour($this->_cPtr);
	}

	function put_Hour($newVal) {
		CkDtObj_put_Hour($this->_cPtr,$newVal);
	}

	function get_Minute() {
		return CkDtObj_get_Minute($this->_cPtr);
	}

	function put_Minute($newVal) {
		CkDtObj_put_Minute($this->_cPtr,$newVal);
	}

	function get_Second() {
		return CkDtObj_get_Second($this->_cPtr);
	}

	function put_Second($newVal) {
		CkDtObj_put_Second($this->_cPtr,$newVal);
	}

	function get_StructTmYear() {
		return CkDtObj_get_StructTmYear($this->_cPtr);
	}

	function put_StructTmYear($newVal) {
		CkDtObj_put_StructTmYear($this->_cPtr,$newVal);
	}

	function get_StructTmMonth() {
		return CkDtObj_get_StructTmMonth($this->_cPtr);
	}

	function put_StructTmMonth($newVal) {
		CkDtObj_put_StructTmMonth($this->_cPtr,$newVal);
	}

	function serialize() {
		return CkDtObj_serialize($this->_cPtr);
	}

	function DeSerialize($serializedDtObj) {
		CkDtObj_DeSerialize($this->_cPtr,$serializedDtObj);
	}
}

class CkByteData {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkByteData') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkByteData();
	}

	function get_Utf8() {
		return CkByteData_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkByteData_put_Utf8($this->_cPtr,$b);
	}

	function getRange($index,$numBytes) {
		return CkByteData_getRange($this->_cPtr,$index,$numBytes);
	}

	function getRangeStr($index,$numAnsiChars) {
		return CkByteData_getRangeStr($this->_cPtr,$index,$numAnsiChars);
	}

	function to_s() {
		return CkByteData_to_s($this->_cPtr);
	}

	function appendRandom($numBytes) {
		CkByteData_appendRandom($this->_cPtr,$numBytes);
	}

	function appendInt($v,$littleEndian) {
		CkByteData_appendInt($this->_cPtr,$v,$littleEndian);
	}

	function appendShort($v,$littleEndian) {
		CkByteData_appendShort($this->_cPtr,$v,$littleEndian);
	}

	function getEncodedRange($encoding,$index,$numBytes) {
		return CkByteData_getEncodedRange($this->_cPtr,$encoding,$index,$numBytes);
	}

	function appendRange($byteData,$index,$numBytes) {
		CkByteData_appendRange($this->_cPtr,$byteData,$index,$numBytes);
	}

	function ensureBuffer($numBytes) {
		CkByteData_ensureBuffer($this->_cPtr,$numBytes);
	}

	function findBytes2($byteData,$byteDataLen) {
		return CkByteData_findBytes2($this->_cPtr,$byteData,$byteDataLen);
	}

	function findBytes($byteData) {
		return CkByteData_findBytes($this->_cPtr,$byteData);
	}

	function beginsWith2($byteData,$byteDataLen) {
		return CkByteData_beginsWith2($this->_cPtr,$byteData,$byteDataLen);
	}

	function beginsWith($byteData) {
		return CkByteData_beginsWith($this->_cPtr,$byteData);
	}

	function removeChunk($index,$numBytes) {
		CkByteData_removeChunk($this->_cPtr,$index,$numBytes);
	}

	function byteSwap4321() {
		CkByteData_byteSwap4321($this->_cPtr);
	}

	function pad($blockSize,$paddingScheme) {
		CkByteData_pad($this->_cPtr,$blockSize,$paddingScheme);
	}

	function unpad($blockSize,$paddingScheme) {
		CkByteData_unpad($this->_cPtr,$blockSize,$paddingScheme);
	}

	function is7bit() {
		return CkByteData_is7bit($this->_cPtr);
	}

	function clear() {
		CkByteData_clear($this->_cPtr);
	}

	function getSize() {
		return CkByteData_getSize($this->_cPtr);
	}

	function appendEncoded($str,$encoding) {
		CkByteData_appendEncoded($this->_cPtr,$str,$encoding);
	}

	function encode($encoding,$str) {
		CkByteData_encode($this->_cPtr,$encoding,$str);
	}

	function getData() {
		return CkByteData_getData($this->_cPtr);
	}

	function getBytes() {
		return CkByteData_getBytes($this->_cPtr);
	}

	function getEncoded($encoding) {
		return CkByteData_getEncoded($this->_cPtr,$encoding);
	}

	function append2($data,$numBytes) {
		CkByteData_append2($this->_cPtr,$data,$numBytes);
	}

	function equals2($data,$numBytes) {
		return CkByteData_equals2($this->_cPtr,$data,$numBytes);
	}

	function equals($db) {
		return CkByteData_equals($this->_cPtr,$db);
	}

	function appendStr($str) {
		CkByteData_appendStr($this->_cPtr,$str);
	}

	function appendChar($ch) {
		CkByteData_appendChar($this->_cPtr,$ch);
	}

	function getByte($byteIndex) {
		return CkByteData_getByte($this->_cPtr,$byteIndex);
	}

	function getChar($byteIndex) {
		return CkByteData_getChar($this->_cPtr,$byteIndex);
	}

	function getUInt($byteIndex) {
		return CkByteData_getUInt($this->_cPtr,$byteIndex);
	}

	function getInt($byteIndex) {
		return CkByteData_getInt($this->_cPtr,$byteIndex);
	}

	function getUShort($byteIndex) {
		return CkByteData_getUShort($this->_cPtr,$byteIndex);
	}

	function getShort($byteIndex) {
		return CkByteData_getShort($this->_cPtr,$byteIndex);
	}

	function loadFile($filename) {
		return CkByteData_loadFile($this->_cPtr,$filename);
	}

	function saveFile($filename) {
		return CkByteData_saveFile($this->_cPtr,$filename);
	}

	function appendFile($filename) {
		return CkByteData_appendFile($this->_cPtr,$filename);
	}

	function shorten($numBytes) {
		CkByteData_shorten($this->_cPtr,$numBytes);
	}
}

class CkZipCrc {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkZipCrc') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkZipCrc();
	}

	function get_Utf8() {
		return CkZipCrc_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkZipCrc_put_Utf8($this->_cPtr,$b);
	}

	function FileCrc($filename) {
		return CkZipCrc_FileCrc($this->_cPtr,$filename);
	}

	function CalculateCrc($byteData) {
		return CkZipCrc_CalculateCrc($this->_cPtr,$byteData);
	}

	function MoreData($byteData) {
		CkZipCrc_MoreData($this->_cPtr,$byteData);
	}

	function EndStream() {
		return CkZipCrc_EndStream($this->_cPtr);
	}

	function BeginStream() {
		CkZipCrc_BeginStream($this->_cPtr);
	}

	function toHex($crc) {
		return CkZipCrc_toHex($this->_cPtr,$crc);
	}
}

class CkHtmlToXml {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkHtmlToXml') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkHtmlToXml();
	}

	function get_Utf8() {
		return CkHtmlToXml_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkHtmlToXml_put_Utf8($this->_cPtr,$b);
	}

	function get_DropCustomTags() {
		return CkHtmlToXml_get_DropCustomTags($this->_cPtr);
	}

	function put_DropCustomTags($newVal) {
		CkHtmlToXml_put_DropCustomTags($this->_cPtr,$newVal);
	}

	function get_Html($str) {
		CkHtmlToXml_get_Html($this->_cPtr,$str);
	}

	function html() {
		return CkHtmlToXml_html($this->_cPtr);
	}

	function put_Html($newVal) {
		CkHtmlToXml_put_Html($this->_cPtr,$newVal);
	}

	function get_LastErrorHtml($str) {
		CkHtmlToXml_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkHtmlToXml_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkHtmlToXml_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkHtmlToXml_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkHtmlToXml_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkHtmlToXml_lastErrorXml($this->_cPtr);
	}

	function get_Nbsp() {
		return CkHtmlToXml_get_Nbsp($this->_cPtr);
	}

	function put_Nbsp($newVal) {
		CkHtmlToXml_put_Nbsp($this->_cPtr,$newVal);
	}

	function get_Version($str) {
		CkHtmlToXml_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkHtmlToXml_version($this->_cPtr);
	}

	function get_XmlCharset($str) {
		CkHtmlToXml_get_XmlCharset($this->_cPtr,$str);
	}

	function xmlCharset() {
		return CkHtmlToXml_xmlCharset($this->_cPtr);
	}

	function put_XmlCharset($newVal) {
		CkHtmlToXml_put_XmlCharset($this->_cPtr,$newVal);
	}

	function get_DebugLogFilePath($str) {
		CkHtmlToXml_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkHtmlToXml_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkHtmlToXml_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkHtmlToXml_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkHtmlToXml_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function ConvertFile($inHtmlPath,$destXmlPath) {
		return CkHtmlToXml_ConvertFile($this->_cPtr,$inHtmlPath,$destXmlPath);
	}

	function DropTagType($tagName) {
		CkHtmlToXml_DropTagType($this->_cPtr,$tagName);
	}

	function DropTextFormattingTags() {
		CkHtmlToXml_DropTextFormattingTags($this->_cPtr);
	}

	function IsUnlocked() {
		return CkHtmlToXml_IsUnlocked($this->_cPtr);
	}

	function readFileToString($path,$srcCharset) {
		return CkHtmlToXml_readFileToString($this->_cPtr,$path,$srcCharset);
	}

	function SaveLastError($path) {
		return CkHtmlToXml_SaveLastError($this->_cPtr,$path);
	}

	function SetHtmlBytes($inData) {
		CkHtmlToXml_SetHtmlBytes($this->_cPtr,$inData);
	}

	function SetHtmlFromFile($path) {
		return CkHtmlToXml_SetHtmlFromFile($this->_cPtr,$path);
	}

	function toXml() {
		return CkHtmlToXml_toXml($this->_cPtr);
	}

	function UndropTagType($tagName) {
		CkHtmlToXml_UndropTagType($this->_cPtr,$tagName);
	}

	function UndropTextFormattingTags() {
		CkHtmlToXml_UndropTextFormattingTags($this->_cPtr);
	}

	function UnlockComponent($code) {
		return CkHtmlToXml_UnlockComponent($this->_cPtr,$code);
	}

	function WriteStringToFile($str,$path,$charset) {
		return CkHtmlToXml_WriteStringToFile($this->_cPtr,$str,$path,$charset);
	}

	function xml() {
		return CkHtmlToXml_xml($this->_cPtr);
	}
}

class CkUpload {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkUpload') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkUpload();
	}

	function get_Utf8() {
		return CkUpload_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkUpload_put_Utf8($this->_cPtr,$b);
	}

	function get_ChunkSize() {
		return CkUpload_get_ChunkSize($this->_cPtr);
	}

	function put_ChunkSize($newVal) {
		CkUpload_put_ChunkSize($this->_cPtr,$newVal);
	}

	function get_HeartbeatMs() {
		return CkUpload_get_HeartbeatMs($this->_cPtr);
	}

	function put_HeartbeatMs($newVal) {
		CkUpload_put_HeartbeatMs($this->_cPtr,$newVal);
	}

	function get_Hostname($str) {
		CkUpload_get_Hostname($this->_cPtr,$str);
	}

	function hostname() {
		return CkUpload_hostname($this->_cPtr);
	}

	function put_Hostname($newVal) {
		CkUpload_put_Hostname($this->_cPtr,$newVal);
	}

	function get_IdleTimeoutMs() {
		return CkUpload_get_IdleTimeoutMs($this->_cPtr);
	}

	function put_IdleTimeoutMs($newVal) {
		CkUpload_put_IdleTimeoutMs($this->_cPtr,$newVal);
	}

	function get_LastErrorHtml($str) {
		CkUpload_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkUpload_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkUpload_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkUpload_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkUpload_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkUpload_lastErrorXml($this->_cPtr);
	}

	function get_Login($str) {
		CkUpload_get_Login($this->_cPtr,$str);
	}

	function login() {
		return CkUpload_login($this->_cPtr);
	}

	function put_Login($newVal) {
		CkUpload_put_Login($this->_cPtr,$newVal);
	}

	function get_NumBytesSent() {
		return CkUpload_get_NumBytesSent($this->_cPtr);
	}

	function get_Password($str) {
		CkUpload_get_Password($this->_cPtr,$str);
	}

	function password() {
		return CkUpload_password($this->_cPtr);
	}

	function put_Password($newVal) {
		CkUpload_put_Password($this->_cPtr,$newVal);
	}

	function get_Path($str) {
		CkUpload_get_Path($this->_cPtr,$str);
	}

	function path() {
		return CkUpload_path($this->_cPtr);
	}

	function put_Path($newVal) {
		CkUpload_put_Path($this->_cPtr,$newVal);
	}

	function get_PercentUploaded() {
		return CkUpload_get_PercentUploaded($this->_cPtr);
	}

	function get_Port() {
		return CkUpload_get_Port($this->_cPtr);
	}

	function put_Port($newVal) {
		CkUpload_put_Port($this->_cPtr,$newVal);
	}

	function get_ProxyDomain($str) {
		CkUpload_get_ProxyDomain($this->_cPtr,$str);
	}

	function proxyDomain() {
		return CkUpload_proxyDomain($this->_cPtr);
	}

	function put_ProxyDomain($newVal) {
		CkUpload_put_ProxyDomain($this->_cPtr,$newVal);
	}

	function get_ProxyLogin($str) {
		CkUpload_get_ProxyLogin($this->_cPtr,$str);
	}

	function proxyLogin() {
		return CkUpload_proxyLogin($this->_cPtr);
	}

	function put_ProxyLogin($newVal) {
		CkUpload_put_ProxyLogin($this->_cPtr,$newVal);
	}

	function get_ProxyPassword($str) {
		CkUpload_get_ProxyPassword($this->_cPtr,$str);
	}

	function proxyPassword() {
		return CkUpload_proxyPassword($this->_cPtr);
	}

	function put_ProxyPassword($newVal) {
		CkUpload_put_ProxyPassword($this->_cPtr,$newVal);
	}

	function get_ProxyPort() {
		return CkUpload_get_ProxyPort($this->_cPtr);
	}

	function put_ProxyPort($newVal) {
		CkUpload_put_ProxyPort($this->_cPtr,$newVal);
	}

	function get_ResponseBody($outBytes) {
		CkUpload_get_ResponseBody($this->_cPtr,$outBytes);
	}

	function get_ResponseHeader($str) {
		CkUpload_get_ResponseHeader($this->_cPtr,$str);
	}

	function responseHeader() {
		return CkUpload_responseHeader($this->_cPtr);
	}

	function get_ResponseStatus() {
		return CkUpload_get_ResponseStatus($this->_cPtr);
	}

	function get_Ssl() {
		return CkUpload_get_Ssl($this->_cPtr);
	}

	function put_Ssl($newVal) {
		CkUpload_put_Ssl($this->_cPtr,$newVal);
	}

	function get_TotalUploadSize() {
		return CkUpload_get_TotalUploadSize($this->_cPtr);
	}

	function get_UploadInProgress() {
		return CkUpload_get_UploadInProgress($this->_cPtr);
	}

	function get_UploadSuccess() {
		return CkUpload_get_UploadSuccess($this->_cPtr);
	}

	function get_Version($str) {
		CkUpload_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkUpload_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkUpload_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkUpload_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkUpload_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkUpload_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkUpload_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function AbortUpload() {
		CkUpload_AbortUpload($this->_cPtr);
	}

	function AddCustomHeader($name,$value) {
		CkUpload_AddCustomHeader($this->_cPtr,$name,$value);
	}

	function AddFileReference($name,$path) {
		CkUpload_AddFileReference($this->_cPtr,$name,$path);
	}

	function AddParam($name,$value) {
		CkUpload_AddParam($this->_cPtr,$name,$value);
	}

	function BeginUpload() {
		return CkUpload_BeginUpload($this->_cPtr);
	}

	function BlockingUpload() {
		return CkUpload_BlockingUpload($this->_cPtr);
	}

	function ClearFileReferences() {
		CkUpload_ClearFileReferences($this->_cPtr);
	}

	function ClearParams() {
		CkUpload_ClearParams($this->_cPtr);
	}

	function SaveLastError($path) {
		return CkUpload_SaveLastError($this->_cPtr,$path);
	}

	function SleepMs($millisec) {
		CkUpload_SleepMs($this->_cPtr,$millisec);
	}

	function UploadToMemory($outData) {
		return CkUpload_UploadToMemory($this->_cPtr,$outData);
	}
}

class CkPublicKey {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkPublicKey') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkPublicKey();
	}

	function get_Utf8() {
		return CkPublicKey_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkPublicKey_put_Utf8($this->_cPtr,$b);
	}

	function get_LastErrorHtml($str) {
		CkPublicKey_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkPublicKey_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkPublicKey_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkPublicKey_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkPublicKey_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkPublicKey_lastErrorXml($this->_cPtr);
	}

	function get_Version($str) {
		CkPublicKey_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkPublicKey_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkPublicKey_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkPublicKey_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkPublicKey_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkPublicKey_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkPublicKey_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function GetOpenSslDer($outData) {
		return CkPublicKey_GetOpenSslDer($this->_cPtr,$outData);
	}

	function getOpenSslPem() {
		return CkPublicKey_getOpenSslPem($this->_cPtr);
	}

	function openSslPem() {
		return CkPublicKey_openSslPem($this->_cPtr);
	}

	function GetRsaDer($outData) {
		return CkPublicKey_GetRsaDer($this->_cPtr,$outData);
	}

	function getXml() {
		return CkPublicKey_getXml($this->_cPtr);
	}

	function xml() {
		return CkPublicKey_xml($this->_cPtr);
	}

	function LoadOpenSslDer($data) {
		return CkPublicKey_LoadOpenSslDer($this->_cPtr,$data);
	}

	function LoadOpenSslDerFile($path) {
		return CkPublicKey_LoadOpenSslDerFile($this->_cPtr,$path);
	}

	function LoadOpenSslPem($str) {
		return CkPublicKey_LoadOpenSslPem($this->_cPtr,$str);
	}

	function LoadOpenSslPemFile($path) {
		return CkPublicKey_LoadOpenSslPemFile($this->_cPtr,$path);
	}

	function LoadPkcs1Pem($str) {
		return CkPublicKey_LoadPkcs1Pem($this->_cPtr,$str);
	}

	function LoadRsaDer($data) {
		return CkPublicKey_LoadRsaDer($this->_cPtr,$data);
	}

	function LoadRsaDerFile($path) {
		return CkPublicKey_LoadRsaDerFile($this->_cPtr,$path);
	}

	function LoadXml($xml) {
		return CkPublicKey_LoadXml($this->_cPtr,$xml);
	}

	function LoadXmlFile($path) {
		return CkPublicKey_LoadXmlFile($this->_cPtr,$path);
	}

	function SaveLastError($path) {
		return CkPublicKey_SaveLastError($this->_cPtr,$path);
	}

	function SaveOpenSslDerFile($path) {
		return CkPublicKey_SaveOpenSslDerFile($this->_cPtr,$path);
	}

	function SaveOpenSslPemFile($path) {
		return CkPublicKey_SaveOpenSslPemFile($this->_cPtr,$path);
	}

	function SaveRsaDerFile($path) {
		return CkPublicKey_SaveRsaDerFile($this->_cPtr,$path);
	}

	function SaveXmlFile($path) {
		return CkPublicKey_SaveXmlFile($this->_cPtr,$path);
	}
}

class CkPrivateKey {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkPrivateKey') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkPrivateKey();
	}

	function get_Utf8() {
		return CkPrivateKey_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkPrivateKey_put_Utf8($this->_cPtr,$b);
	}

	function get_LastErrorHtml($str) {
		CkPrivateKey_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkPrivateKey_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkPrivateKey_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkPrivateKey_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkPrivateKey_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkPrivateKey_lastErrorXml($this->_cPtr);
	}

	function get_Version($str) {
		CkPrivateKey_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkPrivateKey_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkPrivateKey_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkPrivateKey_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkPrivateKey_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkPrivateKey_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkPrivateKey_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function GetPkcs8($outData) {
		return CkPrivateKey_GetPkcs8($this->_cPtr,$outData);
	}

	function GetPkcs8Encrypted($password,$outBytes) {
		return CkPrivateKey_GetPkcs8Encrypted($this->_cPtr,$password,$outBytes);
	}

	function getPkcs8EncryptedPem($password) {
		return CkPrivateKey_getPkcs8EncryptedPem($this->_cPtr,$password);
	}

	function pkcs8EncryptedPem($password) {
		return CkPrivateKey_pkcs8EncryptedPem($this->_cPtr,$password);
	}

	function getPkcs8Pem() {
		return CkPrivateKey_getPkcs8Pem($this->_cPtr);
	}

	function pkcs8Pem() {
		return CkPrivateKey_pkcs8Pem($this->_cPtr);
	}

	function GetRsaDer($outData) {
		return CkPrivateKey_GetRsaDer($this->_cPtr,$outData);
	}

	function getRsaPem() {
		return CkPrivateKey_getRsaPem($this->_cPtr);
	}

	function rsaPem() {
		return CkPrivateKey_rsaPem($this->_cPtr);
	}

	function getXml() {
		return CkPrivateKey_getXml($this->_cPtr);
	}

	function xml() {
		return CkPrivateKey_xml($this->_cPtr);
	}

	function LoadEncryptedPem($pemStr,$password) {
		return CkPrivateKey_LoadEncryptedPem($this->_cPtr,$pemStr,$password);
	}

	function LoadEncryptedPemFile($path,$password) {
		return CkPrivateKey_LoadEncryptedPemFile($this->_cPtr,$path,$password);
	}

	function LoadPem($str) {
		return CkPrivateKey_LoadPem($this->_cPtr,$str);
	}

	function LoadPemFile($path) {
		return CkPrivateKey_LoadPemFile($this->_cPtr,$path);
	}

	function LoadPkcs8($data) {
		return CkPrivateKey_LoadPkcs8($this->_cPtr,$data);
	}

	function LoadPkcs8Encrypted($data,$password) {
		return CkPrivateKey_LoadPkcs8Encrypted($this->_cPtr,$data,$password);
	}

	function LoadPkcs8EncryptedFile($path,$password) {
		return CkPrivateKey_LoadPkcs8EncryptedFile($this->_cPtr,$path,$password);
	}

	function LoadPkcs8File($path) {
		return CkPrivateKey_LoadPkcs8File($this->_cPtr,$path);
	}

	function LoadRsaDer($data) {
		return CkPrivateKey_LoadRsaDer($this->_cPtr,$data);
	}

	function LoadRsaDerFile($path) {
		return CkPrivateKey_LoadRsaDerFile($this->_cPtr,$path);
	}

	function LoadXml($xml) {
		return CkPrivateKey_LoadXml($this->_cPtr,$xml);
	}

	function LoadXmlFile($path) {
		return CkPrivateKey_LoadXmlFile($this->_cPtr,$path);
	}

	function SaveLastError($path) {
		return CkPrivateKey_SaveLastError($this->_cPtr,$path);
	}

	function SavePkcs8EncryptedFile($password,$path) {
		return CkPrivateKey_SavePkcs8EncryptedFile($this->_cPtr,$password,$path);
	}

	function SavePkcs8EncryptedPemFile($password,$path) {
		return CkPrivateKey_SavePkcs8EncryptedPemFile($this->_cPtr,$password,$path);
	}

	function SavePkcs8File($path) {
		return CkPrivateKey_SavePkcs8File($this->_cPtr,$path);
	}

	function SavePkcs8PemFile($path) {
		return CkPrivateKey_SavePkcs8PemFile($this->_cPtr,$path);
	}

	function SaveRsaDerFile($path) {
		return CkPrivateKey_SaveRsaDerFile($this->_cPtr,$path);
	}

	function SaveRsaPemFile($path) {
		return CkPrivateKey_SaveRsaPemFile($this->_cPtr,$path);
	}

	function SaveXmlFile($path) {
		return CkPrivateKey_SaveXmlFile($this->_cPtr,$path);
	}
}

class CkSocket {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkSocket') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkSocket();
	}

	function get_Utf8() {
		return CkSocket_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkSocket_put_Utf8($this->_cPtr,$b);
	}

	function get_AsyncAcceptFinished() {
		return CkSocket_get_AsyncAcceptFinished($this->_cPtr);
	}

	function get_AsyncAcceptLog($str) {
		CkSocket_get_AsyncAcceptLog($this->_cPtr,$str);
	}

	function asyncAcceptLog() {
		return CkSocket_asyncAcceptLog($this->_cPtr);
	}

	function get_AsyncAcceptSuccess() {
		return CkSocket_get_AsyncAcceptSuccess($this->_cPtr);
	}

	function get_AsyncConnectFinished() {
		return CkSocket_get_AsyncConnectFinished($this->_cPtr);
	}

	function get_AsyncConnectLog($str) {
		CkSocket_get_AsyncConnectLog($this->_cPtr,$str);
	}

	function asyncConnectLog() {
		return CkSocket_asyncConnectLog($this->_cPtr);
	}

	function get_AsyncConnectSuccess() {
		return CkSocket_get_AsyncConnectSuccess($this->_cPtr);
	}

	function get_AsyncDnsFinished() {
		return CkSocket_get_AsyncDnsFinished($this->_cPtr);
	}

	function get_AsyncDnsLog($str) {
		CkSocket_get_AsyncDnsLog($this->_cPtr,$str);
	}

	function asyncDnsLog() {
		return CkSocket_asyncDnsLog($this->_cPtr);
	}

	function get_AsyncDnsResult($str) {
		CkSocket_get_AsyncDnsResult($this->_cPtr,$str);
	}

	function asyncDnsResult() {
		return CkSocket_asyncDnsResult($this->_cPtr);
	}

	function get_AsyncDnsSuccess() {
		return CkSocket_get_AsyncDnsSuccess($this->_cPtr);
	}

	function get_AsyncReceiveFinished() {
		return CkSocket_get_AsyncReceiveFinished($this->_cPtr);
	}

	function get_AsyncReceiveLog($str) {
		CkSocket_get_AsyncReceiveLog($this->_cPtr,$str);
	}

	function asyncReceiveLog() {
		return CkSocket_asyncReceiveLog($this->_cPtr);
	}

	function get_AsyncReceiveSuccess() {
		return CkSocket_get_AsyncReceiveSuccess($this->_cPtr);
	}

	function get_AsyncReceivedBytes($outBytes) {
		CkSocket_get_AsyncReceivedBytes($this->_cPtr,$outBytes);
	}

	function get_AsyncReceivedString($str) {
		CkSocket_get_AsyncReceivedString($this->_cPtr,$str);
	}

	function asyncReceivedString() {
		return CkSocket_asyncReceivedString($this->_cPtr);
	}

	function get_AsyncSendFinished() {
		return CkSocket_get_AsyncSendFinished($this->_cPtr);
	}

	function get_AsyncSendLog($str) {
		CkSocket_get_AsyncSendLog($this->_cPtr,$str);
	}

	function asyncSendLog() {
		return CkSocket_asyncSendLog($this->_cPtr);
	}

	function get_AsyncSendSuccess() {
		return CkSocket_get_AsyncSendSuccess($this->_cPtr);
	}

	function get_BigEndian() {
		return CkSocket_get_BigEndian($this->_cPtr);
	}

	function put_BigEndian($newVal) {
		CkSocket_put_BigEndian($this->_cPtr,$newVal);
	}

	function get_ClientIpAddress($str) {
		CkSocket_get_ClientIpAddress($this->_cPtr,$str);
	}

	function clientIpAddress() {
		return CkSocket_clientIpAddress($this->_cPtr);
	}

	function put_ClientIpAddress($newVal) {
		CkSocket_put_ClientIpAddress($this->_cPtr,$newVal);
	}

	function get_ClientPort() {
		return CkSocket_get_ClientPort($this->_cPtr);
	}

	function put_ClientPort($newVal) {
		CkSocket_put_ClientPort($this->_cPtr,$newVal);
	}

	function get_ConnectFailReason() {
		return CkSocket_get_ConnectFailReason($this->_cPtr);
	}

	function get_DebugConnectDelayMs() {
		return CkSocket_get_DebugConnectDelayMs($this->_cPtr);
	}

	function put_DebugConnectDelayMs($newVal) {
		CkSocket_put_DebugConnectDelayMs($this->_cPtr,$newVal);
	}

	function get_DebugDnsDelayMs() {
		return CkSocket_get_DebugDnsDelayMs($this->_cPtr);
	}

	function put_DebugDnsDelayMs($newVal) {
		CkSocket_put_DebugDnsDelayMs($this->_cPtr,$newVal);
	}

	function get_ElapsedSeconds() {
		return CkSocket_get_ElapsedSeconds($this->_cPtr);
	}

	function get_HeartbeatMs() {
		return CkSocket_get_HeartbeatMs($this->_cPtr);
	}

	function put_HeartbeatMs($newVal) {
		CkSocket_put_HeartbeatMs($this->_cPtr,$newVal);
	}

	function get_HttpProxyAuthMethod($str) {
		CkSocket_get_HttpProxyAuthMethod($this->_cPtr,$str);
	}

	function httpProxyAuthMethod() {
		return CkSocket_httpProxyAuthMethod($this->_cPtr);
	}

	function put_HttpProxyAuthMethod($newVal) {
		CkSocket_put_HttpProxyAuthMethod($this->_cPtr,$newVal);
	}

	function get_HttpProxyDomain($str) {
		CkSocket_get_HttpProxyDomain($this->_cPtr,$str);
	}

	function httpProxyDomain() {
		return CkSocket_httpProxyDomain($this->_cPtr);
	}

	function put_HttpProxyDomain($newVal) {
		CkSocket_put_HttpProxyDomain($this->_cPtr,$newVal);
	}

	function get_HttpProxyHostname($str) {
		CkSocket_get_HttpProxyHostname($this->_cPtr,$str);
	}

	function httpProxyHostname() {
		return CkSocket_httpProxyHostname($this->_cPtr);
	}

	function put_HttpProxyHostname($newVal) {
		CkSocket_put_HttpProxyHostname($this->_cPtr,$newVal);
	}

	function get_HttpProxyPassword($str) {
		CkSocket_get_HttpProxyPassword($this->_cPtr,$str);
	}

	function httpProxyPassword() {
		return CkSocket_httpProxyPassword($this->_cPtr);
	}

	function put_HttpProxyPassword($newVal) {
		CkSocket_put_HttpProxyPassword($this->_cPtr,$newVal);
	}

	function get_HttpProxyPort() {
		return CkSocket_get_HttpProxyPort($this->_cPtr);
	}

	function put_HttpProxyPort($newVal) {
		CkSocket_put_HttpProxyPort($this->_cPtr,$newVal);
	}

	function get_HttpProxyUsername($str) {
		CkSocket_get_HttpProxyUsername($this->_cPtr,$str);
	}

	function httpProxyUsername() {
		return CkSocket_httpProxyUsername($this->_cPtr);
	}

	function put_HttpProxyUsername($newVal) {
		CkSocket_put_HttpProxyUsername($this->_cPtr,$newVal);
	}

	function get_IsConnected() {
		return CkSocket_get_IsConnected($this->_cPtr);
	}

	function get_KeepSessionLog() {
		return CkSocket_get_KeepSessionLog($this->_cPtr);
	}

	function put_KeepSessionLog($newVal) {
		CkSocket_put_KeepSessionLog($this->_cPtr,$newVal);
	}

	function get_LastErrorHtml($str) {
		CkSocket_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkSocket_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkSocket_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkSocket_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkSocket_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkSocket_lastErrorXml($this->_cPtr);
	}

	function get_LastMethodFailed() {
		return CkSocket_get_LastMethodFailed($this->_cPtr);
	}

	function get_ListenIpv6() {
		return CkSocket_get_ListenIpv6($this->_cPtr);
	}

	function put_ListenIpv6($newVal) {
		CkSocket_put_ListenIpv6($this->_cPtr,$newVal);
	}

	function get_LocalIpAddress($str) {
		CkSocket_get_LocalIpAddress($this->_cPtr,$str);
	}

	function localIpAddress() {
		return CkSocket_localIpAddress($this->_cPtr);
	}

	function get_LocalPort() {
		return CkSocket_get_LocalPort($this->_cPtr);
	}

	function get_MaxReadIdleMs() {
		return CkSocket_get_MaxReadIdleMs($this->_cPtr);
	}

	function put_MaxReadIdleMs($newVal) {
		CkSocket_put_MaxReadIdleMs($this->_cPtr,$newVal);
	}

	function get_MaxSendIdleMs() {
		return CkSocket_get_MaxSendIdleMs($this->_cPtr);
	}

	function put_MaxSendIdleMs($newVal) {
		CkSocket_put_MaxSendIdleMs($this->_cPtr,$newVal);
	}

	function get_MyIpAddress($str) {
		CkSocket_get_MyIpAddress($this->_cPtr,$str);
	}

	function myIpAddress() {
		return CkSocket_myIpAddress($this->_cPtr);
	}

	function get_NumReceivedClientCerts() {
		return CkSocket_get_NumReceivedClientCerts($this->_cPtr);
	}

	function get_NumSocketsInSet() {
		return CkSocket_get_NumSocketsInSet($this->_cPtr);
	}

	function get_NumSslAcceptableClientCAs() {
		return CkSocket_get_NumSslAcceptableClientCAs($this->_cPtr);
	}

	function get_ObjectId() {
		return CkSocket_get_ObjectId($this->_cPtr);
	}

	function get_ReceivePacketSize() {
		return CkSocket_get_ReceivePacketSize($this->_cPtr);
	}

	function put_ReceivePacketSize($newVal) {
		CkSocket_put_ReceivePacketSize($this->_cPtr,$newVal);
	}

	function get_ReceivedCount() {
		return CkSocket_get_ReceivedCount($this->_cPtr);
	}

	function put_ReceivedCount($newVal) {
		CkSocket_put_ReceivedCount($this->_cPtr,$newVal);
	}

	function get_RemoteIpAddress($str) {
		CkSocket_get_RemoteIpAddress($this->_cPtr,$str);
	}

	function remoteIpAddress() {
		return CkSocket_remoteIpAddress($this->_cPtr);
	}

	function get_RemotePort() {
		return CkSocket_get_RemotePort($this->_cPtr);
	}

	function get_SelectorIndex() {
		return CkSocket_get_SelectorIndex($this->_cPtr);
	}

	function put_SelectorIndex($newVal) {
		CkSocket_put_SelectorIndex($this->_cPtr,$newVal);
	}

	function get_SelectorReadIndex() {
		return CkSocket_get_SelectorReadIndex($this->_cPtr);
	}

	function put_SelectorReadIndex($newVal) {
		CkSocket_put_SelectorReadIndex($this->_cPtr,$newVal);
	}

	function get_SelectorWriteIndex() {
		return CkSocket_get_SelectorWriteIndex($this->_cPtr);
	}

	function put_SelectorWriteIndex($newVal) {
		CkSocket_put_SelectorWriteIndex($this->_cPtr,$newVal);
	}

	function get_SendPacketSize() {
		return CkSocket_get_SendPacketSize($this->_cPtr);
	}

	function put_SendPacketSize($newVal) {
		CkSocket_put_SendPacketSize($this->_cPtr,$newVal);
	}

	function get_SessionLog($str) {
		CkSocket_get_SessionLog($this->_cPtr,$str);
	}

	function sessionLog() {
		return CkSocket_sessionLog($this->_cPtr);
	}

	function get_SessionLogEncoding($str) {
		CkSocket_get_SessionLogEncoding($this->_cPtr,$str);
	}

	function sessionLogEncoding() {
		return CkSocket_sessionLogEncoding($this->_cPtr);
	}

	function put_SessionLogEncoding($newVal) {
		CkSocket_put_SessionLogEncoding($this->_cPtr,$newVal);
	}

	function get_SoRcvBuf() {
		return CkSocket_get_SoRcvBuf($this->_cPtr);
	}

	function put_SoRcvBuf($newVal) {
		CkSocket_put_SoRcvBuf($this->_cPtr,$newVal);
	}

	function get_SoReuseAddr() {
		return CkSocket_get_SoReuseAddr($this->_cPtr);
	}

	function put_SoReuseAddr($newVal) {
		CkSocket_put_SoReuseAddr($this->_cPtr,$newVal);
	}

	function get_SoSndBuf() {
		return CkSocket_get_SoSndBuf($this->_cPtr);
	}

	function put_SoSndBuf($newVal) {
		CkSocket_put_SoSndBuf($this->_cPtr,$newVal);
	}

	function get_SocksHostname($str) {
		CkSocket_get_SocksHostname($this->_cPtr,$str);
	}

	function socksHostname() {
		return CkSocket_socksHostname($this->_cPtr);
	}

	function put_SocksHostname($newVal) {
		CkSocket_put_SocksHostname($this->_cPtr,$newVal);
	}

	function get_SocksPassword($str) {
		CkSocket_get_SocksPassword($this->_cPtr,$str);
	}

	function socksPassword() {
		return CkSocket_socksPassword($this->_cPtr);
	}

	function put_SocksPassword($newVal) {
		CkSocket_put_SocksPassword($this->_cPtr,$newVal);
	}

	function get_SocksPort() {
		return CkSocket_get_SocksPort($this->_cPtr);
	}

	function put_SocksPort($newVal) {
		CkSocket_put_SocksPort($this->_cPtr,$newVal);
	}

	function get_SocksUsername($str) {
		CkSocket_get_SocksUsername($this->_cPtr,$str);
	}

	function socksUsername() {
		return CkSocket_socksUsername($this->_cPtr);
	}

	function put_SocksUsername($newVal) {
		CkSocket_put_SocksUsername($this->_cPtr,$newVal);
	}

	function get_SocksVersion() {
		return CkSocket_get_SocksVersion($this->_cPtr);
	}

	function put_SocksVersion($newVal) {
		CkSocket_put_SocksVersion($this->_cPtr,$newVal);
	}

	function get_Ssl() {
		return CkSocket_get_Ssl($this->_cPtr);
	}

	function put_Ssl($newVal) {
		CkSocket_put_Ssl($this->_cPtr,$newVal);
	}

	function get_SslProtocol($str) {
		CkSocket_get_SslProtocol($this->_cPtr,$str);
	}

	function sslProtocol() {
		return CkSocket_sslProtocol($this->_cPtr);
	}

	function put_SslProtocol($newVal) {
		CkSocket_put_SslProtocol($this->_cPtr,$newVal);
	}

	function get_StringCharset($str) {
		CkSocket_get_StringCharset($this->_cPtr,$str);
	}

	function stringCharset() {
		return CkSocket_stringCharset($this->_cPtr);
	}

	function put_StringCharset($newVal) {
		CkSocket_put_StringCharset($this->_cPtr,$newVal);
	}

	function get_TcpNoDelay() {
		return CkSocket_get_TcpNoDelay($this->_cPtr);
	}

	function put_TcpNoDelay($newVal) {
		CkSocket_put_TcpNoDelay($this->_cPtr,$newVal);
	}

	function get_UserData($str) {
		CkSocket_get_UserData($this->_cPtr,$str);
	}

	function userData() {
		return CkSocket_userData($this->_cPtr);
	}

	function put_UserData($newVal) {
		CkSocket_put_UserData($this->_cPtr,$newVal);
	}

	function get_Version($str) {
		CkSocket_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkSocket_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkSocket_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkSocket_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkSocket_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkSocket_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkSocket_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function AcceptNextConnection($maxWaitMs) {
		$r=CkSocket_AcceptNextConnection($this->_cPtr,$maxWaitMs);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkSocket($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function AddSslAcceptableClientCaDn($certAuthDN) {
		return CkSocket_AddSslAcceptableClientCaDn($this->_cPtr,$certAuthDN);
	}

	function AsyncAcceptAbort() {
		CkSocket_AsyncAcceptAbort($this->_cPtr);
	}

	function AsyncAcceptSocket() {
		$r=CkSocket_AsyncAcceptSocket($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkSocket($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function AsyncAcceptStart($maxWaitMs) {
		return CkSocket_AsyncAcceptStart($this->_cPtr,$maxWaitMs);
	}

	function AsyncConnectAbort() {
		CkSocket_AsyncConnectAbort($this->_cPtr);
	}

	function AsyncConnectStart($hostname,$port,$ssl,$maxWaitMs) {
		return CkSocket_AsyncConnectStart($this->_cPtr,$hostname,$port,$ssl,$maxWaitMs);
	}

	function AsyncDnsAbort() {
		CkSocket_AsyncDnsAbort($this->_cPtr);
	}

	function AsyncDnsStart($hostname,$maxWaitMs) {
		return CkSocket_AsyncDnsStart($this->_cPtr,$hostname,$maxWaitMs);
	}

	function AsyncReceiveAbort() {
		CkSocket_AsyncReceiveAbort($this->_cPtr);
	}

	function AsyncReceiveBytes() {
		return CkSocket_AsyncReceiveBytes($this->_cPtr);
	}

	function AsyncReceiveBytesN($numBytes) {
		return CkSocket_AsyncReceiveBytesN($this->_cPtr,$numBytes);
	}

	function AsyncReceiveString() {
		return CkSocket_AsyncReceiveString($this->_cPtr);
	}

	function AsyncReceiveToCRLF() {
		return CkSocket_AsyncReceiveToCRLF($this->_cPtr);
	}

	function AsyncReceiveUntilMatch($matchStr) {
		return CkSocket_AsyncReceiveUntilMatch($this->_cPtr,$matchStr);
	}

	function AsyncSendAbort() {
		CkSocket_AsyncSendAbort($this->_cPtr);
	}

	function AsyncSendByteData($data) {
		return CkSocket_AsyncSendByteData($this->_cPtr,$data);
	}

	function AsyncSendBytes($pByteData,$szByteData) {
		return CkSocket_AsyncSendBytes($this->_cPtr,$pByteData,$szByteData);
	}

	function AsyncSendString($str) {
		return CkSocket_AsyncSendString($this->_cPtr,$str);
	}

	function BindAndListen($port,$backlog) {
		return CkSocket_BindAndListen($this->_cPtr,$port,$backlog);
	}

	function buildHttpGetRequest($url) {
		return CkSocket_buildHttpGetRequest($this->_cPtr,$url);
	}

	function CheckWriteable($maxWaitMs) {
		return CkSocket_CheckWriteable($this->_cPtr,$maxWaitMs);
	}

	function ClearSessionLog() {
		CkSocket_ClearSessionLog($this->_cPtr);
	}

	function CloneSocket() {
		$r=CkSocket_CloneSocket($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkSocket($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function Close($maxWaitMs) {
		CkSocket_Close($this->_cPtr,$maxWaitMs);
	}

	function Connect($hostname,$port,$ssl,$maxWaitMs) {
		return CkSocket_Connect($this->_cPtr,$hostname,$port,$ssl,$maxWaitMs);
	}

	function ConvertFromSsl() {
		return CkSocket_ConvertFromSsl($this->_cPtr);
	}

	function ConvertToSsl() {
		return CkSocket_ConvertToSsl($this->_cPtr);
	}

	function dnsLookup($hostname,$maxWaitMs) {
		return CkSocket_dnsLookup($this->_cPtr,$hostname,$maxWaitMs);
	}

	function GetMyCert() {
		$r=CkSocket_GetMyCert($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkCert($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetReceivedClientCert($index) {
		$r=CkSocket_GetReceivedClientCert($this->_cPtr,$index);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkCert($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function getSslAcceptableClientCaDn($index) {
		return CkSocket_getSslAcceptableClientCaDn($this->_cPtr,$index);
	}

	function sslAcceptableClientCaDn($index) {
		return CkSocket_sslAcceptableClientCaDn($this->_cPtr,$index);
	}

	function GetSslServerCert() {
		$r=CkSocket_GetSslServerCert($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkCert($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function InitSslServer($cert) {
		return CkSocket_InitSslServer($this->_cPtr,$cert);
	}

	function IsUnlocked() {
		return CkSocket_IsUnlocked($this->_cPtr);
	}

	function PollDataAvailable() {
		return CkSocket_PollDataAvailable($this->_cPtr);
	}

	function ReceiveBytes($outData) {
		return CkSocket_ReceiveBytes($this->_cPtr,$outData);
	}

	function ReceiveBytesN($numBytes,$outData) {
		return CkSocket_ReceiveBytesN($this->_cPtr,$numBytes,$outData);
	}

	function ReceiveBytesToFile($appendPath) {
		return CkSocket_ReceiveBytesToFile($this->_cPtr,$appendPath);
	}

	function ReceiveCount() {
		return CkSocket_ReceiveCount($this->_cPtr);
	}

	function receiveString() {
		return CkSocket_receiveString($this->_cPtr);
	}

	function receiveStringMaxN($maxBytes) {
		return CkSocket_receiveStringMaxN($this->_cPtr,$maxBytes);
	}

	function receiveStringUntilByte($byteValue) {
		return CkSocket_receiveStringUntilByte($this->_cPtr,$byteValue);
	}

	function receiveToCRLF() {
		return CkSocket_receiveToCRLF($this->_cPtr);
	}

	function ReceiveUntilByte($byteValue,$outBytes) {
		return CkSocket_ReceiveUntilByte($this->_cPtr,$byteValue,$outBytes);
	}

	function receiveUntilMatch($matchStr) {
		return CkSocket_receiveUntilMatch($this->_cPtr,$matchStr);
	}

	function SaveLastError($path) {
		return CkSocket_SaveLastError($this->_cPtr,$path);
	}

	function SelectForReading($timeoutMs) {
		return CkSocket_SelectForReading($this->_cPtr,$timeoutMs);
	}

	function SelectForWriting($timeoutMs) {
		return CkSocket_SelectForWriting($this->_cPtr,$timeoutMs);
	}

	function SendByteData($data) {
		return CkSocket_SendByteData($this->_cPtr,$data);
	}

	function SendBytes($pByteData,$szByteData) {
		return CkSocket_SendBytes($this->_cPtr,$pByteData,$szByteData);
	}

	function SendCount($byteCount) {
		return CkSocket_SendCount($this->_cPtr,$byteCount);
	}

	function SendString($str) {
		return CkSocket_SendString($this->_cPtr,$str);
	}

	function SetSslClientCert($cert) {
		return CkSocket_SetSslClientCert($this->_cPtr,$cert);
	}

	function SetSslClientCertPem($pemDataOrPath,$pemPassword) {
		return CkSocket_SetSslClientCertPem($this->_cPtr,$pemDataOrPath,$pemPassword);
	}

	function SetSslClientCertPfx($pfxPath,$pfxPassword) {
		return CkSocket_SetSslClientCertPfx($this->_cPtr,$pfxPath,$pfxPassword);
	}

	function SleepMs($millisec) {
		CkSocket_SleepMs($this->_cPtr,$millisec);
	}

	function StartTiming() {
		CkSocket_StartTiming($this->_cPtr);
	}

	function TakeSocket($sock) {
		return CkSocket_TakeSocket($this->_cPtr,$sock);
	}

	function UnlockComponent($code) {
		return CkSocket_UnlockComponent($this->_cPtr,$code);
	}
}

class CkOmaDrm {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkOmaDrm') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkOmaDrm();
	}

	function get_Utf8() {
		return CkOmaDrm_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkOmaDrm_put_Utf8($this->_cPtr,$b);
	}

	function get_Base64Key($str) {
		CkOmaDrm_get_Base64Key($this->_cPtr,$str);
	}

	function base64Key() {
		return CkOmaDrm_base64Key($this->_cPtr);
	}

	function put_Base64Key($newVal) {
		CkOmaDrm_put_Base64Key($this->_cPtr,$newVal);
	}

	function get_ContentType($str) {
		CkOmaDrm_get_ContentType($this->_cPtr,$str);
	}

	function contentType() {
		return CkOmaDrm_contentType($this->_cPtr);
	}

	function put_ContentType($newVal) {
		CkOmaDrm_put_ContentType($this->_cPtr,$newVal);
	}

	function get_ContentUri($str) {
		CkOmaDrm_get_ContentUri($this->_cPtr,$str);
	}

	function contentUri() {
		return CkOmaDrm_contentUri($this->_cPtr);
	}

	function put_ContentUri($newVal) {
		CkOmaDrm_put_ContentUri($this->_cPtr,$newVal);
	}

	function get_DecryptedData($outBytes) {
		CkOmaDrm_get_DecryptedData($this->_cPtr,$outBytes);
	}

	function get_DrmContentVersion() {
		return CkOmaDrm_get_DrmContentVersion($this->_cPtr);
	}

	function get_EncryptedData($outBytes) {
		CkOmaDrm_get_EncryptedData($this->_cPtr,$outBytes);
	}

	function get_Headers($str) {
		CkOmaDrm_get_Headers($this->_cPtr,$str);
	}

	function headers() {
		return CkOmaDrm_headers($this->_cPtr);
	}

	function put_Headers($newVal) {
		CkOmaDrm_put_Headers($this->_cPtr,$newVal);
	}

	function get_IV($outBytes) {
		CkOmaDrm_get_IV($this->_cPtr,$outBytes);
	}

	function put_IV($inBytes) {
		CkOmaDrm_put_IV($this->_cPtr,$inBytes);
	}

	function get_LastErrorHtml($str) {
		CkOmaDrm_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkOmaDrm_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkOmaDrm_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkOmaDrm_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkOmaDrm_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkOmaDrm_lastErrorXml($this->_cPtr);
	}

	function get_Version($str) {
		CkOmaDrm_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkOmaDrm_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkOmaDrm_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkOmaDrm_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkOmaDrm_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkOmaDrm_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkOmaDrm_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function CreateDcfFile($path) {
		return CkOmaDrm_CreateDcfFile($this->_cPtr,$path);
	}

	function getHeaderField($fieldName) {
		return CkOmaDrm_getHeaderField($this->_cPtr,$fieldName);
	}

	function headerField($fieldName) {
		return CkOmaDrm_headerField($this->_cPtr,$fieldName);
	}

	function LoadDcfData($data) {
		return CkOmaDrm_LoadDcfData($this->_cPtr,$data);
	}

	function LoadDcfFile($path) {
		return CkOmaDrm_LoadDcfFile($this->_cPtr,$path);
	}

	function LoadUnencryptedData($data) {
		CkOmaDrm_LoadUnencryptedData($this->_cPtr,$data);
	}

	function LoadUnencryptedFile($path) {
		return CkOmaDrm_LoadUnencryptedFile($this->_cPtr,$path);
	}

	function SaveDecrypted($path) {
		return CkOmaDrm_SaveDecrypted($this->_cPtr,$path);
	}

	function SaveLastError($path) {
		return CkOmaDrm_SaveLastError($this->_cPtr,$path);
	}

	function SetEncodedIV($encodedIv,$encoding) {
		CkOmaDrm_SetEncodedIV($this->_cPtr,$encodedIv,$encoding);
	}

	function UnlockComponent($unlockCode) {
		return CkOmaDrm_UnlockComponent($this->_cPtr,$unlockCode);
	}
}

class CkXmp {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkXmp') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkXmp();
	}

	function get_Utf8() {
		return CkXmp_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkXmp_put_Utf8($this->_cPtr,$b);
	}

	function get_LastErrorHtml($str) {
		CkXmp_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkXmp_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkXmp_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkXmp_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkXmp_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkXmp_lastErrorXml($this->_cPtr);
	}

	function get_NumEmbedded() {
		return CkXmp_get_NumEmbedded($this->_cPtr);
	}

	function get_StructInnerDescrip() {
		return CkXmp_get_StructInnerDescrip($this->_cPtr);
	}

	function put_StructInnerDescrip($newVal) {
		CkXmp_put_StructInnerDescrip($this->_cPtr,$newVal);
	}

	function get_Version($str) {
		CkXmp_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkXmp_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkXmp_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkXmp_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkXmp_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkXmp_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkXmp_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function AddArray($xml,$arrType,$propName,$values) {
		return CkXmp_AddArray($this->_cPtr,$xml,$arrType,$propName,$values);
	}

	function AddNsMapping($ns,$uri) {
		CkXmp_AddNsMapping($this->_cPtr,$ns,$uri);
	}

	function AddSimpleDate($xml,$propName,$sysTime) {
		return CkXmp_AddSimpleDate($this->_cPtr,$xml,$propName,$sysTime);
	}

	function AddSimpleInt($xml,$propName,$propVal) {
		return CkXmp_AddSimpleInt($this->_cPtr,$xml,$propName,$propVal);
	}

	function AddSimpleStr($xml,$propName,$propVal) {
		return CkXmp_AddSimpleStr($this->_cPtr,$xml,$propName,$propVal);
	}

	function AddStructProp($xml,$structName,$propName,$propVal) {
		return CkXmp_AddStructProp($this->_cPtr,$xml,$structName,$propName,$propVal);
	}

	function Append($xml) {
		return CkXmp_Append($this->_cPtr,$xml);
	}

	function dateToString($sysTime) {
		return CkXmp_dateToString($this->_cPtr,$sysTime);
	}

	function GetArray($xml,$propName) {
		$r=CkXmp_GetArray($this->_cPtr,$xml,$propName);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkStringArray($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetEmbedded($index) {
		$r=CkXmp_GetEmbedded($this->_cPtr,$index);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkXml($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetProperty($xml,$propName) {
		$r=CkXmp_GetProperty($this->_cPtr,$xml,$propName);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkXml($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetSimpleDate($xml,$propName,$outSysTime) {
		return CkXmp_GetSimpleDate($this->_cPtr,$xml,$propName,$outSysTime);
	}

	function GetSimpleInt($xml,$propName) {
		return CkXmp_GetSimpleInt($this->_cPtr,$xml,$propName);
	}

	function getSimpleStr($xml,$propName) {
		return CkXmp_getSimpleStr($this->_cPtr,$xml,$propName);
	}

	function simpleStr($xml,$propName) {
		return CkXmp_simpleStr($this->_cPtr,$xml,$propName);
	}

	function GetStructPropNames($xml,$structName) {
		$r=CkXmp_GetStructPropNames($this->_cPtr,$xml,$structName);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkStringArray($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function getStructValue($xml,$structName,$propName) {
		return CkXmp_getStructValue($this->_cPtr,$xml,$structName,$propName);
	}

	function structValue($xml,$structName,$propName) {
		return CkXmp_structValue($this->_cPtr,$xml,$structName,$propName);
	}

	function LoadAppFile($path) {
		return CkXmp_LoadAppFile($this->_cPtr,$path);
	}

	function LoadFromBuffer($byteData,$ext) {
		return CkXmp_LoadFromBuffer($this->_cPtr,$byteData,$ext);
	}

	function NewXmp() {
		$r=CkXmp_NewXmp($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkXml($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function RemoveAllEmbedded() {
		CkXmp_RemoveAllEmbedded($this->_cPtr);
	}

	function RemoveArray($xml,$propName) {
		return CkXmp_RemoveArray($this->_cPtr,$xml,$propName);
	}

	function RemoveEmbedded($index) {
		CkXmp_RemoveEmbedded($this->_cPtr,$index);
	}

	function RemoveNsMapping($ns) {
		CkXmp_RemoveNsMapping($this->_cPtr,$ns);
	}

	function RemoveSimple($xml,$propName) {
		return CkXmp_RemoveSimple($this->_cPtr,$xml,$propName);
	}

	function RemoveStruct($xml,$structName) {
		return CkXmp_RemoveStruct($this->_cPtr,$xml,$structName);
	}

	function RemoveStructProp($xml,$structName,$propName) {
		return CkXmp_RemoveStructProp($this->_cPtr,$xml,$structName,$propName);
	}

	function SaveAppFile($path) {
		return CkXmp_SaveAppFile($this->_cPtr,$path);
	}

	function SaveLastError($path) {
		return CkXmp_SaveLastError($this->_cPtr,$path);
	}

	function SaveToBuffer($outBytes) {
		return CkXmp_SaveToBuffer($this->_cPtr,$outBytes);
	}

	function StringToDate($str,$outSysTime) {
		return CkXmp_StringToDate($this->_cPtr,$str,$outSysTime);
	}

	function UnlockComponent($unlockCode) {
		return CkXmp_UnlockComponent($this->_cPtr,$unlockCode);
	}
}

class CkStringArray {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkStringArray') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkStringArray();
	}

	function get_Utf8() {
		return CkStringArray_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkStringArray_put_Utf8($this->_cPtr,$b);
	}

	function get_Count() {
		return CkStringArray_get_Count($this->_cPtr);
	}

	function get_Crlf() {
		return CkStringArray_get_Crlf($this->_cPtr);
	}

	function put_Crlf($newVal) {
		CkStringArray_put_Crlf($this->_cPtr,$newVal);
	}

	function get_LastErrorHtml($str) {
		CkStringArray_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkStringArray_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkStringArray_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkStringArray_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkStringArray_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkStringArray_lastErrorXml($this->_cPtr);
	}

	function get_Trim() {
		return CkStringArray_get_Trim($this->_cPtr);
	}

	function put_Trim($newVal) {
		CkStringArray_put_Trim($this->_cPtr,$newVal);
	}

	function get_Unique() {
		return CkStringArray_get_Unique($this->_cPtr);
	}

	function put_Unique($newVal) {
		CkStringArray_put_Unique($this->_cPtr,$newVal);
	}

	function get_Version($str) {
		CkStringArray_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkStringArray_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkStringArray_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkStringArray_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkStringArray_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkStringArray_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkStringArray_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function Append($str) {
		return CkStringArray_Append($this->_cPtr,$str);
	}

	function AppendSerialized($encodedStr) {
		return CkStringArray_AppendSerialized($this->_cPtr,$encodedStr);
	}

	function Clear() {
		CkStringArray_Clear($this->_cPtr);
	}

	function Contains($str) {
		return CkStringArray_Contains($this->_cPtr,$str);
	}

	function Find($str,$firstIndex) {
		return CkStringArray_Find($this->_cPtr,$str,$firstIndex);
	}

	function FindFirstMatch($str,$firstIndex) {
		return CkStringArray_FindFirstMatch($this->_cPtr,$str,$firstIndex);
	}

	function getString($index) {
		return CkStringArray_getString($this->_cPtr,$index);
	}

	function string($index) {
		return CkStringArray_string($this->_cPtr,$index);
	}

	function GetStringLen($index) {
		return CkStringArray_GetStringLen($this->_cPtr,$index);
	}

	function InsertAt($index,$str) {
		CkStringArray_InsertAt($this->_cPtr,$index,$str);
	}

	function lastString() {
		return CkStringArray_lastString($this->_cPtr);
	}

	function LoadFromFile($path) {
		return CkStringArray_LoadFromFile($this->_cPtr,$path);
	}

	function LoadFromFile2($path,$charset) {
		return CkStringArray_LoadFromFile2($this->_cPtr,$path,$charset);
	}

	function LoadFromText($str) {
		CkStringArray_LoadFromText($this->_cPtr,$str);
	}

	function pop() {
		return CkStringArray_pop($this->_cPtr);
	}

	function Prepend($str) {
		CkStringArray_Prepend($this->_cPtr,$str);
	}

	function Remove($str) {
		CkStringArray_Remove($this->_cPtr,$str);
	}

	function RemoveAt($index) {
		return CkStringArray_RemoveAt($this->_cPtr,$index);
	}

	function SaveLastError($path) {
		return CkStringArray_SaveLastError($this->_cPtr,$path);
	}

	function SaveNthToFile($index,$path) {
		return CkStringArray_SaveNthToFile($this->_cPtr,$index,$path);
	}

	function SaveToFile($path) {
		return CkStringArray_SaveToFile($this->_cPtr,$path);
	}

	function SaveToFile2($path,$charset) {
		return CkStringArray_SaveToFile2($this->_cPtr,$path,$charset);
	}

	function saveToText() {
		return CkStringArray_saveToText($this->_cPtr);
	}

	function serialize() {
		return CkStringArray_serialize($this->_cPtr);
	}

	function Sort($ascending) {
		CkStringArray_Sort($this->_cPtr,$ascending);
	}

	function SplitAndAppend($str,$boundary) {
		CkStringArray_SplitAndAppend($this->_cPtr,$str,$boundary);
	}

	function strAt($index) {
		return CkStringArray_strAt($this->_cPtr,$index);
	}

	function Subtract($sa) {
		CkStringArray_Subtract($this->_cPtr,$sa);
	}

	function Union($sa) {
		CkStringArray_Union($this->_cPtr,$sa);
	}
}

class CkZip {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkZip') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkZip();
	}

	function get_Utf8() {
		return CkZip_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkZip_put_Utf8($this->_cPtr,$b);
	}

	function get_AppendFromDir($str) {
		CkZip_get_AppendFromDir($this->_cPtr,$str);
	}

	function appendFromDir() {
		return CkZip_appendFromDir($this->_cPtr);
	}

	function put_AppendFromDir($newVal) {
		CkZip_put_AppendFromDir($this->_cPtr,$newVal);
	}

	function get_CaseSensitive() {
		return CkZip_get_CaseSensitive($this->_cPtr);
	}

	function put_CaseSensitive($newVal) {
		CkZip_put_CaseSensitive($this->_cPtr,$newVal);
	}

	function get_ClearArchiveAttribute() {
		return CkZip_get_ClearArchiveAttribute($this->_cPtr);
	}

	function put_ClearArchiveAttribute($newVal) {
		CkZip_put_ClearArchiveAttribute($this->_cPtr,$newVal);
	}

	function get_ClearReadOnlyAttr() {
		return CkZip_get_ClearReadOnlyAttr($this->_cPtr);
	}

	function put_ClearReadOnlyAttr($newVal) {
		CkZip_put_ClearReadOnlyAttr($this->_cPtr,$newVal);
	}

	function get_Comment($str) {
		CkZip_get_Comment($this->_cPtr,$str);
	}

	function comment() {
		return CkZip_comment($this->_cPtr);
	}

	function put_Comment($newVal) {
		CkZip_put_Comment($this->_cPtr,$newVal);
	}

	function get_DecryptPassword($str) {
		CkZip_get_DecryptPassword($this->_cPtr,$str);
	}

	function decryptPassword() {
		return CkZip_decryptPassword($this->_cPtr);
	}

	function put_DecryptPassword($newVal) {
		CkZip_put_DecryptPassword($this->_cPtr,$newVal);
	}

	function get_DiscardPaths() {
		return CkZip_get_DiscardPaths($this->_cPtr);
	}

	function put_DiscardPaths($newVal) {
		CkZip_put_DiscardPaths($this->_cPtr,$newVal);
	}

	function get_EncryptKeyLength() {
		return CkZip_get_EncryptKeyLength($this->_cPtr);
	}

	function put_EncryptKeyLength($newVal) {
		CkZip_put_EncryptKeyLength($this->_cPtr,$newVal);
	}

	function get_EncryptPassword($str) {
		CkZip_get_EncryptPassword($this->_cPtr,$str);
	}

	function encryptPassword() {
		return CkZip_encryptPassword($this->_cPtr);
	}

	function put_EncryptPassword($newVal) {
		CkZip_put_EncryptPassword($this->_cPtr,$newVal);
	}

	function get_Encryption() {
		return CkZip_get_Encryption($this->_cPtr);
	}

	function put_Encryption($newVal) {
		CkZip_put_Encryption($this->_cPtr,$newVal);
	}

	function get_FileCount() {
		return CkZip_get_FileCount($this->_cPtr);
	}

	function get_FileName($str) {
		CkZip_get_FileName($this->_cPtr,$str);
	}

	function fileName() {
		return CkZip_fileName($this->_cPtr);
	}

	function put_FileName($newVal) {
		CkZip_put_FileName($this->_cPtr,$newVal);
	}

	function get_HasZipFormatErrors() {
		return CkZip_get_HasZipFormatErrors($this->_cPtr);
	}

	function get_HeartbeatMs() {
		return CkZip_get_HeartbeatMs($this->_cPtr);
	}

	function put_HeartbeatMs($newVal) {
		CkZip_put_HeartbeatMs($this->_cPtr,$newVal);
	}

	function get_IgnoreAccessDenied() {
		return CkZip_get_IgnoreAccessDenied($this->_cPtr);
	}

	function put_IgnoreAccessDenied($newVal) {
		CkZip_put_IgnoreAccessDenied($this->_cPtr,$newVal);
	}

	function get_LastErrorHtml($str) {
		CkZip_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkZip_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkZip_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkZip_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkZip_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkZip_lastErrorXml($this->_cPtr);
	}

	function get_NumEntries() {
		return CkZip_get_NumEntries($this->_cPtr);
	}

	function get_OemCodePage() {
		return CkZip_get_OemCodePage($this->_cPtr);
	}

	function put_OemCodePage($newVal) {
		CkZip_put_OemCodePage($this->_cPtr,$newVal);
	}

	function get_OverwriteExisting() {
		return CkZip_get_OverwriteExisting($this->_cPtr);
	}

	function put_OverwriteExisting($newVal) {
		CkZip_put_OverwriteExisting($this->_cPtr,$newVal);
	}

	function get_PasswordProtect() {
		return CkZip_get_PasswordProtect($this->_cPtr);
	}

	function put_PasswordProtect($newVal) {
		CkZip_put_PasswordProtect($this->_cPtr,$newVal);
	}

	function get_PathPrefix($str) {
		CkZip_get_PathPrefix($this->_cPtr,$str);
	}

	function pathPrefix() {
		return CkZip_pathPrefix($this->_cPtr);
	}

	function put_PathPrefix($newVal) {
		CkZip_put_PathPrefix($this->_cPtr,$newVal);
	}

	function get_Proxy($str) {
		CkZip_get_Proxy($this->_cPtr,$str);
	}

	function proxy() {
		return CkZip_proxy($this->_cPtr);
	}

	function put_Proxy($newVal) {
		CkZip_put_Proxy($this->_cPtr,$newVal);
	}

	function get_TempDir($str) {
		CkZip_get_TempDir($this->_cPtr,$str);
	}

	function tempDir() {
		return CkZip_tempDir($this->_cPtr);
	}

	function put_TempDir($newVal) {
		CkZip_put_TempDir($this->_cPtr,$newVal);
	}

	function get_TextFlag() {
		return CkZip_get_TextFlag($this->_cPtr);
	}

	function put_TextFlag($newVal) {
		CkZip_put_TextFlag($this->_cPtr,$newVal);
	}

	function get_Version($str) {
		CkZip_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkZip_version($this->_cPtr);
	}

	function get_Zipx() {
		return CkZip_get_Zipx($this->_cPtr);
	}

	function put_Zipx($newVal) {
		CkZip_put_Zipx($this->_cPtr,$newVal);
	}

	function get_ZipxDefaultAlg($str) {
		CkZip_get_ZipxDefaultAlg($this->_cPtr,$str);
	}

	function zipxDefaultAlg() {
		return CkZip_zipxDefaultAlg($this->_cPtr);
	}

	function put_ZipxDefaultAlg($newVal) {
		CkZip_put_ZipxDefaultAlg($this->_cPtr,$newVal);
	}

	function get_DebugLogFilePath($str) {
		CkZip_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkZip_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkZip_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkZip_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkZip_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function AddNoCompressExtension($fileExtension) {
		CkZip_AddNoCompressExtension($this->_cPtr,$fileExtension);
	}

	function AppendBase64($pathInZip,$data) {
		$r=CkZip_AppendBase64($this->_cPtr,$pathInZip,$data);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkZipEntry($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function AppendCompressed($pathInZip,$data) {
		$r=CkZip_AppendCompressed($this->_cPtr,$pathInZip,$data);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkZipEntry($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function AppendData($pathInZip,$data) {
		$r=CkZip_AppendData($this->_cPtr,$pathInZip,$data);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkZipEntry($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function AppendData2($pathInZip,$pByteData,$szByteData) {
		$r=CkZip_AppendData2($this->_cPtr,$pathInZip,$pByteData,$szByteData);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkZipEntry($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function AppendFiles($filePattern,$recurse) {
		return CkZip_AppendFiles($this->_cPtr,$filePattern,$recurse);
	}

	function AppendFilesEx($filePattern,$recurse,$saveExtraPath,$archiveOnly,$includeHidden,$includeSystem) {
		return CkZip_AppendFilesEx($this->_cPtr,$filePattern,$recurse,$saveExtraPath,$archiveOnly,$includeHidden,$includeSystem);
	}

	function AppendHex($pathInZip,$data) {
		$r=CkZip_AppendHex($this->_cPtr,$pathInZip,$data);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkZipEntry($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function AppendMultiple($fileSpecs,$recurse) {
		return CkZip_AppendMultiple($this->_cPtr,$fileSpecs,$recurse);
	}

	function AppendNew($pathInZip) {
		$r=CkZip_AppendNew($this->_cPtr,$pathInZip);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkZipEntry($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function AppendNewDir($pathInZip) {
		$r=CkZip_AppendNewDir($this->_cPtr,$pathInZip);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkZipEntry($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function AppendOneFileOrDir($path,$saveExtraPath) {
		return CkZip_AppendOneFileOrDir($this->_cPtr,$path,$saveExtraPath);
	}

	function AppendString($pathInZip,$str) {
		$r=CkZip_AppendString($this->_cPtr,$pathInZip,$str);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkZipEntry($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function AppendString2($pathInZip,$str,$charset) {
		$r=CkZip_AppendString2($this->_cPtr,$pathInZip,$str,$charset);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkZipEntry($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function AppendZip($zipPath) {
		return CkZip_AppendZip($this->_cPtr,$zipPath);
	}

	function CloseZip() {
		CkZip_CloseZip($this->_cPtr);
	}

	function DeleteEntry($entry) {
		return CkZip_DeleteEntry($this->_cPtr,$entry);
	}

	function ExcludeDir($dirName) {
		CkZip_ExcludeDir($this->_cPtr,$dirName);
	}

	function Extract($dirPath) {
		return CkZip_Extract($this->_cPtr,$dirPath);
	}

	function ExtractInto($dirPath) {
		return CkZip_ExtractInto($this->_cPtr,$dirPath);
	}

	function ExtractMatching($dirPath,$pattern) {
		return CkZip_ExtractMatching($this->_cPtr,$dirPath,$pattern);
	}

	function ExtractNewer($dirPath) {
		return CkZip_ExtractNewer($this->_cPtr,$dirPath);
	}

	function ExtractOne($entry,$dirPath) {
		return CkZip_ExtractOne($this->_cPtr,$entry,$dirPath);
	}

	function FirstEntry() {
		$r=CkZip_FirstEntry($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkZipEntry($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function FirstMatchingEntry($pattern) {
		$r=CkZip_FirstMatchingEntry($this->_cPtr,$pattern);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkZipEntry($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function getDirectoryAsXML() {
		return CkZip_getDirectoryAsXML($this->_cPtr);
	}

	function directoryAsXML() {
		return CkZip_directoryAsXML($this->_cPtr);
	}

	function GetEntryByID($entryID) {
		$r=CkZip_GetEntryByID($this->_cPtr,$entryID);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkZipEntry($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetEntryByIndex($index) {
		$r=CkZip_GetEntryByIndex($this->_cPtr,$index);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkZipEntry($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetEntryByName($entryName) {
		$r=CkZip_GetEntryByName($this->_cPtr,$entryName);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkZipEntry($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetExclusions() {
		$r=CkZip_GetExclusions($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkStringArray($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function InsertNew($pathInZip,$beforeIndex) {
		$r=CkZip_InsertNew($this->_cPtr,$pathInZip,$beforeIndex);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkZipEntry($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function IsNoCompressExtension($fileExtension) {
		return CkZip_IsNoCompressExtension($this->_cPtr,$fileExtension);
	}

	function IsPasswordProtected($zipPath) {
		return CkZip_IsPasswordProtected($this->_cPtr,$zipPath);
	}

	function IsUnlocked() {
		return CkZip_IsUnlocked($this->_cPtr);
	}

	function NewZip($zipPath) {
		return CkZip_NewZip($this->_cPtr,$zipPath);
	}

	function OpenFromByteData($byteData) {
		return CkZip_OpenFromByteData($this->_cPtr,$byteData);
	}

	function OpenFromMemory($pByteData,$szByteData) {
		return CkZip_OpenFromMemory($this->_cPtr,$pByteData,$szByteData);
	}

	function OpenFromWeb($url) {
		return CkZip_OpenFromWeb($this->_cPtr,$url);
	}

	function OpenZip($zipPath) {
		return CkZip_OpenZip($this->_cPtr,$zipPath);
	}

	function QuickAppend($zipPath) {
		return CkZip_QuickAppend($this->_cPtr,$zipPath);
	}

	function RemoveNoCompressExtension($fileExtension) {
		CkZip_RemoveNoCompressExtension($this->_cPtr,$fileExtension);
	}

	function SaveLastError($path) {
		return CkZip_SaveLastError($this->_cPtr,$path);
	}

	function SetCompressionLevel($level) {
		CkZip_SetCompressionLevel($this->_cPtr,$level);
	}

	function SetExclusions($excludePatterns) {
		CkZip_SetExclusions($this->_cPtr,$excludePatterns);
	}

	function SetPassword($password) {
		CkZip_SetPassword($this->_cPtr,$password);
	}

	function UnlockComponent($regCode) {
		return CkZip_UnlockComponent($this->_cPtr,$regCode);
	}

	function Unzip($dirPath) {
		return CkZip_Unzip($this->_cPtr,$dirPath);
	}

	function UnzipInto($dirPath) {
		return CkZip_UnzipInto($this->_cPtr,$dirPath);
	}

	function UnzipMatching($dirPath,$pattern,$verbose) {
		return CkZip_UnzipMatching($this->_cPtr,$dirPath,$pattern,$verbose);
	}

	function UnzipMatchingInto($dirPath,$pattern,$verbose) {
		return CkZip_UnzipMatchingInto($this->_cPtr,$dirPath,$pattern,$verbose);
	}

	function UnzipNewer($dirPath) {
		return CkZip_UnzipNewer($this->_cPtr,$dirPath);
	}

	function VerifyPassword() {
		return CkZip_VerifyPassword($this->_cPtr);
	}

	function WriteToMemory($outData) {
		return CkZip_WriteToMemory($this->_cPtr,$outData);
	}

	function WriteZip() {
		return CkZip_WriteZip($this->_cPtr);
	}

	function WriteZipAndClose() {
		return CkZip_WriteZipAndClose($this->_cPtr);
	}
}

class CkZipEntry {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkZipEntry') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkZipEntry();
	}

	function get_Utf8() {
		return CkZipEntry_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkZipEntry_put_Utf8($this->_cPtr,$b);
	}

	function get_Comment($str) {
		CkZipEntry_get_Comment($this->_cPtr,$str);
	}

	function comment() {
		return CkZipEntry_comment($this->_cPtr);
	}

	function put_Comment($newVal) {
		CkZipEntry_put_Comment($this->_cPtr,$newVal);
	}

	function get_CompressedLength() {
		return CkZipEntry_get_CompressedLength($this->_cPtr);
	}

	function get_CompressedLengthStr($str) {
		CkZipEntry_get_CompressedLengthStr($this->_cPtr,$str);
	}

	function compressedLengthStr() {
		return CkZipEntry_compressedLengthStr($this->_cPtr);
	}

	function get_CompressionLevel() {
		return CkZipEntry_get_CompressionLevel($this->_cPtr);
	}

	function put_CompressionLevel($newVal) {
		CkZipEntry_put_CompressionLevel($this->_cPtr,$newVal);
	}

	function get_CompressionMethod() {
		return CkZipEntry_get_CompressionMethod($this->_cPtr);
	}

	function put_CompressionMethod($newVal) {
		CkZipEntry_put_CompressionMethod($this->_cPtr,$newVal);
	}

	function get_Crc() {
		return CkZipEntry_get_Crc($this->_cPtr);
	}

	function get_EntryID() {
		return CkZipEntry_get_EntryID($this->_cPtr);
	}

	function get_EntryType() {
		return CkZipEntry_get_EntryType($this->_cPtr);
	}

	function get_FileDateTime($outSysTime) {
		CkZipEntry_get_FileDateTime($this->_cPtr,$outSysTime);
	}

	function put_FileDateTime($sysTime) {
		CkZipEntry_put_FileDateTime($this->_cPtr,$sysTime);
	}

	function get_FileDateTimeStr($str) {
		CkZipEntry_get_FileDateTimeStr($this->_cPtr,$str);
	}

	function fileDateTimeStr() {
		return CkZipEntry_fileDateTimeStr($this->_cPtr);
	}

	function put_FileDateTimeStr($newVal) {
		CkZipEntry_put_FileDateTimeStr($this->_cPtr,$newVal);
	}

	function get_FileName($str) {
		CkZipEntry_get_FileName($this->_cPtr,$str);
	}

	function fileName() {
		return CkZipEntry_fileName($this->_cPtr);
	}

	function put_FileName($newVal) {
		CkZipEntry_put_FileName($this->_cPtr,$newVal);
	}

	function get_HeartbeatMs() {
		return CkZipEntry_get_HeartbeatMs($this->_cPtr);
	}

	function put_HeartbeatMs($newVal) {
		CkZipEntry_put_HeartbeatMs($this->_cPtr,$newVal);
	}

	function get_IsDirectory() {
		return CkZipEntry_get_IsDirectory($this->_cPtr);
	}

	function get_LastErrorHtml($str) {
		CkZipEntry_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkZipEntry_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkZipEntry_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkZipEntry_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkZipEntry_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkZipEntry_lastErrorXml($this->_cPtr);
	}

	function get_TextFlag() {
		return CkZipEntry_get_TextFlag($this->_cPtr);
	}

	function put_TextFlag($newVal) {
		CkZipEntry_put_TextFlag($this->_cPtr,$newVal);
	}

	function get_UncompressedLength() {
		return CkZipEntry_get_UncompressedLength($this->_cPtr);
	}

	function get_UncompressedLengthStr($str) {
		CkZipEntry_get_UncompressedLengthStr($this->_cPtr,$str);
	}

	function uncompressedLengthStr() {
		return CkZipEntry_uncompressedLengthStr($this->_cPtr);
	}

	function get_Version($str) {
		CkZipEntry_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkZipEntry_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkZipEntry_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkZipEntry_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkZipEntry_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkZipEntry_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkZipEntry_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function AppendData($bdata) {
		return CkZipEntry_AppendData($this->_cPtr,$bdata);
	}

	function AppendString($inStr,$charset) {
		return CkZipEntry_AppendString($this->_cPtr,$inStr,$charset);
	}

	function Copy($outData) {
		return CkZipEntry_Copy($this->_cPtr,$outData);
	}

	function copyToBase64() {
		return CkZipEntry_copyToBase64($this->_cPtr);
	}

	function copyToHex() {
		return CkZipEntry_copyToHex($this->_cPtr);
	}

	function Extract($dirPath) {
		return CkZipEntry_Extract($this->_cPtr,$dirPath);
	}

	function ExtractInto($dirPath) {
		return CkZipEntry_ExtractInto($this->_cPtr,$dirPath);
	}

	function GetDt() {
		$r=CkZipEntry_GetDt($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkDateTime($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function Inflate($outData) {
		return CkZipEntry_Inflate($this->_cPtr,$outData);
	}

	function NextEntry() {
		$r=CkZipEntry_NextEntry($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkZipEntry($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function ReplaceData($bdata) {
		return CkZipEntry_ReplaceData($this->_cPtr,$bdata);
	}

	function ReplaceString($inStr,$charset) {
		return CkZipEntry_ReplaceString($this->_cPtr,$inStr,$charset);
	}

	function SaveLastError($path) {
		return CkZipEntry_SaveLastError($this->_cPtr,$path);
	}

	function SetDt($dt) {
		CkZipEntry_SetDt($this->_cPtr,$dt);
	}

	function unzipToString($lineEndingBehavior,$srcCharset) {
		return CkZipEntry_unzipToString($this->_cPtr,$lineEndingBehavior,$srcCharset);
	}
}

class CkFileAccess {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkFileAccess') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkFileAccess();
	}

	function get_Utf8() {
		return CkFileAccess_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkFileAccess_put_Utf8($this->_cPtr,$b);
	}

	function get_CurrentDir($str) {
		CkFileAccess_get_CurrentDir($this->_cPtr,$str);
	}

	function currentDir() {
		return CkFileAccess_currentDir($this->_cPtr);
	}

	function get_EndOfFile() {
		return CkFileAccess_get_EndOfFile($this->_cPtr);
	}

	function get_FileOpenError() {
		return CkFileAccess_get_FileOpenError($this->_cPtr);
	}

	function get_FileOpenErrorMsg($str) {
		CkFileAccess_get_FileOpenErrorMsg($this->_cPtr,$str);
	}

	function fileOpenErrorMsg() {
		return CkFileAccess_fileOpenErrorMsg($this->_cPtr);
	}

	function get_LastErrorHtml($str) {
		CkFileAccess_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkFileAccess_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkFileAccess_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkFileAccess_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkFileAccess_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkFileAccess_lastErrorXml($this->_cPtr);
	}

	function get_Version($str) {
		CkFileAccess_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkFileAccess_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkFileAccess_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkFileAccess_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkFileAccess_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkFileAccess_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkFileAccess_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function AppendAnsi($text) {
		return CkFileAccess_AppendAnsi($this->_cPtr,$text);
	}

	function AppendText($text,$charset) {
		return CkFileAccess_AppendText($this->_cPtr,$text,$charset);
	}

	function AppendUnicodeBOM() {
		return CkFileAccess_AppendUnicodeBOM($this->_cPtr);
	}

	function AppendUtf8BOM() {
		return CkFileAccess_AppendUtf8BOM($this->_cPtr);
	}

	function DirAutoCreate($path) {
		return CkFileAccess_DirAutoCreate($this->_cPtr,$path);
	}

	function DirCreate($path) {
		return CkFileAccess_DirCreate($this->_cPtr,$path);
	}

	function DirDelete($path) {
		return CkFileAccess_DirDelete($this->_cPtr,$path);
	}

	function DirEnsureExists($filePath) {
		return CkFileAccess_DirEnsureExists($this->_cPtr,$filePath);
	}

	function FileClose() {
		CkFileAccess_FileClose($this->_cPtr);
	}

	function FileContentsEqual($path1,$path2) {
		return CkFileAccess_FileContentsEqual($this->_cPtr,$path1,$path2);
	}

	function FileCopy($existingPath,$newPath,$failIfExists) {
		return CkFileAccess_FileCopy($this->_cPtr,$existingPath,$newPath,$failIfExists);
	}

	function FileDelete($path) {
		return CkFileAccess_FileDelete($this->_cPtr,$path);
	}

	function FileExists($path) {
		return CkFileAccess_FileExists($this->_cPtr,$path);
	}

	function FileOpen($path,$accessMode,$shareMode,$createDisp,$attr) {
		return CkFileAccess_FileOpen($this->_cPtr,$path,$accessMode,$shareMode,$createDisp,$attr);
	}

	function FileRead($numBytes,$outBytes) {
		return CkFileAccess_FileRead($this->_cPtr,$numBytes,$outBytes);
	}

	function FileRename($existingPath,$newPath) {
		return CkFileAccess_FileRename($this->_cPtr,$existingPath,$newPath);
	}

	function FileSeek($offset,$origin) {
		return CkFileAccess_FileSeek($this->_cPtr,$offset,$origin);
	}

	function FileSize($path) {
		return CkFileAccess_FileSize($this->_cPtr,$path);
	}

	function FileWrite($data) {
		return CkFileAccess_FileWrite($this->_cPtr,$data);
	}

	function getTempFilename($dirName,$prefix) {
		return CkFileAccess_getTempFilename($this->_cPtr,$dirName,$prefix);
	}

	function tempFilename($dirName,$prefix) {
		return CkFileAccess_tempFilename($this->_cPtr,$dirName,$prefix);
	}

	function OpenForAppend($filePath) {
		return CkFileAccess_OpenForAppend($this->_cPtr,$filePath);
	}

	function OpenForRead($filePath) {
		return CkFileAccess_OpenForRead($this->_cPtr,$filePath);
	}

	function OpenForReadWrite($filePath) {
		return CkFileAccess_OpenForReadWrite($this->_cPtr,$filePath);
	}

	function OpenForWrite($filePath) {
		return CkFileAccess_OpenForWrite($this->_cPtr,$filePath);
	}

	function readBinaryToEncoded($path,$encoding) {
		return CkFileAccess_readBinaryToEncoded($this->_cPtr,$path,$encoding);
	}

	function ReadEntireFile($path,$outBytes) {
		return CkFileAccess_ReadEntireFile($this->_cPtr,$path,$outBytes);
	}

	function readEntireTextFile($path,$charset) {
		return CkFileAccess_readEntireTextFile($this->_cPtr,$path,$charset);
	}

	function ReassembleFile($partsDirPath,$partPrefix,$partExtension,$reassembledFilename) {
		return CkFileAccess_ReassembleFile($this->_cPtr,$partsDirPath,$partPrefix,$partExtension,$reassembledFilename);
	}

	function ReplaceStrings($path,$charset,$existingString,$replacementString) {
		return CkFileAccess_ReplaceStrings($this->_cPtr,$path,$charset,$existingString,$replacementString);
	}

	function SaveLastError($path) {
		return CkFileAccess_SaveLastError($this->_cPtr,$path);
	}

	function SetCurrentDir($path) {
		return CkFileAccess_SetCurrentDir($this->_cPtr,$path);
	}

	function SetFileTimes($path,$create,$lastAccess,$lastModified) {
		return CkFileAccess_SetFileTimes($this->_cPtr,$path,$create,$lastAccess,$lastModified);
	}

	function SetLastModified($path,$lastModified) {
		return CkFileAccess_SetLastModified($this->_cPtr,$path,$lastModified);
	}

	function SplitFile($fileToSplit,$partPrefix,$partExtension,$partSize,$destDir) {
		return CkFileAccess_SplitFile($this->_cPtr,$fileToSplit,$partPrefix,$partExtension,$partSize,$destDir);
	}

	function TreeDelete($path) {
		return CkFileAccess_TreeDelete($this->_cPtr,$path);
	}

	function WriteEntireFile($path,$fileData) {
		return CkFileAccess_WriteEntireFile($this->_cPtr,$path,$fileData);
	}

	function WriteEntireTextFile($path,$fileData,$charset,$includePreamble) {
		return CkFileAccess_WriteEntireTextFile($this->_cPtr,$path,$fileData,$charset,$includePreamble);
	}
}

class CkRsa {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkRsa') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkRsa();
	}

	function get_Utf8() {
		return CkRsa_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkRsa_put_Utf8($this->_cPtr,$b);
	}

	function get_Charset($str) {
		CkRsa_get_Charset($this->_cPtr,$str);
	}

	function charset() {
		return CkRsa_charset($this->_cPtr);
	}

	function put_Charset($newVal) {
		CkRsa_put_Charset($this->_cPtr,$newVal);
	}

	function get_EncodingMode($str) {
		CkRsa_get_EncodingMode($this->_cPtr,$str);
	}

	function encodingMode() {
		return CkRsa_encodingMode($this->_cPtr);
	}

	function put_EncodingMode($newVal) {
		CkRsa_put_EncodingMode($this->_cPtr,$newVal);
	}

	function get_LastErrorHtml($str) {
		CkRsa_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkRsa_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkRsa_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkRsa_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkRsa_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkRsa_lastErrorXml($this->_cPtr);
	}

	function get_LittleEndian() {
		return CkRsa_get_LittleEndian($this->_cPtr);
	}

	function put_LittleEndian($newVal) {
		CkRsa_put_LittleEndian($this->_cPtr,$newVal);
	}

	function get_NoUnpad() {
		return CkRsa_get_NoUnpad($this->_cPtr);
	}

	function put_NoUnpad($newVal) {
		CkRsa_put_NoUnpad($this->_cPtr,$newVal);
	}

	function get_NumBits() {
		return CkRsa_get_NumBits($this->_cPtr);
	}

	function get_OaepPadding() {
		return CkRsa_get_OaepPadding($this->_cPtr);
	}

	function put_OaepPadding($newVal) {
		CkRsa_put_OaepPadding($this->_cPtr,$newVal);
	}

	function get_Version($str) {
		CkRsa_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkRsa_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkRsa_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkRsa_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkRsa_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkRsa_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkRsa_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function DecryptBytes($bData,$bUsePrivateKey,$outData) {
		return CkRsa_DecryptBytes($this->_cPtr,$bData,$bUsePrivateKey,$outData);
	}

	function DecryptBytesENC($str,$bUsePrivateKey,$outData) {
		return CkRsa_DecryptBytesENC($this->_cPtr,$str,$bUsePrivateKey,$outData);
	}

	function decryptString($bData,$bUsePrivateKey) {
		return CkRsa_decryptString($this->_cPtr,$bData,$bUsePrivateKey);
	}

	function decryptStringENC($str,$bUsePrivateKey) {
		return CkRsa_decryptStringENC($this->_cPtr,$str,$bUsePrivateKey);
	}

	function EncryptBytes($bData,$bUsePrivateKey,$outData) {
		return CkRsa_EncryptBytes($this->_cPtr,$bData,$bUsePrivateKey,$outData);
	}

	function encryptBytesENC($bData,$bUsePrivateKey) {
		return CkRsa_encryptBytesENC($this->_cPtr,$bData,$bUsePrivateKey);
	}

	function EncryptString($str,$bUsePrivateKey,$outData) {
		return CkRsa_EncryptString($this->_cPtr,$str,$bUsePrivateKey,$outData);
	}

	function encryptStringENC($str,$bUsePrivateKey) {
		return CkRsa_encryptStringENC($this->_cPtr,$str,$bUsePrivateKey);
	}

	function exportPrivateKey() {
		return CkRsa_exportPrivateKey($this->_cPtr);
	}

	function exportPublicKey() {
		return CkRsa_exportPublicKey($this->_cPtr);
	}

	function GenerateKey($numBits) {
		return CkRsa_GenerateKey($this->_cPtr,$numBits);
	}

	function ImportPrivateKey($strXml) {
		return CkRsa_ImportPrivateKey($this->_cPtr,$strXml);
	}

	function ImportPublicKey($strXml) {
		return CkRsa_ImportPublicKey($this->_cPtr,$strXml);
	}

	function OpenSslSignBytes($data,$outBytes) {
		return CkRsa_OpenSslSignBytes($this->_cPtr,$data,$outBytes);
	}

	function openSslSignBytesENC($data) {
		return CkRsa_openSslSignBytesENC($this->_cPtr,$data);
	}

	function OpenSslSignString($str,$outBytes) {
		return CkRsa_OpenSslSignString($this->_cPtr,$str,$outBytes);
	}

	function openSslSignStringENC($str) {
		return CkRsa_openSslSignStringENC($this->_cPtr,$str);
	}

	function OpenSslVerifyBytes($signature,$outBytes) {
		return CkRsa_OpenSslVerifyBytes($this->_cPtr,$signature,$outBytes);
	}

	function OpenSslVerifyBytesENC($str,$outBytes) {
		return CkRsa_OpenSslVerifyBytesENC($this->_cPtr,$str,$outBytes);
	}

	function openSslVerifyString($data) {
		return CkRsa_openSslVerifyString($this->_cPtr,$data);
	}

	function openSslVerifyStringENC($str) {
		return CkRsa_openSslVerifyStringENC($this->_cPtr,$str);
	}

	function SaveLastError($path) {
		return CkRsa_SaveLastError($this->_cPtr,$path);
	}

	function SignBytes($bData,$hashAlg,$outData) {
		return CkRsa_SignBytes($this->_cPtr,$bData,$hashAlg,$outData);
	}

	function signBytesENC($bData,$hashAlg) {
		return CkRsa_signBytesENC($this->_cPtr,$bData,$hashAlg);
	}

	function SignHash($hashBytes,$hashAlg,$outBytes) {
		return CkRsa_SignHash($this->_cPtr,$hashBytes,$hashAlg,$outBytes);
	}

	function signHashENC($encodedHash,$hashAlg) {
		return CkRsa_signHashENC($this->_cPtr,$encodedHash,$hashAlg);
	}

	function SignString($str,$hashAlg,$outData) {
		return CkRsa_SignString($this->_cPtr,$str,$hashAlg,$outData);
	}

	function signStringENC($str,$hashAlg) {
		return CkRsa_signStringENC($this->_cPtr,$str,$hashAlg);
	}

	function snkToXml($snkPath) {
		return CkRsa_snkToXml($this->_cPtr,$snkPath);
	}

	function UnlockComponent($unlockCode) {
		return CkRsa_UnlockComponent($this->_cPtr,$unlockCode);
	}

	function VerifyBytes($bData,$hashAlg,$sigData) {
		return CkRsa_VerifyBytes($this->_cPtr,$bData,$hashAlg,$sigData);
	}

	function VerifyBytesENC($bData,$hashAlg,$encodedSig) {
		return CkRsa_VerifyBytesENC($this->_cPtr,$bData,$hashAlg,$encodedSig);
	}

	function VerifyHash($hashBytes,$hashAlg,$sigBytes) {
		return CkRsa_VerifyHash($this->_cPtr,$hashBytes,$hashAlg,$sigBytes);
	}

	function VerifyHashENC($encodedHash,$hashAlg,$encodedSig) {
		return CkRsa_VerifyHashENC($this->_cPtr,$encodedHash,$hashAlg,$encodedSig);
	}

	function VerifyPrivateKey($xml) {
		return CkRsa_VerifyPrivateKey($this->_cPtr,$xml);
	}

	function VerifyString($str,$hashAlg,$sigData) {
		return CkRsa_VerifyString($this->_cPtr,$str,$hashAlg,$sigData);
	}

	function VerifyStringENC($str,$hashAlg,$sig) {
		return CkRsa_VerifyStringENC($this->_cPtr,$str,$hashAlg,$sig);
	}
}

class CkEmail {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkEmail') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkEmail();
	}

	function get_Utf8() {
		return CkEmail_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkEmail_put_Utf8($this->_cPtr,$b);
	}

	function get_Body($str) {
		CkEmail_get_Body($this->_cPtr,$str);
	}

	function body() {
		return CkEmail_body($this->_cPtr);
	}

	function put_Body($newVal) {
		CkEmail_put_Body($this->_cPtr,$newVal);
	}

	function get_BounceAddress($str) {
		CkEmail_get_BounceAddress($this->_cPtr,$str);
	}

	function bounceAddress() {
		return CkEmail_bounceAddress($this->_cPtr);
	}

	function put_BounceAddress($newVal) {
		CkEmail_put_BounceAddress($this->_cPtr,$newVal);
	}

	function get_Charset($str) {
		CkEmail_get_Charset($this->_cPtr,$str);
	}

	function charset() {
		return CkEmail_charset($this->_cPtr);
	}

	function put_Charset($newVal) {
		CkEmail_put_Charset($this->_cPtr,$newVal);
	}

	function get_Decrypted() {
		return CkEmail_get_Decrypted($this->_cPtr);
	}

	function get_EmailDate($outSysTime) {
		CkEmail_get_EmailDate($this->_cPtr,$outSysTime);
	}

	function put_EmailDate($sysTime) {
		CkEmail_put_EmailDate($this->_cPtr,$sysTime);
	}

	function get_EmailDateStr($str) {
		CkEmail_get_EmailDateStr($this->_cPtr,$str);
	}

	function emailDateStr() {
		return CkEmail_emailDateStr($this->_cPtr);
	}

	function put_EmailDateStr($newVal) {
		CkEmail_put_EmailDateStr($this->_cPtr,$newVal);
	}

	function get_EncryptedBy($str) {
		CkEmail_get_EncryptedBy($this->_cPtr,$str);
	}

	function encryptedBy() {
		return CkEmail_encryptedBy($this->_cPtr);
	}

	function get_FileDistList($str) {
		CkEmail_get_FileDistList($this->_cPtr,$str);
	}

	function fileDistList() {
		return CkEmail_fileDistList($this->_cPtr);
	}

	function put_FileDistList($newVal) {
		CkEmail_put_FileDistList($this->_cPtr,$newVal);
	}

	function get_From($str) {
		CkEmail_get_From($this->_cPtr,$str);
	}

	function ck_from() {
		return CkEmail_ck_from($this->_cPtr);
	}

	function put_From($newVal) {
		CkEmail_put_From($this->_cPtr,$newVal);
	}

	function get_FromAddress($str) {
		CkEmail_get_FromAddress($this->_cPtr,$str);
	}

	function fromAddress() {
		return CkEmail_fromAddress($this->_cPtr);
	}

	function put_FromAddress($newVal) {
		CkEmail_put_FromAddress($this->_cPtr,$newVal);
	}

	function get_FromName($str) {
		CkEmail_get_FromName($this->_cPtr,$str);
	}

	function fromName() {
		return CkEmail_fromName($this->_cPtr);
	}

	function put_FromName($newVal) {
		CkEmail_put_FromName($this->_cPtr,$newVal);
	}

	function get_Header($str) {
		CkEmail_get_Header($this->_cPtr,$str);
	}

	function header() {
		return CkEmail_header($this->_cPtr);
	}

	function get_Language($str) {
		CkEmail_get_Language($this->_cPtr,$str);
	}

	function language() {
		return CkEmail_language($this->_cPtr);
	}

	function get_LastErrorHtml($str) {
		CkEmail_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkEmail_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkEmail_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkEmail_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkEmail_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkEmail_lastErrorXml($this->_cPtr);
	}

	function get_LocalDate($outSysTime) {
		CkEmail_get_LocalDate($this->_cPtr,$outSysTime);
	}

	function put_LocalDate($sysTime) {
		CkEmail_put_LocalDate($this->_cPtr,$sysTime);
	}

	function get_LocalDateStr($str) {
		CkEmail_get_LocalDateStr($this->_cPtr,$str);
	}

	function localDateStr() {
		return CkEmail_localDateStr($this->_cPtr);
	}

	function put_LocalDateStr($newVal) {
		CkEmail_put_LocalDateStr($this->_cPtr,$newVal);
	}

	function get_Mailer($str) {
		CkEmail_get_Mailer($this->_cPtr,$str);
	}

	function mailer() {
		return CkEmail_mailer($this->_cPtr);
	}

	function put_Mailer($newVal) {
		CkEmail_put_Mailer($this->_cPtr,$newVal);
	}

	function get_NumAlternatives() {
		return CkEmail_get_NumAlternatives($this->_cPtr);
	}

	function get_NumAttachedMessages() {
		return CkEmail_get_NumAttachedMessages($this->_cPtr);
	}

	function get_NumAttachments() {
		return CkEmail_get_NumAttachments($this->_cPtr);
	}

	function get_NumBcc() {
		return CkEmail_get_NumBcc($this->_cPtr);
	}

	function get_NumCC() {
		return CkEmail_get_NumCC($this->_cPtr);
	}

	function get_NumDaysOld() {
		return CkEmail_get_NumDaysOld($this->_cPtr);
	}

	function get_NumHeaderFields() {
		return CkEmail_get_NumHeaderFields($this->_cPtr);
	}

	function get_NumRelatedItems() {
		return CkEmail_get_NumRelatedItems($this->_cPtr);
	}

	function get_NumReplacePatterns() {
		return CkEmail_get_NumReplacePatterns($this->_cPtr);
	}

	function get_NumReports() {
		return CkEmail_get_NumReports($this->_cPtr);
	}

	function get_NumTo() {
		return CkEmail_get_NumTo($this->_cPtr);
	}

	function get_OverwriteExisting() {
		return CkEmail_get_OverwriteExisting($this->_cPtr);
	}

	function put_OverwriteExisting($newVal) {
		CkEmail_put_OverwriteExisting($this->_cPtr,$newVal);
	}

	function get_Pkcs7CryptAlg($str) {
		CkEmail_get_Pkcs7CryptAlg($this->_cPtr,$str);
	}

	function pkcs7CryptAlg() {
		return CkEmail_pkcs7CryptAlg($this->_cPtr);
	}

	function put_Pkcs7CryptAlg($newVal) {
		CkEmail_put_Pkcs7CryptAlg($this->_cPtr,$newVal);
	}

	function get_Pkcs7KeyLength() {
		return CkEmail_get_Pkcs7KeyLength($this->_cPtr);
	}

	function put_Pkcs7KeyLength($newVal) {
		CkEmail_put_Pkcs7KeyLength($this->_cPtr,$newVal);
	}

	function get_PreferredCharset($str) {
		CkEmail_get_PreferredCharset($this->_cPtr,$str);
	}

	function preferredCharset() {
		return CkEmail_preferredCharset($this->_cPtr);
	}

	function put_PreferredCharset($newVal) {
		CkEmail_put_PreferredCharset($this->_cPtr,$newVal);
	}

	function get_PrependHeaders() {
		return CkEmail_get_PrependHeaders($this->_cPtr);
	}

	function put_PrependHeaders($newVal) {
		CkEmail_put_PrependHeaders($this->_cPtr,$newVal);
	}

	function get_ReceivedEncrypted() {
		return CkEmail_get_ReceivedEncrypted($this->_cPtr);
	}

	function get_ReceivedSigned() {
		return CkEmail_get_ReceivedSigned($this->_cPtr);
	}

	function get_ReplyTo($str) {
		CkEmail_get_ReplyTo($this->_cPtr,$str);
	}

	function replyTo() {
		return CkEmail_replyTo($this->_cPtr);
	}

	function put_ReplyTo($newVal) {
		CkEmail_put_ReplyTo($this->_cPtr,$newVal);
	}

	function get_ReturnReceipt() {
		return CkEmail_get_ReturnReceipt($this->_cPtr);
	}

	function put_ReturnReceipt($newVal) {
		CkEmail_put_ReturnReceipt($this->_cPtr,$newVal);
	}

	function get_SendEncrypted() {
		return CkEmail_get_SendEncrypted($this->_cPtr);
	}

	function put_SendEncrypted($newVal) {
		CkEmail_put_SendEncrypted($this->_cPtr,$newVal);
	}

	function get_SendSigned() {
		return CkEmail_get_SendSigned($this->_cPtr);
	}

	function put_SendSigned($newVal) {
		CkEmail_put_SendSigned($this->_cPtr,$newVal);
	}

	function get_SignaturesValid() {
		return CkEmail_get_SignaturesValid($this->_cPtr);
	}

	function get_SignedBy($str) {
		CkEmail_get_SignedBy($this->_cPtr,$str);
	}

	function signedBy() {
		return CkEmail_signedBy($this->_cPtr);
	}

	function get_SigningHashAlg($str) {
		CkEmail_get_SigningHashAlg($this->_cPtr,$str);
	}

	function signingHashAlg() {
		return CkEmail_signingHashAlg($this->_cPtr);
	}

	function put_SigningHashAlg($newVal) {
		CkEmail_put_SigningHashAlg($this->_cPtr,$newVal);
	}

	function get_Size() {
		return CkEmail_get_Size($this->_cPtr);
	}

	function get_Subject($str) {
		CkEmail_get_Subject($this->_cPtr,$str);
	}

	function subject() {
		return CkEmail_subject($this->_cPtr);
	}

	function put_Subject($newVal) {
		CkEmail_put_Subject($this->_cPtr,$newVal);
	}

	function get_Uidl($str) {
		CkEmail_get_Uidl($this->_cPtr,$str);
	}

	function uidl() {
		return CkEmail_uidl($this->_cPtr);
	}

	function get_UnpackUseRelPaths() {
		return CkEmail_get_UnpackUseRelPaths($this->_cPtr);
	}

	function put_UnpackUseRelPaths($newVal) {
		CkEmail_put_UnpackUseRelPaths($this->_cPtr,$newVal);
	}

	function get_Version($str) {
		CkEmail_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkEmail_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkEmail_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkEmail_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkEmail_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkEmail_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkEmail_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function AddAttachmentHeader($index,$fieldName,$fieldValue) {
		CkEmail_AddAttachmentHeader($this->_cPtr,$index,$fieldName,$fieldValue);
	}

	function AddBcc($friendlyName,$emailAddress) {
		return CkEmail_AddBcc($this->_cPtr,$friendlyName,$emailAddress);
	}

	function AddCC($friendlyName,$emailAddress) {
		return CkEmail_AddCC($this->_cPtr,$friendlyName,$emailAddress);
	}

	function AddDataAttachment($fileName,$pByteData,$szByteData) {
		return CkEmail_AddDataAttachment($this->_cPtr,$fileName,$pByteData,$szByteData);
	}

	function AddDataAttachment2($fileName,$content,$contentType) {
		return CkEmail_AddDataAttachment2($this->_cPtr,$fileName,$content,$contentType);
	}

	function AddEncryptCert($cert) {
		return CkEmail_AddEncryptCert($this->_cPtr,$cert);
	}

	function addFileAttachment($path) {
		return CkEmail_addFileAttachment($this->_cPtr,$path);
	}

	function AddFileAttachment2($path,$contentType) {
		return CkEmail_AddFileAttachment2($this->_cPtr,$path,$contentType);
	}

	function AddHeaderField($fieldName,$fieldValue) {
		CkEmail_AddHeaderField($this->_cPtr,$fieldName,$fieldValue);
	}

	function AddHeaderField2($fieldName,$fieldValue) {
		CkEmail_AddHeaderField2($this->_cPtr,$fieldName,$fieldValue);
	}

	function AddHtmlAlternativeBody($body) {
		return CkEmail_AddHtmlAlternativeBody($this->_cPtr,$body);
	}

	function AddMultipleBcc($commaSeparatedAddresses) {
		return CkEmail_AddMultipleBcc($this->_cPtr,$commaSeparatedAddresses);
	}

	function AddMultipleCC($commaSeparatedAddresses) {
		return CkEmail_AddMultipleCC($this->_cPtr,$commaSeparatedAddresses);
	}

	function AddMultipleTo($commaSeparatedAddresses) {
		return CkEmail_AddMultipleTo($this->_cPtr,$commaSeparatedAddresses);
	}

	function AddPfxSourceData($pfxData,$password) {
		return CkEmail_AddPfxSourceData($this->_cPtr,$pfxData,$password);
	}

	function AddPfxSourceFile($pfxFilePath,$password) {
		return CkEmail_AddPfxSourceFile($this->_cPtr,$pfxFilePath,$password);
	}

	function AddPlainTextAlternativeBody($body) {
		return CkEmail_AddPlainTextAlternativeBody($this->_cPtr,$body);
	}

	function addRelatedData($fileName,$inData) {
		return CkEmail_addRelatedData($this->_cPtr,$fileName,$inData);
	}

	function AddRelatedData2($inData,$fileNameInHtml) {
		CkEmail_AddRelatedData2($this->_cPtr,$inData,$fileNameInHtml);
	}

	function AddRelatedData2P($pByteData,$szByteData,$fileNameInHtml) {
		CkEmail_AddRelatedData2P($this->_cPtr,$pByteData,$szByteData,$fileNameInHtml);
	}

	function addRelatedDataP($nameInHtml,$pByteData,$szByteData) {
		return CkEmail_addRelatedDataP($this->_cPtr,$nameInHtml,$pByteData,$szByteData);
	}

	function addRelatedFile($path) {
		return CkEmail_addRelatedFile($this->_cPtr,$path);
	}

	function AddRelatedFile2($fileNameOnDisk,$filenameInHtml) {
		return CkEmail_AddRelatedFile2($this->_cPtr,$fileNameOnDisk,$filenameInHtml);
	}

	function AddRelatedHeader($index,$fieldName,$fieldValue) {
		CkEmail_AddRelatedHeader($this->_cPtr,$index,$fieldName,$fieldValue);
	}

	function addRelatedString($nameInHtml,$str,$charset) {
		return CkEmail_addRelatedString($this->_cPtr,$nameInHtml,$str,$charset);
	}

	function AddRelatedString2($str,$charset,$filenameInHtml) {
		CkEmail_AddRelatedString2($this->_cPtr,$str,$charset,$filenameInHtml);
	}

	function AddStringAttachment($fileName,$str) {
		return CkEmail_AddStringAttachment($this->_cPtr,$fileName,$str);
	}

	function AddStringAttachment2($fileName,$str,$charset) {
		return CkEmail_AddStringAttachment2($this->_cPtr,$fileName,$str,$charset);
	}

	function AddTo($friendlyName,$emailAddress) {
		return CkEmail_AddTo($this->_cPtr,$friendlyName,$emailAddress);
	}

	function AddiCalendarAlternativeBody($body,$methodName) {
		return CkEmail_AddiCalendarAlternativeBody($this->_cPtr,$body,$methodName);
	}

	function AesDecrypt($password) {
		return CkEmail_AesDecrypt($this->_cPtr,$password);
	}

	function AesEncrypt($password) {
		return CkEmail_AesEncrypt($this->_cPtr,$password);
	}

	function AppendToBody($str) {
		CkEmail_AppendToBody($this->_cPtr,$str);
	}

	function AspUnpack($prefix,$saveDir,$urlPath,$cleanFiles) {
		return CkEmail_AspUnpack($this->_cPtr,$prefix,$saveDir,$urlPath,$cleanFiles);
	}

	function AspUnpack2($prefix,$saveDir,$urlPath,$cleanFiles,$outHtml) {
		return CkEmail_AspUnpack2($this->_cPtr,$prefix,$saveDir,$urlPath,$cleanFiles,$outHtml);
	}

	function AttachMessage($mimeBytes) {
		return CkEmail_AttachMessage($this->_cPtr,$mimeBytes);
	}

	function bEncodeBytes($pByteData,$szByteData,$charset) {
		return CkEmail_bEncodeBytes($this->_cPtr,$pByteData,$szByteData,$charset);
	}

	function bEncodeString($str,$charset) {
		return CkEmail_bEncodeString($this->_cPtr,$str,$charset);
	}

	function ClearBcc() {
		CkEmail_ClearBcc($this->_cPtr);
	}

	function ClearCC() {
		CkEmail_ClearCC($this->_cPtr);
	}

	function ClearEncryptCerts() {
		CkEmail_ClearEncryptCerts($this->_cPtr);
	}

	function ClearTo() {
		CkEmail_ClearTo($this->_cPtr);
	}

	function c_Clone() {
		$r=CkEmail_c_Clone($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkEmail($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function computeGlobalKey($encoding,$bFold) {
		return CkEmail_computeGlobalKey($this->_cPtr,$encoding,$bFold);
	}

	function CreateDsn($explanation,$xmlDeliveryStatus,$bHeaderOnly) {
		$r=CkEmail_CreateDsn($this->_cPtr,$explanation,$xmlDeliveryStatus,$bHeaderOnly);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkEmail($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function CreateForward() {
		$r=CkEmail_CreateForward($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkEmail($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function CreateMdn($explanation,$xmlMdnFields,$bHeaderOnly) {
		$r=CkEmail_CreateMdn($this->_cPtr,$explanation,$xmlMdnFields,$bHeaderOnly);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkEmail($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function CreateReply() {
		$r=CkEmail_CreateReply($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkEmail($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function createTempMht($inPath) {
		return CkEmail_createTempMht($this->_cPtr,$inPath);
	}

	function DropAttachments() {
		CkEmail_DropAttachments($this->_cPtr);
	}

	function DropRelatedItem($index) {
		CkEmail_DropRelatedItem($this->_cPtr,$index);
	}

	function DropRelatedItems() {
		CkEmail_DropRelatedItems($this->_cPtr);
	}

	function DropSingleAttachment($index) {
		return CkEmail_DropSingleAttachment($this->_cPtr,$index);
	}

	function FindIssuer($cert) {
		$r=CkEmail_FindIssuer($this->_cPtr,$cert);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkCert($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function generateFilename() {
		return CkEmail_generateFilename($this->_cPtr);
	}

	function getAltHeaderField($index,$fieldName) {
		return CkEmail_getAltHeaderField($this->_cPtr,$index,$fieldName);
	}

	function altHeaderField($index,$fieldName) {
		return CkEmail_altHeaderField($this->_cPtr,$index,$fieldName);
	}

	function getAlternativeBody($index) {
		return CkEmail_getAlternativeBody($this->_cPtr,$index);
	}

	function alternativeBody($index) {
		return CkEmail_alternativeBody($this->_cPtr,$index);
	}

	function getAlternativeBodyByContentType($contentType) {
		return CkEmail_getAlternativeBodyByContentType($this->_cPtr,$contentType);
	}

	function alternativeBodyByContentType($contentType) {
		return CkEmail_alternativeBodyByContentType($this->_cPtr,$contentType);
	}

	function getAlternativeContentType($index) {
		return CkEmail_getAlternativeContentType($this->_cPtr,$index);
	}

	function alternativeContentType($index) {
		return CkEmail_alternativeContentType($this->_cPtr,$index);
	}

	function GetAttachedMessage($index) {
		$r=CkEmail_GetAttachedMessage($this->_cPtr,$index);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkEmail($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function getAttachedMessageFilename($index) {
		return CkEmail_getAttachedMessageFilename($this->_cPtr,$index);
	}

	function attachedMessageFilename($index) {
		return CkEmail_attachedMessageFilename($this->_cPtr,$index);
	}

	function getAttachmentContentID($index) {
		return CkEmail_getAttachmentContentID($this->_cPtr,$index);
	}

	function attachmentContentID($index) {
		return CkEmail_attachmentContentID($this->_cPtr,$index);
	}

	function getAttachmentContentType($index) {
		return CkEmail_getAttachmentContentType($this->_cPtr,$index);
	}

	function attachmentContentType($index) {
		return CkEmail_attachmentContentType($this->_cPtr,$index);
	}

	function GetAttachmentData($index,$outData) {
		return CkEmail_GetAttachmentData($this->_cPtr,$index,$outData);
	}

	function getAttachmentFilename($index) {
		return CkEmail_getAttachmentFilename($this->_cPtr,$index);
	}

	function attachmentFilename($index) {
		return CkEmail_attachmentFilename($this->_cPtr,$index);
	}

	function getAttachmentHeader($index,$fieldName) {
		return CkEmail_getAttachmentHeader($this->_cPtr,$index,$fieldName);
	}

	function attachmentHeader($index,$fieldName) {
		return CkEmail_attachmentHeader($this->_cPtr,$index,$fieldName);
	}

	function GetAttachmentSize($index) {
		return CkEmail_GetAttachmentSize($this->_cPtr,$index);
	}

	function getAttachmentString($index,$charset) {
		return CkEmail_getAttachmentString($this->_cPtr,$index,$charset);
	}

	function attachmentString($index,$charset) {
		return CkEmail_attachmentString($this->_cPtr,$index,$charset);
	}

	function getAttachmentStringCrLf($index,$charset) {
		return CkEmail_getAttachmentStringCrLf($this->_cPtr,$index,$charset);
	}

	function attachmentStringCrLf($index,$charset) {
		return CkEmail_attachmentStringCrLf($this->_cPtr,$index,$charset);
	}

	function getBcc($index) {
		return CkEmail_getBcc($this->_cPtr,$index);
	}

	function bcc($index) {
		return CkEmail_bcc($this->_cPtr,$index);
	}

	function getBccAddr($index) {
		return CkEmail_getBccAddr($this->_cPtr,$index);
	}

	function bccAddr($index) {
		return CkEmail_bccAddr($this->_cPtr,$index);
	}

	function getBccName($index) {
		return CkEmail_getBccName($this->_cPtr,$index);
	}

	function bccName($index) {
		return CkEmail_bccName($this->_cPtr,$index);
	}

	function getCC($index) {
		return CkEmail_getCC($this->_cPtr,$index);
	}

	function cC($index) {
		return CkEmail_cC($this->_cPtr,$index);
	}

	function getCcAddr($index) {
		return CkEmail_getCcAddr($this->_cPtr,$index);
	}

	function ccAddr($index) {
		return CkEmail_ccAddr($this->_cPtr,$index);
	}

	function getCcName($index) {
		return CkEmail_getCcName($this->_cPtr,$index);
	}

	function ccName($index) {
		return CkEmail_ccName($this->_cPtr,$index);
	}

	function getDeliveryStatusInfo($fieldName) {
		return CkEmail_getDeliveryStatusInfo($this->_cPtr,$fieldName);
	}

	function deliveryStatusInfo($fieldName) {
		return CkEmail_deliveryStatusInfo($this->_cPtr,$fieldName);
	}

	function GetDsnFinalRecipients() {
		$r=CkEmail_GetDsnFinalRecipients($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkStringArray($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetDt() {
		$r=CkEmail_GetDt($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkDateTime($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetEncryptCert() {
		$r=CkEmail_GetEncryptCert($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkCert($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetEncryptedByCert() {
		$r=CkEmail_GetEncryptedByCert($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkCert($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetFileContent($path,$outData) {
		return CkEmail_GetFileContent($this->_cPtr,$path,$outData);
	}

	function getHeaderField($fieldName) {
		return CkEmail_getHeaderField($this->_cPtr,$fieldName);
	}

	function headerField($fieldName) {
		return CkEmail_headerField($this->_cPtr,$fieldName);
	}

	function getHeaderFieldName($index) {
		return CkEmail_getHeaderFieldName($this->_cPtr,$index);
	}

	function headerFieldName($index) {
		return CkEmail_headerFieldName($this->_cPtr,$index);
	}

	function getHeaderFieldValue($index) {
		return CkEmail_getHeaderFieldValue($this->_cPtr,$index);
	}

	function headerFieldValue($index) {
		return CkEmail_headerFieldValue($this->_cPtr,$index);
	}

	function getHtmlBody() {
		return CkEmail_getHtmlBody($this->_cPtr);
	}

	function htmlBody() {
		return CkEmail_htmlBody($this->_cPtr);
	}

	function GetImapUid() {
		return CkEmail_GetImapUid($this->_cPtr);
	}

	function GetLinkedDomains($sa) {
		CkEmail_GetLinkedDomains($this->_cPtr,$sa);
	}

	function GetMbHeaderField($fieldName,$outData) {
		return CkEmail_GetMbHeaderField($this->_cPtr,$fieldName,$outData);
	}

	function GetMbHeaderField2($charset,$fieldName,$outData) {
		return CkEmail_GetMbHeaderField2($this->_cPtr,$charset,$fieldName,$outData);
	}

	function GetMbHtmlBody($charset,$outData) {
		return CkEmail_GetMbHtmlBody($this->_cPtr,$charset,$outData);
	}

	function GetMbPlainTextBody($charset,$outData) {
		return CkEmail_GetMbPlainTextBody($this->_cPtr,$charset,$outData);
	}

	function getMime() {
		return CkEmail_getMime($this->_cPtr);
	}

	function mime() {
		return CkEmail_mime($this->_cPtr);
	}

	function GetMimeBinary($outBytes) {
		return CkEmail_GetMimeBinary($this->_cPtr,$outBytes);
	}

	function GetMimeObject() {
		$r=CkEmail_GetMimeObject($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkMime($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function getPlainTextBody() {
		return CkEmail_getPlainTextBody($this->_cPtr);
	}

	function plainTextBody() {
		return CkEmail_plainTextBody($this->_cPtr);
	}

	function getRelatedContentID($index) {
		return CkEmail_getRelatedContentID($this->_cPtr,$index);
	}

	function relatedContentID($index) {
		return CkEmail_relatedContentID($this->_cPtr,$index);
	}

	function getRelatedContentLocation($index) {
		return CkEmail_getRelatedContentLocation($this->_cPtr,$index);
	}

	function relatedContentLocation($index) {
		return CkEmail_relatedContentLocation($this->_cPtr,$index);
	}

	function getRelatedContentType($index) {
		return CkEmail_getRelatedContentType($this->_cPtr,$index);
	}

	function relatedContentType($index) {
		return CkEmail_relatedContentType($this->_cPtr,$index);
	}

	function GetRelatedData($index,$outBuffer) {
		return CkEmail_GetRelatedData($this->_cPtr,$index,$outBuffer);
	}

	function getRelatedFilename($index) {
		return CkEmail_getRelatedFilename($this->_cPtr,$index);
	}

	function relatedFilename($index) {
		return CkEmail_relatedFilename($this->_cPtr,$index);
	}

	function getRelatedString($index,$charset) {
		return CkEmail_getRelatedString($this->_cPtr,$index,$charset);
	}

	function relatedString($index,$charset) {
		return CkEmail_relatedString($this->_cPtr,$index,$charset);
	}

	function getRelatedStringCrLf($index,$charset) {
		return CkEmail_getRelatedStringCrLf($this->_cPtr,$index,$charset);
	}

	function relatedStringCrLf($index,$charset) {
		return CkEmail_relatedStringCrLf($this->_cPtr,$index,$charset);
	}

	function getReplacePattern($index) {
		return CkEmail_getReplacePattern($this->_cPtr,$index);
	}

	function replacePattern($index) {
		return CkEmail_replacePattern($this->_cPtr,$index);
	}

	function getReplaceString($index) {
		return CkEmail_getReplaceString($this->_cPtr,$index);
	}

	function replaceString($index) {
		return CkEmail_replaceString($this->_cPtr,$index);
	}

	function getReplaceString2($pattern) {
		return CkEmail_getReplaceString2($this->_cPtr,$pattern);
	}

	function replaceString2($pattern) {
		return CkEmail_replaceString2($this->_cPtr,$pattern);
	}

	function getReport($index) {
		return CkEmail_getReport($this->_cPtr,$index);
	}

	function report($index) {
		return CkEmail_report($this->_cPtr,$index);
	}

	function GetSignedByCert() {
		$r=CkEmail_GetSignedByCert($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkCert($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetSigningCert() {
		$r=CkEmail_GetSigningCert($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkCert($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function getTo($index) {
		return CkEmail_getTo($this->_cPtr,$index);
	}

	function to($index) {
		return CkEmail_to($this->_cPtr,$index);
	}

	function getToAddr($index) {
		return CkEmail_getToAddr($this->_cPtr,$index);
	}

	function toAddr($index) {
		return CkEmail_toAddr($this->_cPtr,$index);
	}

	function getToName($index) {
		return CkEmail_getToName($this->_cPtr,$index);
	}

	function toName($index) {
		return CkEmail_toName($this->_cPtr,$index);
	}

	function getXml() {
		return CkEmail_getXml($this->_cPtr);
	}

	function xml() {
		return CkEmail_xml($this->_cPtr);
	}

	function HasHeaderMatching($fieldName,$valuePattern,$caseInsensitive) {
		return CkEmail_HasHeaderMatching($this->_cPtr,$fieldName,$valuePattern,$caseInsensitive);
	}

	function HasHtmlBody() {
		return CkEmail_HasHtmlBody($this->_cPtr);
	}

	function HasPlainTextBody() {
		return CkEmail_HasPlainTextBody($this->_cPtr);
	}

	function IsMultipartReport() {
		return CkEmail_IsMultipartReport($this->_cPtr);
	}

	function LoadEml($mimePath) {
		return CkEmail_LoadEml($this->_cPtr,$mimePath);
	}

	function LoadXml($xmlPath) {
		return CkEmail_LoadXml($this->_cPtr,$xmlPath);
	}

	function LoadXmlString($xmlStr) {
		return CkEmail_LoadXmlString($this->_cPtr,$xmlStr);
	}

	function qEncodeBytes($pByteData,$szByteData,$charset) {
		return CkEmail_qEncodeBytes($this->_cPtr,$pByteData,$szByteData,$charset);
	}

	function qEncodeString($str,$charset) {
		return CkEmail_qEncodeString($this->_cPtr,$str,$charset);
	}

	function RemoveAttachedMessage($index) {
		CkEmail_RemoveAttachedMessage($this->_cPtr,$index);
	}

	function RemoveAttachedMessages() {
		CkEmail_RemoveAttachedMessages($this->_cPtr);
	}

	function RemoveAttachmentPaths() {
		CkEmail_RemoveAttachmentPaths($this->_cPtr);
	}

	function RemoveHeaderField($fieldName) {
		CkEmail_RemoveHeaderField($this->_cPtr,$fieldName);
	}

	function RemoveHtmlAlternative() {
		CkEmail_RemoveHtmlAlternative($this->_cPtr);
	}

	function RemovePlainTextAlternative() {
		CkEmail_RemovePlainTextAlternative($this->_cPtr);
	}

	function SaveAllAttachments($directory) {
		return CkEmail_SaveAllAttachments($this->_cPtr,$directory);
	}

	function SaveAttachedFile($index,$directory) {
		return CkEmail_SaveAttachedFile($this->_cPtr,$index,$directory);
	}

	function SaveEml($path) {
		return CkEmail_SaveEml($this->_cPtr,$path);
	}

	function SaveLastError($path) {
		return CkEmail_SaveLastError($this->_cPtr,$path);
	}

	function SaveRelatedItem($index,$directory) {
		return CkEmail_SaveRelatedItem($this->_cPtr,$index,$directory);
	}

	function SaveXml($path) {
		return CkEmail_SaveXml($this->_cPtr,$path);
	}

	function SetAttachmentCharset($index,$charset) {
		return CkEmail_SetAttachmentCharset($this->_cPtr,$index,$charset);
	}

	function SetAttachmentDisposition($index,$disposition) {
		return CkEmail_SetAttachmentDisposition($this->_cPtr,$index,$disposition);
	}

	function SetAttachmentFilename($index,$filename) {
		return CkEmail_SetAttachmentFilename($this->_cPtr,$index,$filename);
	}

	function SetDecryptCert2($cert,$key) {
		return CkEmail_SetDecryptCert2($this->_cPtr,$cert,$key);
	}

	function SetDt($dt) {
		return CkEmail_SetDt($this->_cPtr,$dt);
	}

	function SetEncryptCert($cert) {
		return CkEmail_SetEncryptCert($this->_cPtr,$cert);
	}

	function SetFromMimeBytes($mimeBytes) {
		return CkEmail_SetFromMimeBytes($this->_cPtr,$mimeBytes);
	}

	function SetFromMimeBytes2($mimeBytes,$charset) {
		return CkEmail_SetFromMimeBytes2($this->_cPtr,$mimeBytes,$charset);
	}

	function SetFromMimeObject($mime) {
		return CkEmail_SetFromMimeObject($this->_cPtr,$mime);
	}

	function SetFromMimeText($mimeText) {
		return CkEmail_SetFromMimeText($this->_cPtr,$mimeText);
	}

	function SetFromXmlText($xmlStr) {
		return CkEmail_SetFromXmlText($this->_cPtr,$xmlStr);
	}

	function SetHtmlBody($html) {
		CkEmail_SetHtmlBody($this->_cPtr,$html);
	}

	function SetMbHtmlBody($charset,$pByteData,$szByteData) {
		return CkEmail_SetMbHtmlBody($this->_cPtr,$charset,$pByteData,$szByteData);
	}

	function SetMbPlainTextBody($charset,$pByteData,$szByteData) {
		return CkEmail_SetMbPlainTextBody($this->_cPtr,$charset,$pByteData,$szByteData);
	}

	function SetRelatedFilename($index,$filename) {
		return CkEmail_SetRelatedFilename($this->_cPtr,$index,$filename);
	}

	function SetReplacePattern($pattern,$replaceString) {
		return CkEmail_SetReplacePattern($this->_cPtr,$pattern,$replaceString);
	}

	function SetSigningCert($cert) {
		return CkEmail_SetSigningCert($this->_cPtr,$cert);
	}

	function SetSigningCert2($cert,$key) {
		return CkEmail_SetSigningCert2($this->_cPtr,$cert,$key);
	}

	function SetTextBody($bodyText,$contentType) {
		CkEmail_SetTextBody($this->_cPtr,$bodyText,$contentType);
	}

	function UidlEquals($e) {
		return CkEmail_UidlEquals($this->_cPtr,$e);
	}

	function UnSpamify() {
		CkEmail_UnSpamify($this->_cPtr);
	}

	function UnpackHtml($unpackDir,$htmlFilename,$partsSubdir) {
		return CkEmail_UnpackHtml($this->_cPtr,$unpackDir,$htmlFilename,$partsSubdir);
	}

	function UnzipAttachments() {
		return CkEmail_UnzipAttachments($this->_cPtr);
	}

	function ZipAttachments($zipFilename) {
		return CkEmail_ZipAttachments($this->_cPtr,$zipFilename);
	}
}

class CkCert {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkCert') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkCert();
	}

	function get_Utf8() {
		return CkCert_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkCert_put_Utf8($this->_cPtr,$b);
	}

	function get_AvoidWindowsPkAccess() {
		return CkCert_get_AvoidWindowsPkAccess($this->_cPtr);
	}

	function put_AvoidWindowsPkAccess($newVal) {
		CkCert_put_AvoidWindowsPkAccess($this->_cPtr,$newVal);
	}

	function get_CertVersion() {
		return CkCert_get_CertVersion($this->_cPtr);
	}

	function get_CspName($str) {
		CkCert_get_CspName($this->_cPtr,$str);
	}

	function cspName() {
		return CkCert_cspName($this->_cPtr);
	}

	function get_Expired() {
		return CkCert_get_Expired($this->_cPtr);
	}

	function get_ForClientAuthentication() {
		return CkCert_get_ForClientAuthentication($this->_cPtr);
	}

	function get_ForCodeSigning() {
		return CkCert_get_ForCodeSigning($this->_cPtr);
	}

	function get_ForSecureEmail() {
		return CkCert_get_ForSecureEmail($this->_cPtr);
	}

	function get_ForServerAuthentication() {
		return CkCert_get_ForServerAuthentication($this->_cPtr);
	}

	function get_ForTimeStamping() {
		return CkCert_get_ForTimeStamping($this->_cPtr);
	}

	function get_HasKeyContainer() {
		return CkCert_get_HasKeyContainer($this->_cPtr);
	}

	function get_IntendedKeyUsage() {
		return CkCert_get_IntendedKeyUsage($this->_cPtr);
	}

	function get_IsRoot() {
		return CkCert_get_IsRoot($this->_cPtr);
	}

	function get_IssuerC($str) {
		CkCert_get_IssuerC($this->_cPtr,$str);
	}

	function issuerC() {
		return CkCert_issuerC($this->_cPtr);
	}

	function get_IssuerCN($str) {
		CkCert_get_IssuerCN($this->_cPtr,$str);
	}

	function issuerCN() {
		return CkCert_issuerCN($this->_cPtr);
	}

	function get_IssuerDN($str) {
		CkCert_get_IssuerDN($this->_cPtr,$str);
	}

	function issuerDN() {
		return CkCert_issuerDN($this->_cPtr);
	}

	function get_IssuerE($str) {
		CkCert_get_IssuerE($this->_cPtr,$str);
	}

	function issuerE() {
		return CkCert_issuerE($this->_cPtr);
	}

	function get_IssuerL($str) {
		CkCert_get_IssuerL($this->_cPtr,$str);
	}

	function issuerL() {
		return CkCert_issuerL($this->_cPtr);
	}

	function get_IssuerO($str) {
		CkCert_get_IssuerO($this->_cPtr,$str);
	}

	function issuerO() {
		return CkCert_issuerO($this->_cPtr);
	}

	function get_IssuerOU($str) {
		CkCert_get_IssuerOU($this->_cPtr,$str);
	}

	function issuerOU() {
		return CkCert_issuerOU($this->_cPtr);
	}

	function get_IssuerS($str) {
		CkCert_get_IssuerS($this->_cPtr,$str);
	}

	function issuerS() {
		return CkCert_issuerS($this->_cPtr);
	}

	function get_KeyContainerName($str) {
		CkCert_get_KeyContainerName($this->_cPtr,$str);
	}

	function keyContainerName() {
		return CkCert_keyContainerName($this->_cPtr);
	}

	function get_LastErrorHtml($str) {
		CkCert_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkCert_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkCert_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkCert_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkCert_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkCert_lastErrorXml($this->_cPtr);
	}

	function get_MachineKeyset() {
		return CkCert_get_MachineKeyset($this->_cPtr);
	}

	function get_OcspUrl($str) {
		CkCert_get_OcspUrl($this->_cPtr,$str);
	}

	function ocspUrl() {
		return CkCert_ocspUrl($this->_cPtr);
	}

	function get_PrivateKeyExportable() {
		return CkCert_get_PrivateKeyExportable($this->_cPtr);
	}

	function get_Revoked() {
		return CkCert_get_Revoked($this->_cPtr);
	}

	function get_Rfc822Name($str) {
		CkCert_get_Rfc822Name($this->_cPtr,$str);
	}

	function rfc822Name() {
		return CkCert_rfc822Name($this->_cPtr);
	}

	function get_SelfSigned() {
		return CkCert_get_SelfSigned($this->_cPtr);
	}

	function get_SerialNumber($str) {
		CkCert_get_SerialNumber($this->_cPtr,$str);
	}

	function serialNumber() {
		return CkCert_serialNumber($this->_cPtr);
	}

	function get_Sha1Thumbprint($str) {
		CkCert_get_Sha1Thumbprint($this->_cPtr,$str);
	}

	function sha1Thumbprint() {
		return CkCert_sha1Thumbprint($this->_cPtr);
	}

	function get_SignatureVerified() {
		return CkCert_get_SignatureVerified($this->_cPtr);
	}

	function get_Silent() {
		return CkCert_get_Silent($this->_cPtr);
	}

	function get_SubjectC($str) {
		CkCert_get_SubjectC($this->_cPtr,$str);
	}

	function subjectC() {
		return CkCert_subjectC($this->_cPtr);
	}

	function get_SubjectCN($str) {
		CkCert_get_SubjectCN($this->_cPtr,$str);
	}

	function subjectCN() {
		return CkCert_subjectCN($this->_cPtr);
	}

	function get_SubjectDN($str) {
		CkCert_get_SubjectDN($this->_cPtr,$str);
	}

	function subjectDN() {
		return CkCert_subjectDN($this->_cPtr);
	}

	function get_SubjectE($str) {
		CkCert_get_SubjectE($this->_cPtr,$str);
	}

	function subjectE() {
		return CkCert_subjectE($this->_cPtr);
	}

	function get_SubjectL($str) {
		CkCert_get_SubjectL($this->_cPtr,$str);
	}

	function subjectL() {
		return CkCert_subjectL($this->_cPtr);
	}

	function get_SubjectO($str) {
		CkCert_get_SubjectO($this->_cPtr,$str);
	}

	function subjectO() {
		return CkCert_subjectO($this->_cPtr);
	}

	function get_SubjectOU($str) {
		CkCert_get_SubjectOU($this->_cPtr,$str);
	}

	function subjectOU() {
		return CkCert_subjectOU($this->_cPtr);
	}

	function get_SubjectS($str) {
		CkCert_get_SubjectS($this->_cPtr,$str);
	}

	function subjectS() {
		return CkCert_subjectS($this->_cPtr);
	}

	function get_TrustedRoot() {
		return CkCert_get_TrustedRoot($this->_cPtr);
	}

	function get_ValidFrom($outSysTime) {
		CkCert_get_ValidFrom($this->_cPtr,$outSysTime);
	}

	function get_ValidFromStr($str) {
		CkCert_get_ValidFromStr($this->_cPtr,$str);
	}

	function validFromStr() {
		return CkCert_validFromStr($this->_cPtr);
	}

	function get_ValidTo($outSysTime) {
		CkCert_get_ValidTo($this->_cPtr,$outSysTime);
	}

	function get_ValidToStr($str) {
		CkCert_get_ValidToStr($this->_cPtr,$str);
	}

	function validToStr() {
		return CkCert_validToStr($this->_cPtr);
	}

	function get_Version($str) {
		CkCert_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkCert_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkCert_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkCert_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkCert_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkCert_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkCert_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function CheckRevoked() {
		return CkCert_CheckRevoked($this->_cPtr);
	}

	function ExportCertDer($outData) {
		return CkCert_ExportCertDer($this->_cPtr,$outData);
	}

	function ExportCertDerFile($path) {
		return CkCert_ExportCertDerFile($this->_cPtr,$path);
	}

	function exportCertPem() {
		return CkCert_exportCertPem($this->_cPtr);
	}

	function ExportCertPemFile($path) {
		return CkCert_ExportCertPemFile($this->_cPtr,$path);
	}

	function exportCertXml() {
		return CkCert_exportCertXml($this->_cPtr);
	}

	function ExportPrivateKey() {
		$r=CkCert_ExportPrivateKey($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkPrivateKey($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function ExportPublicKey() {
		$r=CkCert_ExportPublicKey($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkPublicKey($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function ExportToPfxFile($pfxPath,$password,$bIncludeChain) {
		return CkCert_ExportToPfxFile($this->_cPtr,$pfxPath,$password,$bIncludeChain);
	}

	function FindIssuer() {
		$r=CkCert_FindIssuer($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkCert($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function getEncoded() {
		return CkCert_getEncoded($this->_cPtr);
	}

	function encoded() {
		return CkCert_encoded($this->_cPtr);
	}

	function getPrivateKeyPem() {
		return CkCert_getPrivateKeyPem($this->_cPtr);
	}

	function privateKeyPem() {
		return CkCert_privateKeyPem($this->_cPtr);
	}

	function GetValidFromDt() {
		$r=CkCert_GetValidFromDt($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkDateTime($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetValidToDt() {
		$r=CkCert_GetValidToDt($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkDateTime($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function HasPrivateKey() {
		return CkCert_HasPrivateKey($this->_cPtr);
	}

	function LoadByCommonName($cn) {
		return CkCert_LoadByCommonName($this->_cPtr,$cn);
	}

	function LoadByEmailAddress($emailAddress) {
		return CkCert_LoadByEmailAddress($this->_cPtr,$emailAddress);
	}

	function LoadByIssuerAndSerialNumber($issuerCN,$serialNum) {
		return CkCert_LoadByIssuerAndSerialNumber($this->_cPtr,$issuerCN,$serialNum);
	}

	function LoadFromBase64($encodedCert) {
		return CkCert_LoadFromBase64($this->_cPtr,$encodedCert);
	}

	function LoadFromBinary($data) {
		return CkCert_LoadFromBinary($this->_cPtr,$data);
	}

	function LoadFromBinary2($pByteData,$szByteData) {
		return CkCert_LoadFromBinary2($this->_cPtr,$pByteData,$szByteData);
	}

	function LoadFromFile($path) {
		return CkCert_LoadFromFile($this->_cPtr,$path);
	}

	function LoadPfxData($pfxData,$password) {
		return CkCert_LoadPfxData($this->_cPtr,$pfxData,$password);
	}

	function LoadPfxData2($pByteData,$szByteData,$password) {
		return CkCert_LoadPfxData2($this->_cPtr,$pByteData,$szByteData,$password);
	}

	function LoadPfxFile($path,$password) {
		return CkCert_LoadPfxFile($this->_cPtr,$path,$password);
	}

	function PemFileToDerFile($fromPath,$toPath) {
		return CkCert_PemFileToDerFile($this->_cPtr,$fromPath,$toPath);
	}

	function SaveLastError($path) {
		return CkCert_SaveLastError($this->_cPtr,$path);
	}

	function SaveToFile($path) {
		return CkCert_SaveToFile($this->_cPtr,$path);
	}

	function SetFromEncoded($encodedCert) {
		return CkCert_SetFromEncoded($this->_cPtr,$encodedCert);
	}

	function SetPrivateKey($privKey) {
		return CkCert_SetPrivateKey($this->_cPtr,$privKey);
	}

	function SetPrivateKeyPem($privKeyPem) {
		return CkCert_SetPrivateKeyPem($this->_cPtr,$privKeyPem);
	}
}

class CkCertStore {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkCertStore') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkCertStore();
	}

	function get_Utf8() {
		return CkCertStore_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkCertStore_put_Utf8($this->_cPtr,$b);
	}

	function get_AvoidWindowsPkAccess() {
		return CkCertStore_get_AvoidWindowsPkAccess($this->_cPtr);
	}

	function put_AvoidWindowsPkAccess($newVal) {
		CkCertStore_put_AvoidWindowsPkAccess($this->_cPtr,$newVal);
	}

	function get_LastErrorHtml($str) {
		CkCertStore_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkCertStore_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkCertStore_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkCertStore_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkCertStore_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkCertStore_lastErrorXml($this->_cPtr);
	}

	function get_NumCertificates() {
		return CkCertStore_get_NumCertificates($this->_cPtr);
	}

	function get_Version($str) {
		CkCertStore_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkCertStore_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkCertStore_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkCertStore_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkCertStore_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkCertStore_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkCertStore_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function FindCertByRfc822Name($name) {
		$r=CkCertStore_FindCertByRfc822Name($this->_cPtr,$name);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkCert($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function FindCertBySerial($serialNumber) {
		$r=CkCertStore_FindCertBySerial($this->_cPtr,$serialNumber);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkCert($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function FindCertBySha1Thumbprint($str) {
		$r=CkCertStore_FindCertBySha1Thumbprint($this->_cPtr,$str);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkCert($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function FindCertBySubject($subject) {
		$r=CkCertStore_FindCertBySubject($this->_cPtr,$subject);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkCert($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function FindCertBySubjectCN($commonName) {
		$r=CkCertStore_FindCertBySubjectCN($this->_cPtr,$commonName);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkCert($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function FindCertBySubjectE($emailAddress) {
		$r=CkCertStore_FindCertBySubjectE($this->_cPtr,$emailAddress);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkCert($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function FindCertBySubjectO($organization) {
		$r=CkCertStore_FindCertBySubjectO($this->_cPtr,$organization);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkCert($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function FindCertForEmail($emailAddress) {
		$r=CkCertStore_FindCertForEmail($this->_cPtr,$emailAddress);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkCert($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetCertificate($index) {
		$r=CkCertStore_GetCertificate($this->_cPtr,$index);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkCert($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function LoadPemFile($pemPath) {
		return CkCertStore_LoadPemFile($this->_cPtr,$pemPath);
	}

	function LoadPemStr($pemString) {
		return CkCertStore_LoadPemStr($this->_cPtr,$pemString);
	}

	function LoadPfxData($pfxData,$password) {
		return CkCertStore_LoadPfxData($this->_cPtr,$pfxData,$password);
	}

	function LoadPfxData2($pByteData,$szByteData,$password) {
		return CkCertStore_LoadPfxData2($this->_cPtr,$pByteData,$szByteData,$password);
	}

	function LoadPfxFile($path,$password) {
		return CkCertStore_LoadPfxFile($this->_cPtr,$path,$password);
	}

	function SaveLastError($path) {
		return CkCertStore_SaveLastError($this->_cPtr,$path);
	}
}

class CkMime {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkMime') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkMime();
	}

	function get_Utf8() {
		return CkMime_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkMime_put_Utf8($this->_cPtr,$b);
	}

	function get_Boundary($str) {
		CkMime_get_Boundary($this->_cPtr,$str);
	}

	function boundary() {
		return CkMime_boundary($this->_cPtr);
	}

	function put_Boundary($newVal) {
		CkMime_put_Boundary($this->_cPtr,$newVal);
	}

	function get_Charset($str) {
		CkMime_get_Charset($this->_cPtr,$str);
	}

	function charset() {
		return CkMime_charset($this->_cPtr);
	}

	function put_Charset($newVal) {
		CkMime_put_Charset($this->_cPtr,$newVal);
	}

	function get_ContentType($str) {
		CkMime_get_ContentType($this->_cPtr,$str);
	}

	function contentType() {
		return CkMime_contentType($this->_cPtr);
	}

	function put_ContentType($newVal) {
		CkMime_put_ContentType($this->_cPtr,$newVal);
	}

	function get_CurrentDateTime($str) {
		CkMime_get_CurrentDateTime($this->_cPtr,$str);
	}

	function currentDateTime() {
		return CkMime_currentDateTime($this->_cPtr);
	}

	function get_Disposition($str) {
		CkMime_get_Disposition($this->_cPtr,$str);
	}

	function disposition() {
		return CkMime_disposition($this->_cPtr);
	}

	function put_Disposition($newVal) {
		CkMime_put_Disposition($this->_cPtr,$newVal);
	}

	function get_Encoding($str) {
		CkMime_get_Encoding($this->_cPtr,$str);
	}

	function encoding() {
		return CkMime_encoding($this->_cPtr);
	}

	function put_Encoding($newVal) {
		CkMime_put_Encoding($this->_cPtr,$newVal);
	}

	function get_Filename($str) {
		CkMime_get_Filename($this->_cPtr,$str);
	}

	function filename() {
		return CkMime_filename($this->_cPtr);
	}

	function put_Filename($newVal) {
		CkMime_put_Filename($this->_cPtr,$newVal);
	}

	function get_LastErrorHtml($str) {
		CkMime_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkMime_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkMime_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkMime_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkMime_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkMime_lastErrorXml($this->_cPtr);
	}

	function get_Micalg($str) {
		CkMime_get_Micalg($this->_cPtr,$str);
	}

	function micalg() {
		return CkMime_micalg($this->_cPtr);
	}

	function put_Micalg($newVal) {
		CkMime_put_Micalg($this->_cPtr,$newVal);
	}

	function get_Name($str) {
		CkMime_get_Name($this->_cPtr,$str);
	}

	function name() {
		return CkMime_name($this->_cPtr);
	}

	function put_Name($newVal) {
		CkMime_put_Name($this->_cPtr,$newVal);
	}

	function get_NumEncryptCerts() {
		return CkMime_get_NumEncryptCerts($this->_cPtr);
	}

	function get_NumHeaderFields() {
		return CkMime_get_NumHeaderFields($this->_cPtr);
	}

	function get_NumParts() {
		return CkMime_get_NumParts($this->_cPtr);
	}

	function get_NumSignerCerts() {
		return CkMime_get_NumSignerCerts($this->_cPtr);
	}

	function get_Pkcs7CryptAlg($str) {
		CkMime_get_Pkcs7CryptAlg($this->_cPtr,$str);
	}

	function pkcs7CryptAlg() {
		return CkMime_pkcs7CryptAlg($this->_cPtr);
	}

	function put_Pkcs7CryptAlg($newVal) {
		CkMime_put_Pkcs7CryptAlg($this->_cPtr,$newVal);
	}

	function get_Pkcs7KeyLength() {
		return CkMime_get_Pkcs7KeyLength($this->_cPtr);
	}

	function put_Pkcs7KeyLength($newVal) {
		CkMime_put_Pkcs7KeyLength($this->_cPtr,$newVal);
	}

	function get_Protocol($str) {
		CkMime_get_Protocol($this->_cPtr,$str);
	}

	function protocol() {
		return CkMime_protocol($this->_cPtr);
	}

	function put_Protocol($newVal) {
		CkMime_put_Protocol($this->_cPtr,$newVal);
	}

	function get_SigningHashAlg($str) {
		CkMime_get_SigningHashAlg($this->_cPtr,$str);
	}

	function signingHashAlg() {
		return CkMime_signingHashAlg($this->_cPtr);
	}

	function put_SigningHashAlg($newVal) {
		CkMime_put_SigningHashAlg($this->_cPtr,$newVal);
	}

	function get_UnwrapExtras() {
		return CkMime_get_UnwrapExtras($this->_cPtr);
	}

	function put_UnwrapExtras($newVal) {
		CkMime_put_UnwrapExtras($this->_cPtr,$newVal);
	}

	function get_UseMmDescription() {
		return CkMime_get_UseMmDescription($this->_cPtr);
	}

	function put_UseMmDescription($newVal) {
		CkMime_put_UseMmDescription($this->_cPtr,$newVal);
	}

	function get_UseXPkcs7() {
		return CkMime_get_UseXPkcs7($this->_cPtr);
	}

	function put_UseXPkcs7($newVal) {
		CkMime_put_UseXPkcs7($this->_cPtr,$newVal);
	}

	function get_Version($str) {
		CkMime_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkMime_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkMime_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkMime_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkMime_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkMime_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkMime_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function AddContentLength() {
		CkMime_AddContentLength($this->_cPtr);
	}

	function AddDetachedSignature($cert) {
		return CkMime_AddDetachedSignature($this->_cPtr,$cert);
	}

	function AddDetachedSignature2($cert,$transferHeaderFields) {
		return CkMime_AddDetachedSignature2($this->_cPtr,$cert,$transferHeaderFields);
	}

	function AddDetachedSignaturePk($cert,$privateKey) {
		return CkMime_AddDetachedSignaturePk($this->_cPtr,$cert,$privateKey);
	}

	function AddDetachedSignaturePk2($cert,$privateKey,$transferHeaderFields) {
		return CkMime_AddDetachedSignaturePk2($this->_cPtr,$cert,$privateKey,$transferHeaderFields);
	}

	function AddEncryptCert($cert) {
		return CkMime_AddEncryptCert($this->_cPtr,$cert);
	}

	function AddHeaderField($name,$value) {
		return CkMime_AddHeaderField($this->_cPtr,$name,$value);
	}

	function AddPfxSourceData($pfxData,$password) {
		return CkMime_AddPfxSourceData($this->_cPtr,$pfxData,$password);
	}

	function AddPfxSourceFile($pfxFilePath,$password) {
		return CkMime_AddPfxSourceFile($this->_cPtr,$pfxFilePath,$password);
	}

	function AppendPart($mime) {
		return CkMime_AppendPart($this->_cPtr,$mime);
	}

	function AppendPartFromFile($path) {
		return CkMime_AppendPartFromFile($this->_cPtr,$path);
	}

	function asnBodyToXml() {
		return CkMime_asnBodyToXml($this->_cPtr);
	}

	function ClearEncryptCerts() {
		CkMime_ClearEncryptCerts($this->_cPtr);
	}

	function ContainsEncryptedParts() {
		return CkMime_ContainsEncryptedParts($this->_cPtr);
	}

	function ContainsSignedParts() {
		return CkMime_ContainsSignedParts($this->_cPtr);
	}

	function Convert8Bit() {
		CkMime_Convert8Bit($this->_cPtr);
	}

	function ConvertToMultipartAlt() {
		CkMime_ConvertToMultipartAlt($this->_cPtr);
	}

	function ConvertToMultipartMixed() {
		CkMime_ConvertToMultipartMixed($this->_cPtr);
	}

	function ConvertToSigned($cert) {
		return CkMime_ConvertToSigned($this->_cPtr,$cert);
	}

	function ConvertToSignedPk($cert,$privateKey) {
		return CkMime_ConvertToSignedPk($this->_cPtr,$cert,$privateKey);
	}

	function Decrypt() {
		return CkMime_Decrypt($this->_cPtr);
	}

	function Decrypt2($cert,$privateKey) {
		return CkMime_Decrypt2($this->_cPtr,$cert,$privateKey);
	}

	function DecryptUsingPfxData($pfxData,$password) {
		return CkMime_DecryptUsingPfxData($this->_cPtr,$pfxData,$password);
	}

	function DecryptUsingPfxFile($pfxFilePath,$password) {
		return CkMime_DecryptUsingPfxFile($this->_cPtr,$pfxFilePath,$password);
	}

	function Encrypt($cert) {
		return CkMime_Encrypt($this->_cPtr,$cert);
	}

	function EncryptN() {
		return CkMime_EncryptN($this->_cPtr);
	}

	function ExtractPartsToFiles($dirPath) {
		$r=CkMime_ExtractPartsToFiles($this->_cPtr,$dirPath);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkStringArray($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function FindIssuer($cert) {
		$r=CkMime_FindIssuer($this->_cPtr,$cert);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkCert($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetBodyBinary($outData) {
		return CkMime_GetBodyBinary($this->_cPtr,$outData);
	}

	function getBodyDecoded() {
		return CkMime_getBodyDecoded($this->_cPtr);
	}

	function bodyDecoded() {
		return CkMime_bodyDecoded($this->_cPtr);
	}

	function getBodyEncoded() {
		return CkMime_getBodyEncoded($this->_cPtr);
	}

	function bodyEncoded() {
		return CkMime_bodyEncoded($this->_cPtr);
	}

	function GetEncryptCert($index) {
		$r=CkMime_GetEncryptCert($this->_cPtr,$index);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkCert($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function getEntireBody() {
		return CkMime_getEntireBody($this->_cPtr);
	}

	function entireBody() {
		return CkMime_entireBody($this->_cPtr);
	}

	function getEntireHead() {
		return CkMime_getEntireHead($this->_cPtr);
	}

	function entireHead() {
		return CkMime_entireHead($this->_cPtr);
	}

	function getHeaderField($name) {
		return CkMime_getHeaderField($this->_cPtr,$name);
	}

	function headerField($name) {
		return CkMime_headerField($this->_cPtr,$name);
	}

	function getHeaderFieldAttribute($name,$attrName) {
		return CkMime_getHeaderFieldAttribute($this->_cPtr,$name,$attrName);
	}

	function headerFieldAttribute($name,$attrName) {
		return CkMime_headerFieldAttribute($this->_cPtr,$name,$attrName);
	}

	function getHeaderFieldName($index) {
		return CkMime_getHeaderFieldName($this->_cPtr,$index);
	}

	function headerFieldName($index) {
		return CkMime_headerFieldName($this->_cPtr,$index);
	}

	function getHeaderFieldValue($index) {
		return CkMime_getHeaderFieldValue($this->_cPtr,$index);
	}

	function headerFieldValue($index) {
		return CkMime_headerFieldValue($this->_cPtr,$index);
	}

	function getMime() {
		return CkMime_getMime($this->_cPtr);
	}

	function mime() {
		return CkMime_mime($this->_cPtr);
	}

	function GetMimeBytes($outBytes) {
		return CkMime_GetMimeBytes($this->_cPtr,$outBytes);
	}

	function GetPart($index) {
		$r=CkMime_GetPart($this->_cPtr,$index);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkMime($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetSignatureSigningTime($index,$outSysTime) {
		return CkMime_GetSignatureSigningTime($this->_cPtr,$index,$outSysTime);
	}

	function getSignatureSigningTimeStr($index) {
		return CkMime_getSignatureSigningTimeStr($this->_cPtr,$index);
	}

	function signatureSigningTimeStr($index) {
		return CkMime_signatureSigningTimeStr($this->_cPtr,$index);
	}

	function GetSignerCert($index) {
		$r=CkMime_GetSignerCert($this->_cPtr,$index);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkCert($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function getXml() {
		return CkMime_getXml($this->_cPtr);
	}

	function xml() {
		return CkMime_xml($this->_cPtr);
	}

	function HasSignatureSigningTime($index) {
		return CkMime_HasSignatureSigningTime($this->_cPtr,$index);
	}

	function IsApplicationData() {
		return CkMime_IsApplicationData($this->_cPtr);
	}

	function IsAttachment() {
		return CkMime_IsAttachment($this->_cPtr);
	}

	function IsAudio() {
		return CkMime_IsAudio($this->_cPtr);
	}

	function IsEncrypted() {
		return CkMime_IsEncrypted($this->_cPtr);
	}

	function IsHtml() {
		return CkMime_IsHtml($this->_cPtr);
	}

	function IsImage() {
		return CkMime_IsImage($this->_cPtr);
	}

	function IsMultipart() {
		return CkMime_IsMultipart($this->_cPtr);
	}

	function IsMultipartAlternative() {
		return CkMime_IsMultipartAlternative($this->_cPtr);
	}

	function IsMultipartMixed() {
		return CkMime_IsMultipartMixed($this->_cPtr);
	}

	function IsMultipartRelated() {
		return CkMime_IsMultipartRelated($this->_cPtr);
	}

	function IsPlainText() {
		return CkMime_IsPlainText($this->_cPtr);
	}

	function IsSigned() {
		return CkMime_IsSigned($this->_cPtr);
	}

	function IsText() {
		return CkMime_IsText($this->_cPtr);
	}

	function IsUnlocked() {
		return CkMime_IsUnlocked($this->_cPtr);
	}

	function IsVideo() {
		return CkMime_IsVideo($this->_cPtr);
	}

	function IsXml() {
		return CkMime_IsXml($this->_cPtr);
	}

	function LoadMime($mimeText) {
		return CkMime_LoadMime($this->_cPtr,$mimeText);
	}

	function LoadMimeBytes($bData) {
		return CkMime_LoadMimeBytes($this->_cPtr,$bData);
	}

	function LoadMimeFile($path) {
		return CkMime_LoadMimeFile($this->_cPtr,$path);
	}

	function LoadXml($xmlText) {
		return CkMime_LoadXml($this->_cPtr,$xmlText);
	}

	function LoadXmlFile($path) {
		return CkMime_LoadXmlFile($this->_cPtr,$path);
	}

	function NewMessageRfc822($mimeObject) {
		return CkMime_NewMessageRfc822($this->_cPtr,$mimeObject);
	}

	function NewMultipartAlternative() {
		return CkMime_NewMultipartAlternative($this->_cPtr);
	}

	function NewMultipartMixed() {
		return CkMime_NewMultipartMixed($this->_cPtr);
	}

	function NewMultipartRelated() {
		return CkMime_NewMultipartRelated($this->_cPtr);
	}

	function RemoveHeaderField($name,$bAllOccurances) {
		CkMime_RemoveHeaderField($this->_cPtr,$name,$bAllOccurances);
	}

	function RemovePart($index) {
		return CkMime_RemovePart($this->_cPtr,$index);
	}

	function SaveBody($path) {
		return CkMime_SaveBody($this->_cPtr,$path);
	}

	function SaveLastError($path) {
		return CkMime_SaveLastError($this->_cPtr,$path);
	}

	function SaveMime($path) {
		return CkMime_SaveMime($this->_cPtr,$path);
	}

	function SaveXml($path) {
		return CkMime_SaveXml($this->_cPtr,$path);
	}

	function SetBody($str) {
		CkMime_SetBody($this->_cPtr,$str);
	}

	function SetBodyFromBinary($dbuf) {
		return CkMime_SetBodyFromBinary($this->_cPtr,$dbuf);
	}

	function SetBodyFromEncoded($encoding,$str) {
		return CkMime_SetBodyFromEncoded($this->_cPtr,$encoding,$str);
	}

	function SetBodyFromFile($path) {
		return CkMime_SetBodyFromFile($this->_cPtr,$path);
	}

	function SetBodyFromHtml($str) {
		return CkMime_SetBodyFromHtml($this->_cPtr,$str);
	}

	function SetBodyFromPlainText($str) {
		return CkMime_SetBodyFromPlainText($this->_cPtr,$str);
	}

	function SetBodyFromXml($str) {
		return CkMime_SetBodyFromXml($this->_cPtr,$str);
	}

	function SetHeaderField($name,$value) {
		return CkMime_SetHeaderField($this->_cPtr,$name,$value);
	}

	function SetVerifyCert($cert) {
		CkMime_SetVerifyCert($this->_cPtr,$cert);
	}

	function UnlockComponent($unlockCode) {
		return CkMime_UnlockComponent($this->_cPtr,$unlockCode);
	}

	function UnwrapSecurity() {
		return CkMime_UnwrapSecurity($this->_cPtr);
	}

	function UrlEncodeBody($charset) {
		CkMime_UrlEncodeBody($this->_cPtr,$charset);
	}

	function Verify() {
		return CkMime_Verify($this->_cPtr);
	}
}

class CkEmailBundle {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkEmailBundle') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkEmailBundle();
	}

	function get_Utf8() {
		return CkEmailBundle_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkEmailBundle_put_Utf8($this->_cPtr,$b);
	}

	function get_LastErrorHtml($str) {
		CkEmailBundle_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkEmailBundle_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkEmailBundle_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkEmailBundle_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkEmailBundle_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkEmailBundle_lastErrorXml($this->_cPtr);
	}

	function get_MessageCount() {
		return CkEmailBundle_get_MessageCount($this->_cPtr);
	}

	function get_Version($str) {
		CkEmailBundle_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkEmailBundle_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkEmailBundle_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkEmailBundle_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkEmailBundle_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkEmailBundle_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkEmailBundle_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function AddEmail($email) {
		return CkEmailBundle_AddEmail($this->_cPtr,$email);
	}

	function FindByHeader($name,$value) {
		$r=CkEmailBundle_FindByHeader($this->_cPtr,$name,$value);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkEmail($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetEmail($index) {
		$r=CkEmailBundle_GetEmail($this->_cPtr,$index);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkEmail($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetUidls() {
		$r=CkEmailBundle_GetUidls($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkStringArray($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function getXml() {
		return CkEmailBundle_getXml($this->_cPtr);
	}

	function xml() {
		return CkEmailBundle_xml($this->_cPtr);
	}

	function LoadXml($path) {
		return CkEmailBundle_LoadXml($this->_cPtr,$path);
	}

	function LoadXmlString($xmlStr) {
		return CkEmailBundle_LoadXmlString($this->_cPtr,$xmlStr);
	}

	function RemoveEmail($email) {
		return CkEmailBundle_RemoveEmail($this->_cPtr,$email);
	}

	function RemoveEmailByIndex($index) {
		return CkEmailBundle_RemoveEmailByIndex($this->_cPtr,$index);
	}

	function SaveLastError($path) {
		return CkEmailBundle_SaveLastError($this->_cPtr,$path);
	}

	function SaveXml($path) {
		return CkEmailBundle_SaveXml($this->_cPtr,$path);
	}

	function SortByDate($ascending) {
		CkEmailBundle_SortByDate($this->_cPtr,$ascending);
	}

	function SortByRecipient($ascending) {
		CkEmailBundle_SortByRecipient($this->_cPtr,$ascending);
	}

	function SortBySender($ascending) {
		CkEmailBundle_SortBySender($this->_cPtr,$ascending);
	}

	function SortBySubject($ascending) {
		CkEmailBundle_SortBySubject($this->_cPtr,$ascending);
	}
}

class CkMailMan {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkMailMan') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkMailMan();
	}

	function get_Utf8() {
		return CkMailMan_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkMailMan_put_Utf8($this->_cPtr,$b);
	}

	function get_AllOrNone() {
		return CkMailMan_get_AllOrNone($this->_cPtr);
	}

	function put_AllOrNone($newVal) {
		CkMailMan_put_AllOrNone($this->_cPtr,$newVal);
	}

	function get_AutoFix() {
		return CkMailMan_get_AutoFix($this->_cPtr);
	}

	function put_AutoFix($newVal) {
		CkMailMan_put_AutoFix($this->_cPtr,$newVal);
	}

	function get_AutoGenMessageId() {
		return CkMailMan_get_AutoGenMessageId($this->_cPtr);
	}

	function put_AutoGenMessageId($newVal) {
		CkMailMan_put_AutoGenMessageId($this->_cPtr,$newVal);
	}

	function get_AutoSmtpRset() {
		return CkMailMan_get_AutoSmtpRset($this->_cPtr);
	}

	function put_AutoSmtpRset($newVal) {
		CkMailMan_put_AutoSmtpRset($this->_cPtr,$newVal);
	}

	function get_ClientIpAddress($str) {
		CkMailMan_get_ClientIpAddress($this->_cPtr,$str);
	}

	function clientIpAddress() {
		return CkMailMan_clientIpAddress($this->_cPtr);
	}

	function put_ClientIpAddress($newVal) {
		CkMailMan_put_ClientIpAddress($this->_cPtr,$newVal);
	}

	function get_ConnectTimeout() {
		return CkMailMan_get_ConnectTimeout($this->_cPtr);
	}

	function put_ConnectTimeout($newVal) {
		CkMailMan_put_ConnectTimeout($this->_cPtr,$newVal);
	}

	function get_DsnEnvid($str) {
		CkMailMan_get_DsnEnvid($this->_cPtr,$str);
	}

	function dsnEnvid() {
		return CkMailMan_dsnEnvid($this->_cPtr);
	}

	function put_DsnEnvid($newVal) {
		CkMailMan_put_DsnEnvid($this->_cPtr,$newVal);
	}

	function get_DsnNotify($str) {
		CkMailMan_get_DsnNotify($this->_cPtr,$str);
	}

	function dsnNotify() {
		return CkMailMan_dsnNotify($this->_cPtr);
	}

	function put_DsnNotify($newVal) {
		CkMailMan_put_DsnNotify($this->_cPtr,$newVal);
	}

	function get_DsnRet($str) {
		CkMailMan_get_DsnRet($this->_cPtr,$str);
	}

	function dsnRet() {
		return CkMailMan_dsnRet($this->_cPtr);
	}

	function put_DsnRet($newVal) {
		CkMailMan_put_DsnRet($this->_cPtr,$newVal);
	}

	function get_EmbedCertChain() {
		return CkMailMan_get_EmbedCertChain($this->_cPtr);
	}

	function put_EmbedCertChain($newVal) {
		CkMailMan_put_EmbedCertChain($this->_cPtr,$newVal);
	}

	function get_Filter($str) {
		CkMailMan_get_Filter($this->_cPtr,$str);
	}

	function filter() {
		return CkMailMan_filter($this->_cPtr);
	}

	function put_Filter($newVal) {
		CkMailMan_put_Filter($this->_cPtr,$newVal);
	}

	function get_HeartbeatMs() {
		return CkMailMan_get_HeartbeatMs($this->_cPtr);
	}

	function put_HeartbeatMs($newVal) {
		CkMailMan_put_HeartbeatMs($this->_cPtr,$newVal);
	}

	function get_HeloHostname($str) {
		CkMailMan_get_HeloHostname($this->_cPtr,$str);
	}

	function heloHostname() {
		return CkMailMan_heloHostname($this->_cPtr);
	}

	function put_HeloHostname($newVal) {
		CkMailMan_put_HeloHostname($this->_cPtr,$newVal);
	}

	function get_HttpProxyAuthMethod($str) {
		CkMailMan_get_HttpProxyAuthMethod($this->_cPtr,$str);
	}

	function httpProxyAuthMethod() {
		return CkMailMan_httpProxyAuthMethod($this->_cPtr);
	}

	function put_HttpProxyAuthMethod($newVal) {
		CkMailMan_put_HttpProxyAuthMethod($this->_cPtr,$newVal);
	}

	function get_HttpProxyDomain($str) {
		CkMailMan_get_HttpProxyDomain($this->_cPtr,$str);
	}

	function httpProxyDomain() {
		return CkMailMan_httpProxyDomain($this->_cPtr);
	}

	function put_HttpProxyDomain($newVal) {
		CkMailMan_put_HttpProxyDomain($this->_cPtr,$newVal);
	}

	function get_HttpProxyHostname($str) {
		CkMailMan_get_HttpProxyHostname($this->_cPtr,$str);
	}

	function httpProxyHostname() {
		return CkMailMan_httpProxyHostname($this->_cPtr);
	}

	function put_HttpProxyHostname($newVal) {
		CkMailMan_put_HttpProxyHostname($this->_cPtr,$newVal);
	}

	function get_HttpProxyPassword($str) {
		CkMailMan_get_HttpProxyPassword($this->_cPtr,$str);
	}

	function httpProxyPassword() {
		return CkMailMan_httpProxyPassword($this->_cPtr);
	}

	function put_HttpProxyPassword($newVal) {
		CkMailMan_put_HttpProxyPassword($this->_cPtr,$newVal);
	}

	function get_HttpProxyPort() {
		return CkMailMan_get_HttpProxyPort($this->_cPtr);
	}

	function put_HttpProxyPort($newVal) {
		CkMailMan_put_HttpProxyPort($this->_cPtr,$newVal);
	}

	function get_HttpProxyUsername($str) {
		CkMailMan_get_HttpProxyUsername($this->_cPtr,$str);
	}

	function httpProxyUsername() {
		return CkMailMan_httpProxyUsername($this->_cPtr);
	}

	function put_HttpProxyUsername($newVal) {
		CkMailMan_put_HttpProxyUsername($this->_cPtr,$newVal);
	}

	function get_ImmediateDelete() {
		return CkMailMan_get_ImmediateDelete($this->_cPtr);
	}

	function put_ImmediateDelete($newVal) {
		CkMailMan_put_ImmediateDelete($this->_cPtr,$newVal);
	}

	function get_IncludeRootCert() {
		return CkMailMan_get_IncludeRootCert($this->_cPtr);
	}

	function put_IncludeRootCert($newVal) {
		CkMailMan_put_IncludeRootCert($this->_cPtr,$newVal);
	}

	function get_IsSmtpConnected() {
		return CkMailMan_get_IsSmtpConnected($this->_cPtr);
	}

	function get_LastErrorHtml($str) {
		CkMailMan_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkMailMan_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkMailMan_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkMailMan_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkMailMan_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkMailMan_lastErrorXml($this->_cPtr);
	}

	function get_LastSendQFilename($str) {
		CkMailMan_get_LastSendQFilename($this->_cPtr,$str);
	}

	function lastSendQFilename() {
		return CkMailMan_lastSendQFilename($this->_cPtr);
	}

	function get_LastSmtpStatus() {
		return CkMailMan_get_LastSmtpStatus($this->_cPtr);
	}

	function get_LogMailReceivedFilename($str) {
		CkMailMan_get_LogMailReceivedFilename($this->_cPtr,$str);
	}

	function logMailReceivedFilename() {
		return CkMailMan_logMailReceivedFilename($this->_cPtr);
	}

	function put_LogMailReceivedFilename($newVal) {
		CkMailMan_put_LogMailReceivedFilename($this->_cPtr,$newVal);
	}

	function get_LogMailSentFilename($str) {
		CkMailMan_get_LogMailSentFilename($this->_cPtr,$str);
	}

	function logMailSentFilename() {
		return CkMailMan_logMailSentFilename($this->_cPtr);
	}

	function put_LogMailSentFilename($newVal) {
		CkMailMan_put_LogMailSentFilename($this->_cPtr,$newVal);
	}

	function get_MailHost($str) {
		CkMailMan_get_MailHost($this->_cPtr,$str);
	}

	function mailHost() {
		return CkMailMan_mailHost($this->_cPtr);
	}

	function put_MailHost($newVal) {
		CkMailMan_put_MailHost($this->_cPtr,$newVal);
	}

	function get_MailPort() {
		return CkMailMan_get_MailPort($this->_cPtr);
	}

	function put_MailPort($newVal) {
		CkMailMan_put_MailPort($this->_cPtr,$newVal);
	}

	function get_MaxCount() {
		return CkMailMan_get_MaxCount($this->_cPtr);
	}

	function put_MaxCount($newVal) {
		CkMailMan_put_MaxCount($this->_cPtr,$newVal);
	}

	function get_OpaqueSigning() {
		return CkMailMan_get_OpaqueSigning($this->_cPtr);
	}

	function put_OpaqueSigning($newVal) {
		CkMailMan_put_OpaqueSigning($this->_cPtr,$newVal);
	}

	function get_Pop3SPA() {
		return CkMailMan_get_Pop3SPA($this->_cPtr);
	}

	function put_Pop3SPA($newVal) {
		CkMailMan_put_Pop3SPA($this->_cPtr,$newVal);
	}

	function get_Pop3SessionId() {
		return CkMailMan_get_Pop3SessionId($this->_cPtr);
	}

	function get_Pop3SessionLog($str) {
		CkMailMan_get_Pop3SessionLog($this->_cPtr,$str);
	}

	function pop3SessionLog() {
		return CkMailMan_pop3SessionLog($this->_cPtr);
	}

	function get_Pop3SslServerCertVerified() {
		return CkMailMan_get_Pop3SslServerCertVerified($this->_cPtr);
	}

	function get_Pop3Stls() {
		return CkMailMan_get_Pop3Stls($this->_cPtr);
	}

	function put_Pop3Stls($newVal) {
		CkMailMan_put_Pop3Stls($this->_cPtr,$newVal);
	}

	function get_PopPassword($str) {
		CkMailMan_get_PopPassword($this->_cPtr,$str);
	}

	function popPassword() {
		return CkMailMan_popPassword($this->_cPtr);
	}

	function put_PopPassword($newVal) {
		CkMailMan_put_PopPassword($this->_cPtr,$newVal);
	}

	function get_PopPasswordBase64($str) {
		CkMailMan_get_PopPasswordBase64($this->_cPtr,$str);
	}

	function popPasswordBase64() {
		return CkMailMan_popPasswordBase64($this->_cPtr);
	}

	function put_PopPasswordBase64($newVal) {
		CkMailMan_put_PopPasswordBase64($this->_cPtr,$newVal);
	}

	function get_PopSsl() {
		return CkMailMan_get_PopSsl($this->_cPtr);
	}

	function put_PopSsl($newVal) {
		CkMailMan_put_PopSsl($this->_cPtr,$newVal);
	}

	function get_PopUsername($str) {
		CkMailMan_get_PopUsername($this->_cPtr,$str);
	}

	function popUsername() {
		return CkMailMan_popUsername($this->_cPtr);
	}

	function put_PopUsername($newVal) {
		CkMailMan_put_PopUsername($this->_cPtr,$newVal);
	}

	function get_ReadTimeout() {
		return CkMailMan_get_ReadTimeout($this->_cPtr);
	}

	function put_ReadTimeout($newVal) {
		CkMailMan_put_ReadTimeout($this->_cPtr,$newVal);
	}

	function get_RequireSslCertVerify() {
		return CkMailMan_get_RequireSslCertVerify($this->_cPtr);
	}

	function put_RequireSslCertVerify($newVal) {
		CkMailMan_put_RequireSslCertVerify($this->_cPtr,$newVal);
	}

	function get_ResetDateOnLoad() {
		return CkMailMan_get_ResetDateOnLoad($this->_cPtr);
	}

	function put_ResetDateOnLoad($newVal) {
		CkMailMan_put_ResetDateOnLoad($this->_cPtr,$newVal);
	}

	function get_SendBufferSize() {
		return CkMailMan_get_SendBufferSize($this->_cPtr);
	}

	function put_SendBufferSize($newVal) {
		CkMailMan_put_SendBufferSize($this->_cPtr,$newVal);
	}

	function get_SendIndividual() {
		return CkMailMan_get_SendIndividual($this->_cPtr);
	}

	function put_SendIndividual($newVal) {
		CkMailMan_put_SendIndividual($this->_cPtr,$newVal);
	}

	function get_SizeLimit() {
		return CkMailMan_get_SizeLimit($this->_cPtr);
	}

	function put_SizeLimit($newVal) {
		CkMailMan_put_SizeLimit($this->_cPtr,$newVal);
	}

	function get_SmtpAuthMethod($str) {
		CkMailMan_get_SmtpAuthMethod($this->_cPtr,$str);
	}

	function smtpAuthMethod() {
		return CkMailMan_smtpAuthMethod($this->_cPtr);
	}

	function put_SmtpAuthMethod($newVal) {
		CkMailMan_put_SmtpAuthMethod($this->_cPtr,$newVal);
	}

	function get_SmtpHost($str) {
		CkMailMan_get_SmtpHost($this->_cPtr,$str);
	}

	function smtpHost() {
		return CkMailMan_smtpHost($this->_cPtr);
	}

	function put_SmtpHost($newVal) {
		CkMailMan_put_SmtpHost($this->_cPtr,$newVal);
	}

	function get_SmtpLoginDomain($str) {
		CkMailMan_get_SmtpLoginDomain($this->_cPtr,$str);
	}

	function smtpLoginDomain() {
		return CkMailMan_smtpLoginDomain($this->_cPtr);
	}

	function put_SmtpLoginDomain($newVal) {
		CkMailMan_put_SmtpLoginDomain($this->_cPtr,$newVal);
	}

	function get_SmtpPassword($str) {
		CkMailMan_get_SmtpPassword($this->_cPtr,$str);
	}

	function smtpPassword() {
		return CkMailMan_smtpPassword($this->_cPtr);
	}

	function put_SmtpPassword($newVal) {
		CkMailMan_put_SmtpPassword($this->_cPtr,$newVal);
	}

	function get_SmtpPort() {
		return CkMailMan_get_SmtpPort($this->_cPtr);
	}

	function put_SmtpPort($newVal) {
		CkMailMan_put_SmtpPort($this->_cPtr,$newVal);
	}

	function get_SmtpSessionLog($str) {
		CkMailMan_get_SmtpSessionLog($this->_cPtr,$str);
	}

	function smtpSessionLog() {
		return CkMailMan_smtpSessionLog($this->_cPtr);
	}

	function get_SmtpSsl() {
		return CkMailMan_get_SmtpSsl($this->_cPtr);
	}

	function put_SmtpSsl($newVal) {
		CkMailMan_put_SmtpSsl($this->_cPtr,$newVal);
	}

	function get_SmtpSslServerCertVerified() {
		return CkMailMan_get_SmtpSslServerCertVerified($this->_cPtr);
	}

	function get_SmtpUsername($str) {
		CkMailMan_get_SmtpUsername($this->_cPtr,$str);
	}

	function smtpUsername() {
		return CkMailMan_smtpUsername($this->_cPtr);
	}

	function put_SmtpUsername($newVal) {
		CkMailMan_put_SmtpUsername($this->_cPtr,$newVal);
	}

	function get_SoRcvBuf() {
		return CkMailMan_get_SoRcvBuf($this->_cPtr);
	}

	function put_SoRcvBuf($newVal) {
		CkMailMan_put_SoRcvBuf($this->_cPtr,$newVal);
	}

	function get_SoSndBuf() {
		return CkMailMan_get_SoSndBuf($this->_cPtr);
	}

	function put_SoSndBuf($newVal) {
		CkMailMan_put_SoSndBuf($this->_cPtr,$newVal);
	}

	function get_SocksHostname($str) {
		CkMailMan_get_SocksHostname($this->_cPtr,$str);
	}

	function socksHostname() {
		return CkMailMan_socksHostname($this->_cPtr);
	}

	function put_SocksHostname($newVal) {
		CkMailMan_put_SocksHostname($this->_cPtr,$newVal);
	}

	function get_SocksPassword($str) {
		CkMailMan_get_SocksPassword($this->_cPtr,$str);
	}

	function socksPassword() {
		return CkMailMan_socksPassword($this->_cPtr);
	}

	function put_SocksPassword($newVal) {
		CkMailMan_put_SocksPassword($this->_cPtr,$newVal);
	}

	function get_SocksPort() {
		return CkMailMan_get_SocksPort($this->_cPtr);
	}

	function put_SocksPort($newVal) {
		CkMailMan_put_SocksPort($this->_cPtr,$newVal);
	}

	function get_SocksUsername($str) {
		CkMailMan_get_SocksUsername($this->_cPtr,$str);
	}

	function socksUsername() {
		return CkMailMan_socksUsername($this->_cPtr);
	}

	function put_SocksUsername($newVal) {
		CkMailMan_put_SocksUsername($this->_cPtr,$newVal);
	}

	function get_SocksVersion() {
		return CkMailMan_get_SocksVersion($this->_cPtr);
	}

	function put_SocksVersion($newVal) {
		CkMailMan_put_SocksVersion($this->_cPtr,$newVal);
	}

	function get_StartTLS() {
		return CkMailMan_get_StartTLS($this->_cPtr);
	}

	function put_StartTLS($newVal) {
		CkMailMan_put_StartTLS($this->_cPtr,$newVal);
	}

	function get_UseApop() {
		return CkMailMan_get_UseApop($this->_cPtr);
	}

	function put_UseApop($newVal) {
		CkMailMan_put_UseApop($this->_cPtr,$newVal);
	}

	function get_Version($str) {
		CkMailMan_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkMailMan_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkMailMan_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkMailMan_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkMailMan_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkMailMan_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkMailMan_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function AddPfxSourceData($pfxData,$password) {
		return CkMailMan_AddPfxSourceData($this->_cPtr,$pfxData,$password);
	}

	function AddPfxSourceFile($pfxFilePath,$password) {
		return CkMailMan_AddPfxSourceFile($this->_cPtr,$pfxFilePath,$password);
	}

	function CheckMail() {
		return CkMailMan_CheckMail($this->_cPtr);
	}

	function ClearBadEmailAddresses() {
		CkMailMan_ClearBadEmailAddresses($this->_cPtr);
	}

	function ClearPop3SessionLog() {
		CkMailMan_ClearPop3SessionLog($this->_cPtr);
	}

	function ClearSmtpSessionLog() {
		CkMailMan_ClearSmtpSessionLog($this->_cPtr);
	}

	function CloseSmtpConnection() {
		return CkMailMan_CloseSmtpConnection($this->_cPtr);
	}

	function CopyMail() {
		$r=CkMailMan_CopyMail($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkEmailBundle($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function DeleteBundle($bundle) {
		return CkMailMan_DeleteBundle($this->_cPtr,$bundle);
	}

	function DeleteByMsgnum($msgnum) {
		return CkMailMan_DeleteByMsgnum($this->_cPtr,$msgnum);
	}

	function DeleteByUidl($uidl) {
		return CkMailMan_DeleteByUidl($this->_cPtr,$uidl);
	}

	function DeleteEmail($email) {
		return CkMailMan_DeleteEmail($this->_cPtr,$email);
	}

	function DeleteMultiple($uidlArray) {
		return CkMailMan_DeleteMultiple($this->_cPtr,$uidlArray);
	}

	function FetchByMsgnum($msgnum) {
		$r=CkMailMan_FetchByMsgnum($this->_cPtr,$msgnum);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkEmail($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function FetchEmail($uidl) {
		$r=CkMailMan_FetchEmail($this->_cPtr,$uidl);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkEmail($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function FetchMime($uidl,$outData) {
		return CkMailMan_FetchMime($this->_cPtr,$uidl,$outData);
	}

	function FetchMimeByMsgnum($msgnum,$outBytes) {
		return CkMailMan_FetchMimeByMsgnum($this->_cPtr,$msgnum,$outBytes);
	}

	function FetchMultiple($uidlArray) {
		$r=CkMailMan_FetchMultiple($this->_cPtr,$uidlArray);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkEmailBundle($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function FetchMultipleHeaders($uidlArray,$numBodyLines) {
		$r=CkMailMan_FetchMultipleHeaders($this->_cPtr,$uidlArray,$numBodyLines);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkEmailBundle($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function FetchMultipleMime($uidlArray) {
		$r=CkMailMan_FetchMultipleMime($this->_cPtr,$uidlArray);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkStringArray($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function FetchSingleHeader($numBodyLines,$msgNum) {
		$r=CkMailMan_FetchSingleHeader($this->_cPtr,$numBodyLines,$msgNum);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkEmail($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function FetchSingleHeaderByUidl($numBodyLines,$uidl) {
		$r=CkMailMan_FetchSingleHeaderByUidl($this->_cPtr,$numBodyLines,$uidl);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkEmail($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetAllHeaders($numBodyLines) {
		$r=CkMailMan_GetAllHeaders($this->_cPtr,$numBodyLines);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkEmailBundle($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetBadEmailAddrs() {
		$r=CkMailMan_GetBadEmailAddrs($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkStringArray($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetFullEmail($email) {
		$r=CkMailMan_GetFullEmail($this->_cPtr,$email);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkEmail($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetHeaders($numBodyLines,$fromIndex,$toIndex) {
		$r=CkMailMan_GetHeaders($this->_cPtr,$numBodyLines,$fromIndex,$toIndex);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkEmailBundle($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetMailboxCount() {
		return CkMailMan_GetMailboxCount($this->_cPtr);
	}

	function getMailboxInfoXml() {
		return CkMailMan_getMailboxInfoXml($this->_cPtr);
	}

	function mailboxInfoXml() {
		return CkMailMan_mailboxInfoXml($this->_cPtr);
	}

	function GetMailboxSize() {
		return CkMailMan_GetMailboxSize($this->_cPtr);
	}

	function GetPop3SslServerCert() {
		$r=CkMailMan_GetPop3SslServerCert($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkCert($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetSentToEmailAddrs() {
		$r=CkMailMan_GetSentToEmailAddrs($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkStringArray($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetSizeByUidl($uidl) {
		return CkMailMan_GetSizeByUidl($this->_cPtr,$uidl);
	}

	function GetSmtpSslServerCert() {
		$r=CkMailMan_GetSmtpSslServerCert($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkCert($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetUidls() {
		$r=CkMailMan_GetUidls($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkStringArray($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function IsSmtpDsnCapable() {
		return CkMailMan_IsSmtpDsnCapable($this->_cPtr);
	}

	function IsUnlocked() {
		return CkMailMan_IsUnlocked($this->_cPtr);
	}

	function LoadEml($emlPath) {
		$r=CkMailMan_LoadEml($this->_cPtr,$emlPath);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkEmail($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function LoadMbx($mbxPath) {
		$r=CkMailMan_LoadMbx($this->_cPtr,$mbxPath);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkEmailBundle($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function LoadMime($mimeText) {
		$r=CkMailMan_LoadMime($this->_cPtr,$mimeText);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkEmail($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function LoadXmlEmail($folderPath) {
		$r=CkMailMan_LoadXmlEmail($this->_cPtr,$folderPath);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkEmail($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function LoadXmlEmailString($xmlString) {
		$r=CkMailMan_LoadXmlEmailString($this->_cPtr,$xmlString);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkEmail($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function LoadXmlFile($folderPath) {
		$r=CkMailMan_LoadXmlFile($this->_cPtr,$folderPath);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkEmailBundle($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function LoadXmlString($xmlString) {
		$r=CkMailMan_LoadXmlString($this->_cPtr,$xmlString);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkEmailBundle($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function OpenSmtpConnection() {
		return CkMailMan_OpenSmtpConnection($this->_cPtr);
	}

	function Pop3BeginSession() {
		return CkMailMan_Pop3BeginSession($this->_cPtr);
	}

	function Pop3EndSession() {
		return CkMailMan_Pop3EndSession($this->_cPtr);
	}

	function Pop3EndSessionNoQuit() {
		return CkMailMan_Pop3EndSessionNoQuit($this->_cPtr);
	}

	function Pop3Noop() {
		return CkMailMan_Pop3Noop($this->_cPtr);
	}

	function Pop3Reset() {
		return CkMailMan_Pop3Reset($this->_cPtr);
	}

	function pop3SendRawCommand($command,$charset) {
		return CkMailMan_pop3SendRawCommand($this->_cPtr,$command,$charset);
	}

	function QuickSend($fromAddr,$toAddrs,$subject,$body,$smtpServer) {
		return CkMailMan_QuickSend($this->_cPtr,$fromAddr,$toAddrs,$subject,$body,$smtpServer);
	}

	function renderToMime($email) {
		return CkMailMan_renderToMime($this->_cPtr,$email);
	}

	function RenderToMimeBytes($email,$outBytes) {
		return CkMailMan_RenderToMimeBytes($this->_cPtr,$email,$outBytes);
	}

	function SaveLastError($path) {
		return CkMailMan_SaveLastError($this->_cPtr,$path);
	}

	function SendBundle($bundle) {
		return CkMailMan_SendBundle($this->_cPtr,$bundle);
	}

	function SendEmail($email) {
		return CkMailMan_SendEmail($this->_cPtr,$email);
	}

	function SendMime($from,$recipients,$mimeMsg) {
		return CkMailMan_SendMime($this->_cPtr,$from,$recipients,$mimeMsg);
	}

	function SendMimeBytes($from,$recipients,$mimeData) {
		return CkMailMan_SendMimeBytes($this->_cPtr,$from,$recipients,$mimeData);
	}

	function SendMimeToList($from,$distListFile,$mimeText) {
		return CkMailMan_SendMimeToList($this->_cPtr,$from,$distListFile,$mimeText);
	}

	function SendToDistributionList($email,$sa) {
		return CkMailMan_SendToDistributionList($this->_cPtr,$email,$sa);
	}

	function SetDecryptCert2($cert,$key) {
		return CkMailMan_SetDecryptCert2($this->_cPtr,$cert,$key);
	}

	function SetSslClientCert($cert) {
		return CkMailMan_SetSslClientCert($this->_cPtr,$cert);
	}

	function SetSslClientCertPem($pemDataOrPath,$pemPassword) {
		return CkMailMan_SetSslClientCertPem($this->_cPtr,$pemDataOrPath,$pemPassword);
	}

	function SetSslClientCertPfx($pfxPath,$pfxPassword) {
		return CkMailMan_SetSslClientCertPfx($this->_cPtr,$pfxPath,$pfxPassword);
	}

	function SmtpNoop() {
		return CkMailMan_SmtpNoop($this->_cPtr);
	}

	function SmtpReset() {
		return CkMailMan_SmtpReset($this->_cPtr);
	}

	function smtpSendRawCommand($command,$charset,$bEncodeBase64) {
		return CkMailMan_smtpSendRawCommand($this->_cPtr,$command,$charset,$bEncodeBase64);
	}

	function SshAuthenticatePk($bSmtp,$sshLogin,$privateKey) {
		return CkMailMan_SshAuthenticatePk($this->_cPtr,$bSmtp,$sshLogin,$privateKey);
	}

	function SshAuthenticatePw($bSmtp,$sshLogin,$sshPassword) {
		return CkMailMan_SshAuthenticatePw($this->_cPtr,$bSmtp,$sshLogin,$sshPassword);
	}

	function SshCloseTunnel($bSmtp) {
		return CkMailMan_SshCloseTunnel($this->_cPtr,$bSmtp);
	}

	function SshTunnel($bSmtp,$sshServerHostname,$sshServerPort) {
		return CkMailMan_SshTunnel($this->_cPtr,$bSmtp,$sshServerHostname,$sshServerPort);
	}

	function TransferMail() {
		$r=CkMailMan_TransferMail($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkEmailBundle($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function TransferMultipleMime($uidlArray) {
		$r=CkMailMan_TransferMultipleMime($this->_cPtr,$uidlArray);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkStringArray($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function UnlockComponent($code) {
		return CkMailMan_UnlockComponent($this->_cPtr,$code);
	}

	function VerifyPopConnection() {
		return CkMailMan_VerifyPopConnection($this->_cPtr);
	}

	function VerifyPopLogin() {
		return CkMailMan_VerifyPopLogin($this->_cPtr);
	}

	function VerifyRecips($email,$saBadAddrs) {
		return CkMailMan_VerifyRecips($this->_cPtr,$email,$saBadAddrs);
	}

	function VerifySmtpConnection() {
		return CkMailMan_VerifySmtpConnection($this->_cPtr);
	}

	function VerifySmtpLogin() {
		return CkMailMan_VerifySmtpLogin($this->_cPtr);
	}
}

class CkGzip {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkGzip') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkGzip();
	}

	function get_Utf8() {
		return CkGzip_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkGzip_put_Utf8($this->_cPtr,$b);
	}

	function get_Comment($str) {
		CkGzip_get_Comment($this->_cPtr,$str);
	}

	function comment() {
		return CkGzip_comment($this->_cPtr);
	}

	function put_Comment($newVal) {
		CkGzip_put_Comment($this->_cPtr,$newVal);
	}

	function get_ExtraData($outBytes) {
		CkGzip_get_ExtraData($this->_cPtr,$outBytes);
	}

	function put_ExtraData($inBytes) {
		CkGzip_put_ExtraData($this->_cPtr,$inBytes);
	}

	function get_Filename($str) {
		CkGzip_get_Filename($this->_cPtr,$str);
	}

	function filename() {
		return CkGzip_filename($this->_cPtr);
	}

	function put_Filename($newVal) {
		CkGzip_put_Filename($this->_cPtr,$newVal);
	}

	function get_HeartbeatMs() {
		return CkGzip_get_HeartbeatMs($this->_cPtr);
	}

	function put_HeartbeatMs($newVal) {
		CkGzip_put_HeartbeatMs($this->_cPtr,$newVal);
	}

	function get_LastErrorHtml($str) {
		CkGzip_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkGzip_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkGzip_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkGzip_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkGzip_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkGzip_lastErrorXml($this->_cPtr);
	}

	function get_LastMod($outSysTime) {
		CkGzip_get_LastMod($this->_cPtr,$outSysTime);
	}

	function put_LastMod($sysTime) {
		CkGzip_put_LastMod($this->_cPtr,$sysTime);
	}

	function get_LastModStr($str) {
		CkGzip_get_LastModStr($this->_cPtr,$str);
	}

	function lastModStr() {
		return CkGzip_lastModStr($this->_cPtr);
	}

	function put_LastModStr($newVal) {
		CkGzip_put_LastModStr($this->_cPtr,$newVal);
	}

	function get_UseCurrentDate() {
		return CkGzip_get_UseCurrentDate($this->_cPtr);
	}

	function put_UseCurrentDate($newVal) {
		CkGzip_put_UseCurrentDate($this->_cPtr,$newVal);
	}

	function get_Version($str) {
		CkGzip_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkGzip_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkGzip_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkGzip_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkGzip_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkGzip_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkGzip_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function CompressFile($srcPath,$destPath) {
		return CkGzip_CompressFile($this->_cPtr,$srcPath,$destPath);
	}

	function CompressFile2($srcPath,$embeddedFilename,$destPath) {
		return CkGzip_CompressFile2($this->_cPtr,$srcPath,$embeddedFilename,$destPath);
	}

	function CompressFileToMem($srcPath,$outData) {
		return CkGzip_CompressFileToMem($this->_cPtr,$srcPath,$outData);
	}

	function CompressMemToFile($db,$destPath) {
		return CkGzip_CompressMemToFile($this->_cPtr,$db,$destPath);
	}

	function CompressMemory($dbIn,$outData) {
		return CkGzip_CompressMemory($this->_cPtr,$dbIn,$outData);
	}

	function CompressString($inStr,$destCharset,$outBytes) {
		return CkGzip_CompressString($this->_cPtr,$inStr,$destCharset,$outBytes);
	}

	function compressStringENC($strIn,$charset,$encoding) {
		return CkGzip_compressStringENC($this->_cPtr,$strIn,$charset,$encoding);
	}

	function CompressStringToFile($inStr,$destCharset,$destPath) {
		return CkGzip_CompressStringToFile($this->_cPtr,$inStr,$destCharset,$destPath);
	}

	function Decode($str,$encoding,$outBytes) {
		return CkGzip_Decode($this->_cPtr,$str,$encoding,$outBytes);
	}

	function deflateStringENC($str,$charset,$encoding) {
		return CkGzip_deflateStringENC($this->_cPtr,$str,$charset,$encoding);
	}

	function encode($byteData,$encoding) {
		return CkGzip_encode($this->_cPtr,$byteData,$encoding);
	}

	function ExamineFile($inGzPath) {
		return CkGzip_ExamineFile($this->_cPtr,$inGzPath);
	}

	function ExamineMemory($inGzData) {
		return CkGzip_ExamineMemory($this->_cPtr,$inGzData);
	}

	function GetDt() {
		$r=CkGzip_GetDt($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkDateTime($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function inflateStringENC($str,$charset,$encoding) {
		return CkGzip_inflateStringENC($this->_cPtr,$str,$charset,$encoding);
	}

	function IsUnlocked() {
		return CkGzip_IsUnlocked($this->_cPtr);
	}

	function ReadFile($path,$outBytes) {
		return CkGzip_ReadFile($this->_cPtr,$path,$outBytes);
	}

	function SaveLastError($path) {
		return CkGzip_SaveLastError($this->_cPtr,$path);
	}

	function SetDt($dt) {
		return CkGzip_SetDt($this->_cPtr,$dt);
	}

	function UnTarGz($gzPath,$destDir,$bNoAbsolute) {
		return CkGzip_UnTarGz($this->_cPtr,$gzPath,$destDir,$bNoAbsolute);
	}

	function UncompressFile($srcPath,$destPath) {
		return CkGzip_UncompressFile($this->_cPtr,$srcPath,$destPath);
	}

	function UncompressFileToMem($srcPath,$outData) {
		return CkGzip_UncompressFileToMem($this->_cPtr,$srcPath,$outData);
	}

	function uncompressFileToString($srcPath,$inCharset) {
		return CkGzip_uncompressFileToString($this->_cPtr,$srcPath,$inCharset);
	}

	function UncompressMemToFile($db,$destPath) {
		return CkGzip_UncompressMemToFile($this->_cPtr,$db,$destPath);
	}

	function UncompressMemory($dbIn,$outData) {
		return CkGzip_UncompressMemory($this->_cPtr,$dbIn,$outData);
	}

	function uncompressString($inData,$inCharset) {
		return CkGzip_uncompressString($this->_cPtr,$inData,$inCharset);
	}

	function uncompressStringENC($strIn,$charset,$encoding) {
		return CkGzip_uncompressStringENC($this->_cPtr,$strIn,$charset,$encoding);
	}

	function UnlockComponent($unlockCode) {
		return CkGzip_UnlockComponent($this->_cPtr,$unlockCode);
	}

	function WriteFile($path,$binaryData) {
		return CkGzip_WriteFile($this->_cPtr,$path,$binaryData);
	}

	function xfdlToXml($xfdl) {
		return CkGzip_xfdlToXml($this->_cPtr,$xfdl);
	}
}

class CkUnixCompress {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkUnixCompress') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkUnixCompress();
	}

	function get_Utf8() {
		return CkUnixCompress_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkUnixCompress_put_Utf8($this->_cPtr,$b);
	}

	function get_LastErrorHtml($str) {
		CkUnixCompress_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkUnixCompress_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkUnixCompress_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkUnixCompress_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkUnixCompress_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkUnixCompress_lastErrorXml($this->_cPtr);
	}

	function get_Version($str) {
		CkUnixCompress_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkUnixCompress_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkUnixCompress_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkUnixCompress_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkUnixCompress_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkUnixCompress_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkUnixCompress_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function CompressFile($srcPath,$destPath) {
		return CkUnixCompress_CompressFile($this->_cPtr,$srcPath,$destPath);
	}

	function CompressFileToMem($srcPath,$outData) {
		return CkUnixCompress_CompressFileToMem($this->_cPtr,$srcPath,$outData);
	}

	function CompressMemToFile($db,$destPath) {
		return CkUnixCompress_CompressMemToFile($this->_cPtr,$db,$destPath);
	}

	function CompressMemory($dbIn,$outData) {
		return CkUnixCompress_CompressMemory($this->_cPtr,$dbIn,$outData);
	}

	function CompressString($inStr,$charset,$outBytes) {
		return CkUnixCompress_CompressString($this->_cPtr,$inStr,$charset,$outBytes);
	}

	function CompressStringToFile($inStr,$charset,$destPath) {
		return CkUnixCompress_CompressStringToFile($this->_cPtr,$inStr,$charset,$destPath);
	}

	function IsUnlocked() {
		return CkUnixCompress_IsUnlocked($this->_cPtr);
	}

	function SaveLastError($path) {
		return CkUnixCompress_SaveLastError($this->_cPtr,$path);
	}

	function UnTarZ($zPath,$destDir,$bNoAbsolute) {
		return CkUnixCompress_UnTarZ($this->_cPtr,$zPath,$destDir,$bNoAbsolute);
	}

	function UncompressFile($srcPath,$destPath) {
		return CkUnixCompress_UncompressFile($this->_cPtr,$srcPath,$destPath);
	}

	function UncompressFileToMem($srcPath,$outData) {
		return CkUnixCompress_UncompressFileToMem($this->_cPtr,$srcPath,$outData);
	}

	function uncompressFileToString($srcPath,$inCharset) {
		return CkUnixCompress_uncompressFileToString($this->_cPtr,$srcPath,$inCharset);
	}

	function UncompressMemToFile($db,$destPath) {
		return CkUnixCompress_UncompressMemToFile($this->_cPtr,$db,$destPath);
	}

	function UncompressMemory($dbIn,$outData) {
		return CkUnixCompress_UncompressMemory($this->_cPtr,$dbIn,$outData);
	}

	function uncompressString($inData,$inCharset) {
		return CkUnixCompress_uncompressString($this->_cPtr,$inData,$inCharset);
	}

	function UnlockComponent($unlockCode) {
		return CkUnixCompress_UnlockComponent($this->_cPtr,$unlockCode);
	}
}

class CkCrypt2 {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkCrypt2') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkCrypt2();
	}

	function get_Utf8() {
		return CkCrypt2_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkCrypt2_put_Utf8($this->_cPtr,$b);
	}

	function get_BlockSize() {
		return CkCrypt2_get_BlockSize($this->_cPtr);
	}

	function get_CadesEnabled() {
		return CkCrypt2_get_CadesEnabled($this->_cPtr);
	}

	function put_CadesEnabled($newVal) {
		CkCrypt2_put_CadesEnabled($this->_cPtr,$newVal);
	}

	function get_CadesSigPolicyHash($str) {
		CkCrypt2_get_CadesSigPolicyHash($this->_cPtr,$str);
	}

	function cadesSigPolicyHash() {
		return CkCrypt2_cadesSigPolicyHash($this->_cPtr);
	}

	function put_CadesSigPolicyHash($newVal) {
		CkCrypt2_put_CadesSigPolicyHash($this->_cPtr,$newVal);
	}

	function get_CadesSigPolicyId($str) {
		CkCrypt2_get_CadesSigPolicyId($this->_cPtr,$str);
	}

	function cadesSigPolicyId() {
		return CkCrypt2_cadesSigPolicyId($this->_cPtr);
	}

	function put_CadesSigPolicyId($newVal) {
		CkCrypt2_put_CadesSigPolicyId($this->_cPtr,$newVal);
	}

	function get_CadesSigPolicyUri($str) {
		CkCrypt2_get_CadesSigPolicyUri($this->_cPtr,$str);
	}

	function cadesSigPolicyUri() {
		return CkCrypt2_cadesSigPolicyUri($this->_cPtr);
	}

	function put_CadesSigPolicyUri($newVal) {
		CkCrypt2_put_CadesSigPolicyUri($this->_cPtr,$newVal);
	}

	function get_Charset($str) {
		CkCrypt2_get_Charset($this->_cPtr,$str);
	}

	function charset() {
		return CkCrypt2_charset($this->_cPtr);
	}

	function put_Charset($newVal) {
		CkCrypt2_put_Charset($this->_cPtr,$newVal);
	}

	function get_CipherMode($str) {
		CkCrypt2_get_CipherMode($this->_cPtr,$str);
	}

	function cipherMode() {
		return CkCrypt2_cipherMode($this->_cPtr);
	}

	function put_CipherMode($newVal) {
		CkCrypt2_put_CipherMode($this->_cPtr,$newVal);
	}

	function get_CompressionAlgorithm($str) {
		CkCrypt2_get_CompressionAlgorithm($this->_cPtr,$str);
	}

	function compressionAlgorithm() {
		return CkCrypt2_compressionAlgorithm($this->_cPtr);
	}

	function put_CompressionAlgorithm($newVal) {
		CkCrypt2_put_CompressionAlgorithm($this->_cPtr,$newVal);
	}

	function get_CryptAlgorithm($str) {
		CkCrypt2_get_CryptAlgorithm($this->_cPtr,$str);
	}

	function cryptAlgorithm() {
		return CkCrypt2_cryptAlgorithm($this->_cPtr);
	}

	function put_CryptAlgorithm($newVal) {
		CkCrypt2_put_CryptAlgorithm($this->_cPtr,$newVal);
	}

	function get_EncodingMode($str) {
		CkCrypt2_get_EncodingMode($this->_cPtr,$str);
	}

	function encodingMode() {
		return CkCrypt2_encodingMode($this->_cPtr);
	}

	function put_EncodingMode($newVal) {
		CkCrypt2_put_EncodingMode($this->_cPtr,$newVal);
	}

	function get_FirstChunk() {
		return CkCrypt2_get_FirstChunk($this->_cPtr);
	}

	function put_FirstChunk($newVal) {
		CkCrypt2_put_FirstChunk($this->_cPtr,$newVal);
	}

	function get_HashAlgorithm($str) {
		CkCrypt2_get_HashAlgorithm($this->_cPtr,$str);
	}

	function hashAlgorithm() {
		return CkCrypt2_hashAlgorithm($this->_cPtr);
	}

	function put_HashAlgorithm($newVal) {
		CkCrypt2_put_HashAlgorithm($this->_cPtr,$newVal);
	}

	function get_HavalRounds() {
		return CkCrypt2_get_HavalRounds($this->_cPtr);
	}

	function put_HavalRounds($newVal) {
		CkCrypt2_put_HavalRounds($this->_cPtr,$newVal);
	}

	function get_HeartbeatMs() {
		return CkCrypt2_get_HeartbeatMs($this->_cPtr);
	}

	function put_HeartbeatMs($newVal) {
		CkCrypt2_put_HeartbeatMs($this->_cPtr,$newVal);
	}

	function get_IV($outBytes) {
		CkCrypt2_get_IV($this->_cPtr,$outBytes);
	}

	function put_IV($inBytes) {
		CkCrypt2_put_IV($this->_cPtr,$inBytes);
	}

	function get_IncludeCertChain() {
		return CkCrypt2_get_IncludeCertChain($this->_cPtr);
	}

	function put_IncludeCertChain($newVal) {
		CkCrypt2_put_IncludeCertChain($this->_cPtr,$newVal);
	}

	function get_IterationCount() {
		return CkCrypt2_get_IterationCount($this->_cPtr);
	}

	function put_IterationCount($newVal) {
		CkCrypt2_put_IterationCount($this->_cPtr,$newVal);
	}

	function get_KeyLength() {
		return CkCrypt2_get_KeyLength($this->_cPtr);
	}

	function put_KeyLength($newVal) {
		CkCrypt2_put_KeyLength($this->_cPtr,$newVal);
	}

	function get_LastChunk() {
		return CkCrypt2_get_LastChunk($this->_cPtr);
	}

	function put_LastChunk($newVal) {
		CkCrypt2_put_LastChunk($this->_cPtr,$newVal);
	}

	function get_LastErrorHtml($str) {
		CkCrypt2_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkCrypt2_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkCrypt2_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkCrypt2_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkCrypt2_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkCrypt2_lastErrorXml($this->_cPtr);
	}

	function get_NumSignerCerts() {
		return CkCrypt2_get_NumSignerCerts($this->_cPtr);
	}

	function get_PaddingScheme() {
		return CkCrypt2_get_PaddingScheme($this->_cPtr);
	}

	function put_PaddingScheme($newVal) {
		CkCrypt2_put_PaddingScheme($this->_cPtr,$newVal);
	}

	function get_PbesAlgorithm($str) {
		CkCrypt2_get_PbesAlgorithm($this->_cPtr,$str);
	}

	function pbesAlgorithm() {
		return CkCrypt2_pbesAlgorithm($this->_cPtr);
	}

	function put_PbesAlgorithm($newVal) {
		CkCrypt2_put_PbesAlgorithm($this->_cPtr,$newVal);
	}

	function get_PbesPassword($str) {
		CkCrypt2_get_PbesPassword($this->_cPtr,$str);
	}

	function pbesPassword() {
		return CkCrypt2_pbesPassword($this->_cPtr);
	}

	function put_PbesPassword($newVal) {
		CkCrypt2_put_PbesPassword($this->_cPtr,$newVal);
	}

	function get_Pkcs7CryptAlg($str) {
		CkCrypt2_get_Pkcs7CryptAlg($this->_cPtr,$str);
	}

	function pkcs7CryptAlg() {
		return CkCrypt2_pkcs7CryptAlg($this->_cPtr);
	}

	function put_Pkcs7CryptAlg($newVal) {
		CkCrypt2_put_Pkcs7CryptAlg($this->_cPtr,$newVal);
	}

	function get_Rc2EffectiveKeyLength() {
		return CkCrypt2_get_Rc2EffectiveKeyLength($this->_cPtr);
	}

	function put_Rc2EffectiveKeyLength($newVal) {
		CkCrypt2_put_Rc2EffectiveKeyLength($this->_cPtr,$newVal);
	}

	function get_Salt($outBytes) {
		CkCrypt2_get_Salt($this->_cPtr,$outBytes);
	}

	function put_Salt($inBytes) {
		CkCrypt2_put_Salt($this->_cPtr,$inBytes);
	}

	function get_SecretKey($outBytes) {
		CkCrypt2_get_SecretKey($this->_cPtr,$outBytes);
	}

	function put_SecretKey($inBytes) {
		CkCrypt2_put_SecretKey($this->_cPtr,$inBytes);
	}

	function get_UuFilename($str) {
		CkCrypt2_get_UuFilename($this->_cPtr,$str);
	}

	function uuFilename() {
		return CkCrypt2_uuFilename($this->_cPtr);
	}

	function put_UuFilename($newVal) {
		CkCrypt2_put_UuFilename($this->_cPtr,$newVal);
	}

	function get_UuMode($str) {
		CkCrypt2_get_UuMode($this->_cPtr,$str);
	}

	function uuMode() {
		return CkCrypt2_uuMode($this->_cPtr);
	}

	function put_UuMode($newVal) {
		CkCrypt2_put_UuMode($this->_cPtr,$newVal);
	}

	function get_Version($str) {
		CkCrypt2_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkCrypt2_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkCrypt2_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkCrypt2_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkCrypt2_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkCrypt2_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkCrypt2_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function AddEncryptCert($cert) {
		CkCrypt2_AddEncryptCert($this->_cPtr,$cert);
	}

	function AddPfxSourceData($pfxData,$password) {
		return CkCrypt2_AddPfxSourceData($this->_cPtr,$pfxData,$password);
	}

	function AddPfxSourceFile($pfxFilePath,$password) {
		return CkCrypt2_AddPfxSourceFile($this->_cPtr,$pfxFilePath,$password);
	}

	function ByteSwap4321($data,$outBytes) {
		return CkCrypt2_ByteSwap4321($this->_cPtr,$data,$outBytes);
	}

	function bytesToString($inData,$charset) {
		return CkCrypt2_bytesToString($this->_cPtr,$inData,$charset);
	}

	function CkDecryptFile($srcFile,$destFile) {
		return CkCrypt2_CkDecryptFile($this->_cPtr,$srcFile,$destFile);
	}

	function CkEncryptFile($srcFile,$destFile) {
		return CkCrypt2_CkEncryptFile($this->_cPtr,$srcFile,$destFile);
	}

	function ClearEncryptCerts() {
		CkCrypt2_ClearEncryptCerts($this->_cPtr);
	}

	function CompressBytes($bData,$outData) {
		return CkCrypt2_CompressBytes($this->_cPtr,$bData,$outData);
	}

	function compressBytesENC($bData) {
		return CkCrypt2_compressBytesENC($this->_cPtr,$bData);
	}

	function CompressString($str,$outData) {
		return CkCrypt2_CompressString($this->_cPtr,$str,$outData);
	}

	function compressStringENC($str) {
		return CkCrypt2_compressStringENC($this->_cPtr,$str);
	}

	function CreateDetachedSignature($inFile,$sigFile) {
		return CkCrypt2_CreateDetachedSignature($this->_cPtr,$inFile,$sigFile);
	}

	function CreateP7M($inPath,$p7mPath) {
		return CkCrypt2_CreateP7M($this->_cPtr,$inPath,$p7mPath);
	}

	function CreateP7S($inPath,$p7sPath) {
		return CkCrypt2_CreateP7S($this->_cPtr,$inPath,$p7sPath);
	}

	function Decode($str,$encoding,$outData) {
		return CkCrypt2_Decode($this->_cPtr,$str,$encoding,$outData);
	}

	function decodeString($inStr,$charset,$encoding) {
		return CkCrypt2_decodeString($this->_cPtr,$inStr,$charset,$encoding);
	}

	function DecryptBytes($bData,$outData) {
		return CkCrypt2_DecryptBytes($this->_cPtr,$bData,$outData);
	}

	function DecryptBytesENC($str,$outData) {
		return CkCrypt2_DecryptBytesENC($this->_cPtr,$str,$outData);
	}

	function decryptEncoded($str) {
		return CkCrypt2_decryptEncoded($this->_cPtr,$str);
	}

	function decryptString($bData) {
		return CkCrypt2_decryptString($this->_cPtr,$bData);
	}

	function decryptStringENC($str) {
		return CkCrypt2_decryptStringENC($this->_cPtr,$str);
	}

	function encode($bData,$encoding) {
		return CkCrypt2_encode($this->_cPtr,$bData,$encoding);
	}

	function encodeBytes($pByteData,$szByteData,$encoding) {
		return CkCrypt2_encodeBytes($this->_cPtr,$pByteData,$szByteData,$encoding);
	}

	function encodeString($inStr,$charset,$encoding) {
		return CkCrypt2_encodeString($this->_cPtr,$inStr,$charset,$encoding);
	}

	function EncryptBytes($bData,$outData) {
		return CkCrypt2_EncryptBytes($this->_cPtr,$bData,$outData);
	}

	function encryptBytesENC($bData) {
		return CkCrypt2_encryptBytesENC($this->_cPtr,$bData);
	}

	function encryptEncoded($str) {
		return CkCrypt2_encryptEncoded($this->_cPtr,$str);
	}

	function EncryptString($str,$outData) {
		return CkCrypt2_EncryptString($this->_cPtr,$str,$outData);
	}

	function encryptStringENC($str) {
		return CkCrypt2_encryptStringENC($this->_cPtr,$str);
	}

	function genEncodedSecretKey($password,$encoding) {
		return CkCrypt2_genEncodedSecretKey($this->_cPtr,$password,$encoding);
	}

	function genRandomBytesENC($numBytes) {
		return CkCrypt2_genRandomBytesENC($this->_cPtr,$numBytes);
	}

	function GenerateSecretKey($password,$outData) {
		return CkCrypt2_GenerateSecretKey($this->_cPtr,$password,$outData);
	}

	function getEncodedIV($encoding) {
		return CkCrypt2_getEncodedIV($this->_cPtr,$encoding);
	}

	function encodedIV($encoding) {
		return CkCrypt2_encodedIV($this->_cPtr,$encoding);
	}

	function getEncodedKey($encoding) {
		return CkCrypt2_getEncodedKey($this->_cPtr,$encoding);
	}

	function encodedKey($encoding) {
		return CkCrypt2_encodedKey($this->_cPtr,$encoding);
	}

	function getEncodedSalt($encoding) {
		return CkCrypt2_getEncodedSalt($this->_cPtr,$encoding);
	}

	function encodedSalt($encoding) {
		return CkCrypt2_encodedSalt($this->_cPtr,$encoding);
	}

	function GetLastCert() {
		$r=CkCrypt2_GetLastCert($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkCert($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetSignatureSigningTime($index,$outSysTime) {
		return CkCrypt2_GetSignatureSigningTime($this->_cPtr,$index,$outSysTime);
	}

	function getSignatureSigningTimeStr($index) {
		return CkCrypt2_getSignatureSigningTimeStr($this->_cPtr,$index);
	}

	function signatureSigningTimeStr($index) {
		return CkCrypt2_signatureSigningTimeStr($this->_cPtr,$index);
	}

	function GetSignerCert($index) {
		$r=CkCrypt2_GetSignerCert($this->_cPtr,$index);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkCert($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function HasSignatureSigningTime($index) {
		return CkCrypt2_HasSignatureSigningTime($this->_cPtr,$index);
	}

	function HashBeginBytes($data) {
		return CkCrypt2_HashBeginBytes($this->_cPtr,$data);
	}

	function HashBeginString($strData) {
		return CkCrypt2_HashBeginString($this->_cPtr,$strData);
	}

	function HashBytes($bData,$outData) {
		return CkCrypt2_HashBytes($this->_cPtr,$bData,$outData);
	}

	function hashBytesENC($bData) {
		return CkCrypt2_hashBytesENC($this->_cPtr,$bData);
	}

	function HashFile($path,$outData) {
		return CkCrypt2_HashFile($this->_cPtr,$path,$outData);
	}

	function hashFileENC($path) {
		return CkCrypt2_hashFileENC($this->_cPtr,$path);
	}

	function HashFinal($outBytes) {
		return CkCrypt2_HashFinal($this->_cPtr,$outBytes);
	}

	function hashFinalENC() {
		return CkCrypt2_hashFinalENC($this->_cPtr);
	}

	function HashMoreBytes($data) {
		return CkCrypt2_HashMoreBytes($this->_cPtr,$data);
	}

	function HashMoreString($strData) {
		return CkCrypt2_HashMoreString($this->_cPtr,$strData);
	}

	function HashString($str,$outData) {
		return CkCrypt2_HashString($this->_cPtr,$str,$outData);
	}

	function hashStringENC($str) {
		return CkCrypt2_hashStringENC($this->_cPtr,$str);
	}

	function HmacBytes($inBytes,$outHmac) {
		return CkCrypt2_HmacBytes($this->_cPtr,$inBytes,$outHmac);
	}

	function hmacBytesENC($inBytes) {
		return CkCrypt2_hmacBytesENC($this->_cPtr,$inBytes);
	}

	function HmacString($inText,$outHmac) {
		return CkCrypt2_HmacString($this->_cPtr,$inText,$outHmac);
	}

	function hmacStringENC($inText) {
		return CkCrypt2_hmacStringENC($this->_cPtr,$inText);
	}

	function InflateBytes($bData,$outData) {
		return CkCrypt2_InflateBytes($this->_cPtr,$bData,$outData);
	}

	function InflateBytesENC($str,$outData) {
		return CkCrypt2_InflateBytesENC($this->_cPtr,$str,$outData);
	}

	function inflateString($bData) {
		return CkCrypt2_inflateString($this->_cPtr,$bData);
	}

	function inflateStringENC($str) {
		return CkCrypt2_inflateStringENC($this->_cPtr,$str);
	}

	function IsUnlocked() {
		return CkCrypt2_IsUnlocked($this->_cPtr);
	}

	function mySqlAesDecrypt($strEncrypted,$strKey) {
		return CkCrypt2_mySqlAesDecrypt($this->_cPtr,$strEncrypted,$strKey);
	}

	function mySqlAesEncrypt($strData,$strKey) {
		return CkCrypt2_mySqlAesEncrypt($this->_cPtr,$strData,$strKey);
	}

	function OpaqueSignBytes($bData,$outData) {
		return CkCrypt2_OpaqueSignBytes($this->_cPtr,$bData,$outData);
	}

	function opaqueSignBytesENC($bData) {
		return CkCrypt2_opaqueSignBytesENC($this->_cPtr,$bData);
	}

	function OpaqueSignString($str,$outData) {
		return CkCrypt2_OpaqueSignString($this->_cPtr,$str,$outData);
	}

	function opaqueSignStringENC($str) {
		return CkCrypt2_opaqueSignStringENC($this->_cPtr,$str);
	}

	function OpaqueVerifyBytes($p7s,$outOriginal) {
		return CkCrypt2_OpaqueVerifyBytes($this->_cPtr,$p7s,$outOriginal);
	}

	function OpaqueVerifyBytesENC($p7s,$outOriginal) {
		return CkCrypt2_OpaqueVerifyBytesENC($this->_cPtr,$p7s,$outOriginal);
	}

	function opaqueVerifyString($p7s) {
		return CkCrypt2_opaqueVerifyString($this->_cPtr,$p7s);
	}

	function opaqueVerifyStringENC($p7s) {
		return CkCrypt2_opaqueVerifyStringENC($this->_cPtr,$p7s);
	}

	function pbkdf1($password,$charset,$hashAlg,$salt,$iterationCount,$outputKeyBitLen,$encoding) {
		return CkCrypt2_pbkdf1($this->_cPtr,$password,$charset,$hashAlg,$salt,$iterationCount,$outputKeyBitLen,$encoding);
	}

	function pbkdf2($password,$charset,$hashAlg,$salt,$iterationCount,$outputKeyBitLen,$encoding) {
		return CkCrypt2_pbkdf2($this->_cPtr,$password,$charset,$hashAlg,$salt,$iterationCount,$outputKeyBitLen,$encoding);
	}

	function RandomizeIV() {
		CkCrypt2_RandomizeIV($this->_cPtr);
	}

	function RandomizeKey() {
		CkCrypt2_RandomizeKey($this->_cPtr);
	}

	function reEncode($data,$fromEncoding,$toEncoding) {
		return CkCrypt2_reEncode($this->_cPtr,$data,$fromEncoding,$toEncoding);
	}

	function ReadFile($path,$outBytes) {
		return CkCrypt2_ReadFile($this->_cPtr,$path,$outBytes);
	}

	function SaveLastError($path) {
		return CkCrypt2_SaveLastError($this->_cPtr,$path);
	}

	function SetDecryptCert($cert) {
		return CkCrypt2_SetDecryptCert($this->_cPtr,$cert);
	}

	function SetDecryptCert2($cert,$key) {
		return CkCrypt2_SetDecryptCert2($this->_cPtr,$cert,$key);
	}

	function SetEncodedIV($ivStr,$encoding) {
		CkCrypt2_SetEncodedIV($this->_cPtr,$ivStr,$encoding);
	}

	function SetEncodedKey($keyStr,$encoding) {
		CkCrypt2_SetEncodedKey($this->_cPtr,$keyStr,$encoding);
	}

	function SetEncodedSalt($saltStr,$encoding) {
		CkCrypt2_SetEncodedSalt($this->_cPtr,$saltStr,$encoding);
	}

	function SetEncryptCert($cert) {
		return CkCrypt2_SetEncryptCert($this->_cPtr,$cert);
	}

	function SetHmacKeyBytes($keyBytes) {
		CkCrypt2_SetHmacKeyBytes($this->_cPtr,$keyBytes);
	}

	function SetHmacKeyEncoded($key,$encoding) {
		CkCrypt2_SetHmacKeyEncoded($this->_cPtr,$key,$encoding);
	}

	function SetHmacKeyString($key) {
		CkCrypt2_SetHmacKeyString($this->_cPtr,$key);
	}

	function SetIV($pByteData,$szByteData) {
		CkCrypt2_SetIV($this->_cPtr,$pByteData,$szByteData);
	}

	function SetSecretKey($pByteData,$szByteData) {
		CkCrypt2_SetSecretKey($this->_cPtr,$pByteData,$szByteData);
	}

	function SetSecretKeyViaPassword($password) {
		CkCrypt2_SetSecretKeyViaPassword($this->_cPtr,$password);
	}

	function SetSigningCert($cert) {
		return CkCrypt2_SetSigningCert($this->_cPtr,$cert);
	}

	function SetSigningCert2($cert,$key) {
		return CkCrypt2_SetSigningCert2($this->_cPtr,$cert,$key);
	}

	function SetVerifyCert($cert) {
		return CkCrypt2_SetVerifyCert($this->_cPtr,$cert);
	}

	function SignBytes($bData,$outData) {
		return CkCrypt2_SignBytes($this->_cPtr,$bData,$outData);
	}

	function signBytesENC($bData) {
		return CkCrypt2_signBytesENC($this->_cPtr,$bData);
	}

	function SignString($str,$outData) {
		return CkCrypt2_SignString($this->_cPtr,$str,$outData);
	}

	function signStringENC($str) {
		return CkCrypt2_signStringENC($this->_cPtr,$str);
	}

	function StringToBytes($inStr,$charset,$outBytes) {
		return CkCrypt2_StringToBytes($this->_cPtr,$inStr,$charset,$outBytes);
	}

	function trimEndingWith($inStr,$ending) {
		return CkCrypt2_trimEndingWith($this->_cPtr,$inStr,$ending);
	}

	function UnlockComponent($unlockCode) {
		return CkCrypt2_UnlockComponent($this->_cPtr,$unlockCode);
	}

	function VerifyBytes($bData1,$sigData) {
		return CkCrypt2_VerifyBytes($this->_cPtr,$bData1,$sigData);
	}

	function VerifyBytesENC($bData,$encodedSig) {
		return CkCrypt2_VerifyBytesENC($this->_cPtr,$bData,$encodedSig);
	}

	function VerifyDetachedSignature($inFile,$sigFile) {
		return CkCrypt2_VerifyDetachedSignature($this->_cPtr,$inFile,$sigFile);
	}

	function VerifyP7M($p7mPath,$destPath) {
		return CkCrypt2_VerifyP7M($this->_cPtr,$p7mPath,$destPath);
	}

	function VerifyP7S($inPath,$p7sPath) {
		return CkCrypt2_VerifyP7S($this->_cPtr,$inPath,$p7sPath);
	}

	function VerifyString($str,$sigData) {
		return CkCrypt2_VerifyString($this->_cPtr,$str,$sigData);
	}

	function VerifyStringENC($str,$encodedSig) {
		return CkCrypt2_VerifyStringENC($this->_cPtr,$str,$encodedSig);
	}

	function WriteFile($path,$fileData) {
		return CkCrypt2_WriteFile($this->_cPtr,$path,$fileData);
	}
}

class CkFtp2 {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkFtp2') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkFtp2();
	}

	function get_Utf8() {
		return CkFtp2_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkFtp2_put_Utf8($this->_cPtr,$b);
	}

	function get_Account($str) {
		CkFtp2_get_Account($this->_cPtr,$str);
	}

	function account() {
		return CkFtp2_account($this->_cPtr);
	}

	function put_Account($newVal) {
		CkFtp2_put_Account($this->_cPtr,$newVal);
	}

	function get_ActivePortRangeEnd() {
		return CkFtp2_get_ActivePortRangeEnd($this->_cPtr);
	}

	function put_ActivePortRangeEnd($newVal) {
		CkFtp2_put_ActivePortRangeEnd($this->_cPtr,$newVal);
	}

	function get_ActivePortRangeStart() {
		return CkFtp2_get_ActivePortRangeStart($this->_cPtr);
	}

	function put_ActivePortRangeStart($newVal) {
		CkFtp2_put_ActivePortRangeStart($this->_cPtr,$newVal);
	}

	function get_AllocateSize() {
		return CkFtp2_get_AllocateSize($this->_cPtr);
	}

	function put_AllocateSize($newVal) {
		CkFtp2_put_AllocateSize($this->_cPtr,$newVal);
	}

	function get_AsyncBytesReceived() {
		return CkFtp2_get_AsyncBytesReceived($this->_cPtr);
	}

	function get_AsyncBytesReceivedStr($str) {
		CkFtp2_get_AsyncBytesReceivedStr($this->_cPtr,$str);
	}

	function asyncBytesReceivedStr() {
		return CkFtp2_asyncBytesReceivedStr($this->_cPtr);
	}

	function get_AsyncBytesSent() {
		return CkFtp2_get_AsyncBytesSent($this->_cPtr);
	}

	function get_AsyncBytesSentStr($str) {
		CkFtp2_get_AsyncBytesSentStr($this->_cPtr,$str);
	}

	function asyncBytesSentStr() {
		return CkFtp2_asyncBytesSentStr($this->_cPtr);
	}

	function get_AsyncFinished() {
		return CkFtp2_get_AsyncFinished($this->_cPtr);
	}

	function get_AsyncLog($str) {
		CkFtp2_get_AsyncLog($this->_cPtr,$str);
	}

	function asyncLog() {
		return CkFtp2_asyncLog($this->_cPtr);
	}

	function get_AsyncSuccess() {
		return CkFtp2_get_AsyncSuccess($this->_cPtr);
	}

	function get_AuthSsl() {
		return CkFtp2_get_AuthSsl($this->_cPtr);
	}

	function put_AuthSsl($newVal) {
		CkFtp2_put_AuthSsl($this->_cPtr,$newVal);
	}

	function get_AuthTls() {
		return CkFtp2_get_AuthTls($this->_cPtr);
	}

	function put_AuthTls($newVal) {
		CkFtp2_put_AuthTls($this->_cPtr,$newVal);
	}

	function get_AutoFeat() {
		return CkFtp2_get_AutoFeat($this->_cPtr);
	}

	function put_AutoFeat($newVal) {
		CkFtp2_put_AutoFeat($this->_cPtr,$newVal);
	}

	function get_AutoFix() {
		return CkFtp2_get_AutoFix($this->_cPtr);
	}

	function put_AutoFix($newVal) {
		CkFtp2_put_AutoFix($this->_cPtr,$newVal);
	}

	function get_AutoGetSizeForProgress() {
		return CkFtp2_get_AutoGetSizeForProgress($this->_cPtr);
	}

	function put_AutoGetSizeForProgress($newVal) {
		CkFtp2_put_AutoGetSizeForProgress($this->_cPtr,$newVal);
	}

	function get_AutoSyst() {
		return CkFtp2_get_AutoSyst($this->_cPtr);
	}

	function put_AutoSyst($newVal) {
		CkFtp2_put_AutoSyst($this->_cPtr,$newVal);
	}

	function get_AutoXcrc() {
		return CkFtp2_get_AutoXcrc($this->_cPtr);
	}

	function put_AutoXcrc($newVal) {
		CkFtp2_put_AutoXcrc($this->_cPtr,$newVal);
	}

	function get_BandwidthThrottleDown() {
		return CkFtp2_get_BandwidthThrottleDown($this->_cPtr);
	}

	function put_BandwidthThrottleDown($newVal) {
		CkFtp2_put_BandwidthThrottleDown($this->_cPtr,$newVal);
	}

	function get_BandwidthThrottleUp() {
		return CkFtp2_get_BandwidthThrottleUp($this->_cPtr);
	}

	function put_BandwidthThrottleUp($newVal) {
		CkFtp2_put_BandwidthThrottleUp($this->_cPtr,$newVal);
	}

	function get_ClientIpAddress($str) {
		CkFtp2_get_ClientIpAddress($this->_cPtr,$str);
	}

	function clientIpAddress() {
		return CkFtp2_clientIpAddress($this->_cPtr);
	}

	function put_ClientIpAddress($newVal) {
		CkFtp2_put_ClientIpAddress($this->_cPtr,$newVal);
	}

	function get_ConnectFailReason() {
		return CkFtp2_get_ConnectFailReason($this->_cPtr);
	}

	function get_ConnectTimeout() {
		return CkFtp2_get_ConnectTimeout($this->_cPtr);
	}

	function put_ConnectTimeout($newVal) {
		CkFtp2_put_ConnectTimeout($this->_cPtr,$newVal);
	}

	function get_ConnectVerified() {
		return CkFtp2_get_ConnectVerified($this->_cPtr);
	}

	function get_CrlfMode() {
		return CkFtp2_get_CrlfMode($this->_cPtr);
	}

	function put_CrlfMode($newVal) {
		CkFtp2_put_CrlfMode($this->_cPtr,$newVal);
	}

	function get_DirListingCharset($str) {
		CkFtp2_get_DirListingCharset($this->_cPtr,$str);
	}

	function dirListingCharset() {
		return CkFtp2_dirListingCharset($this->_cPtr);
	}

	function put_DirListingCharset($newVal) {
		CkFtp2_put_DirListingCharset($this->_cPtr,$newVal);
	}

	function get_DownloadRate() {
		return CkFtp2_get_DownloadRate($this->_cPtr);
	}

	function get_ForcePortIpAddress($str) {
		CkFtp2_get_ForcePortIpAddress($this->_cPtr,$str);
	}

	function forcePortIpAddress() {
		return CkFtp2_forcePortIpAddress($this->_cPtr);
	}

	function put_ForcePortIpAddress($newVal) {
		CkFtp2_put_ForcePortIpAddress($this->_cPtr,$newVal);
	}

	function get_Greeting($str) {
		CkFtp2_get_Greeting($this->_cPtr,$str);
	}

	function greeting() {
		return CkFtp2_greeting($this->_cPtr);
	}

	function get_HasModeZ() {
		return CkFtp2_get_HasModeZ($this->_cPtr);
	}

	function get_HeartbeatMs() {
		return CkFtp2_get_HeartbeatMs($this->_cPtr);
	}

	function put_HeartbeatMs($newVal) {
		CkFtp2_put_HeartbeatMs($this->_cPtr,$newVal);
	}

	function get_Hostname($str) {
		CkFtp2_get_Hostname($this->_cPtr,$str);
	}

	function hostname() {
		return CkFtp2_hostname($this->_cPtr);
	}

	function put_Hostname($newVal) {
		CkFtp2_put_Hostname($this->_cPtr,$newVal);
	}

	function get_HttpProxyAuthMethod($str) {
		CkFtp2_get_HttpProxyAuthMethod($this->_cPtr,$str);
	}

	function httpProxyAuthMethod() {
		return CkFtp2_httpProxyAuthMethod($this->_cPtr);
	}

	function put_HttpProxyAuthMethod($newVal) {
		CkFtp2_put_HttpProxyAuthMethod($this->_cPtr,$newVal);
	}

	function get_HttpProxyDomain($str) {
		CkFtp2_get_HttpProxyDomain($this->_cPtr,$str);
	}

	function httpProxyDomain() {
		return CkFtp2_httpProxyDomain($this->_cPtr);
	}

	function put_HttpProxyDomain($newVal) {
		CkFtp2_put_HttpProxyDomain($this->_cPtr,$newVal);
	}

	function get_HttpProxyHostname($str) {
		CkFtp2_get_HttpProxyHostname($this->_cPtr,$str);
	}

	function httpProxyHostname() {
		return CkFtp2_httpProxyHostname($this->_cPtr);
	}

	function put_HttpProxyHostname($newVal) {
		CkFtp2_put_HttpProxyHostname($this->_cPtr,$newVal);
	}

	function get_HttpProxyPassword($str) {
		CkFtp2_get_HttpProxyPassword($this->_cPtr,$str);
	}

	function httpProxyPassword() {
		return CkFtp2_httpProxyPassword($this->_cPtr);
	}

	function put_HttpProxyPassword($newVal) {
		CkFtp2_put_HttpProxyPassword($this->_cPtr,$newVal);
	}

	function get_HttpProxyPort() {
		return CkFtp2_get_HttpProxyPort($this->_cPtr);
	}

	function put_HttpProxyPort($newVal) {
		CkFtp2_put_HttpProxyPort($this->_cPtr,$newVal);
	}

	function get_HttpProxyUsername($str) {
		CkFtp2_get_HttpProxyUsername($this->_cPtr,$str);
	}

	function httpProxyUsername() {
		return CkFtp2_httpProxyUsername($this->_cPtr);
	}

	function put_HttpProxyUsername($newVal) {
		CkFtp2_put_HttpProxyUsername($this->_cPtr,$newVal);
	}

	function get_IdleTimeoutMs() {
		return CkFtp2_get_IdleTimeoutMs($this->_cPtr);
	}

	function put_IdleTimeoutMs($newVal) {
		CkFtp2_put_IdleTimeoutMs($this->_cPtr,$newVal);
	}

	function get_IsConnected() {
		return CkFtp2_get_IsConnected($this->_cPtr);
	}

	function get_KeepSessionLog() {
		return CkFtp2_get_KeepSessionLog($this->_cPtr);
	}

	function put_KeepSessionLog($newVal) {
		CkFtp2_put_KeepSessionLog($this->_cPtr,$newVal);
	}

	function get_LastErrorHtml($str) {
		CkFtp2_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkFtp2_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkFtp2_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkFtp2_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkFtp2_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkFtp2_lastErrorXml($this->_cPtr);
	}

	function get_LastReply($str) {
		CkFtp2_get_LastReply($this->_cPtr,$str);
	}

	function lastReply() {
		return CkFtp2_lastReply($this->_cPtr);
	}

	function get_ListPattern($str) {
		CkFtp2_get_ListPattern($this->_cPtr,$str);
	}

	function listPattern() {
		return CkFtp2_listPattern($this->_cPtr);
	}

	function put_ListPattern($newVal) {
		CkFtp2_put_ListPattern($this->_cPtr,$newVal);
	}

	function get_LoginVerified() {
		return CkFtp2_get_LoginVerified($this->_cPtr);
	}

	function get_NumFilesAndDirs() {
		return CkFtp2_get_NumFilesAndDirs($this->_cPtr);
	}

	function get_PartialTransfer() {
		return CkFtp2_get_PartialTransfer($this->_cPtr);
	}

	function get_Passive() {
		return CkFtp2_get_Passive($this->_cPtr);
	}

	function put_Passive($newVal) {
		CkFtp2_put_Passive($this->_cPtr,$newVal);
	}

	function get_PassiveUseHostAddr() {
		return CkFtp2_get_PassiveUseHostAddr($this->_cPtr);
	}

	function put_PassiveUseHostAddr($newVal) {
		CkFtp2_put_PassiveUseHostAddr($this->_cPtr,$newVal);
	}

	function get_Password($str) {
		CkFtp2_get_Password($this->_cPtr,$str);
	}

	function password() {
		return CkFtp2_password($this->_cPtr);
	}

	function put_Password($newVal) {
		CkFtp2_put_Password($this->_cPtr,$newVal);
	}

	function get_Port() {
		return CkFtp2_get_Port($this->_cPtr);
	}

	function put_Port($newVal) {
		CkFtp2_put_Port($this->_cPtr,$newVal);
	}

	function get_PreferNlst() {
		return CkFtp2_get_PreferNlst($this->_cPtr);
	}

	function put_PreferNlst($newVal) {
		CkFtp2_put_PreferNlst($this->_cPtr,$newVal);
	}

	function get_ProgressMonSize() {
		return CkFtp2_get_ProgressMonSize($this->_cPtr);
	}

	function put_ProgressMonSize($newVal) {
		CkFtp2_put_ProgressMonSize($this->_cPtr,$newVal);
	}

	function get_ProxyHostname($str) {
		CkFtp2_get_ProxyHostname($this->_cPtr,$str);
	}

	function proxyHostname() {
		return CkFtp2_proxyHostname($this->_cPtr);
	}

	function put_ProxyHostname($newVal) {
		CkFtp2_put_ProxyHostname($this->_cPtr,$newVal);
	}

	function get_ProxyMethod() {
		return CkFtp2_get_ProxyMethod($this->_cPtr);
	}

	function put_ProxyMethod($newVal) {
		CkFtp2_put_ProxyMethod($this->_cPtr,$newVal);
	}

	function get_ProxyPassword($str) {
		CkFtp2_get_ProxyPassword($this->_cPtr,$str);
	}

	function proxyPassword() {
		return CkFtp2_proxyPassword($this->_cPtr);
	}

	function put_ProxyPassword($newVal) {
		CkFtp2_put_ProxyPassword($this->_cPtr,$newVal);
	}

	function get_ProxyPort() {
		return CkFtp2_get_ProxyPort($this->_cPtr);
	}

	function put_ProxyPort($newVal) {
		CkFtp2_put_ProxyPort($this->_cPtr,$newVal);
	}

	function get_ProxyUsername($str) {
		CkFtp2_get_ProxyUsername($this->_cPtr,$str);
	}

	function proxyUsername() {
		return CkFtp2_proxyUsername($this->_cPtr);
	}

	function put_ProxyUsername($newVal) {
		CkFtp2_put_ProxyUsername($this->_cPtr,$newVal);
	}

	function get_ReadTimeout() {
		return CkFtp2_get_ReadTimeout($this->_cPtr);
	}

	function put_ReadTimeout($newVal) {
		CkFtp2_put_ReadTimeout($this->_cPtr,$newVal);
	}

	function get_RequireSslCertVerify() {
		return CkFtp2_get_RequireSslCertVerify($this->_cPtr);
	}

	function put_RequireSslCertVerify($newVal) {
		CkFtp2_put_RequireSslCertVerify($this->_cPtr,$newVal);
	}

	function get_RestartNext() {
		return CkFtp2_get_RestartNext($this->_cPtr);
	}

	function put_RestartNext($newVal) {
		CkFtp2_put_RestartNext($this->_cPtr,$newVal);
	}

	function get_SendBufferSize() {
		return CkFtp2_get_SendBufferSize($this->_cPtr);
	}

	function put_SendBufferSize($newVal) {
		CkFtp2_put_SendBufferSize($this->_cPtr,$newVal);
	}

	function get_SessionLog($str) {
		CkFtp2_get_SessionLog($this->_cPtr,$str);
	}

	function sessionLog() {
		return CkFtp2_sessionLog($this->_cPtr);
	}

	function get_SkipFinalReply() {
		return CkFtp2_get_SkipFinalReply($this->_cPtr);
	}

	function put_SkipFinalReply($newVal) {
		CkFtp2_put_SkipFinalReply($this->_cPtr,$newVal);
	}

	function get_SoRcvBuf() {
		return CkFtp2_get_SoRcvBuf($this->_cPtr);
	}

	function put_SoRcvBuf($newVal) {
		CkFtp2_put_SoRcvBuf($this->_cPtr,$newVal);
	}

	function get_SoSndBuf() {
		return CkFtp2_get_SoSndBuf($this->_cPtr);
	}

	function put_SoSndBuf($newVal) {
		CkFtp2_put_SoSndBuf($this->_cPtr,$newVal);
	}

	function get_SocksHostname($str) {
		CkFtp2_get_SocksHostname($this->_cPtr,$str);
	}

	function socksHostname() {
		return CkFtp2_socksHostname($this->_cPtr);
	}

	function put_SocksHostname($newVal) {
		CkFtp2_put_SocksHostname($this->_cPtr,$newVal);
	}

	function get_SocksPassword($str) {
		CkFtp2_get_SocksPassword($this->_cPtr,$str);
	}

	function socksPassword() {
		return CkFtp2_socksPassword($this->_cPtr);
	}

	function put_SocksPassword($newVal) {
		CkFtp2_put_SocksPassword($this->_cPtr,$newVal);
	}

	function get_SocksPort() {
		return CkFtp2_get_SocksPort($this->_cPtr);
	}

	function put_SocksPort($newVal) {
		CkFtp2_put_SocksPort($this->_cPtr,$newVal);
	}

	function get_SocksUsername($str) {
		CkFtp2_get_SocksUsername($this->_cPtr,$str);
	}

	function socksUsername() {
		return CkFtp2_socksUsername($this->_cPtr);
	}

	function put_SocksUsername($newVal) {
		CkFtp2_put_SocksUsername($this->_cPtr,$newVal);
	}

	function get_SocksVersion() {
		return CkFtp2_get_SocksVersion($this->_cPtr);
	}

	function put_SocksVersion($newVal) {
		CkFtp2_put_SocksVersion($this->_cPtr,$newVal);
	}

	function get_Ssl() {
		return CkFtp2_get_Ssl($this->_cPtr);
	}

	function put_Ssl($newVal) {
		CkFtp2_put_Ssl($this->_cPtr,$newVal);
	}

	function get_SslProtocol($str) {
		CkFtp2_get_SslProtocol($this->_cPtr,$str);
	}

	function sslProtocol() {
		return CkFtp2_sslProtocol($this->_cPtr);
	}

	function put_SslProtocol($newVal) {
		CkFtp2_put_SslProtocol($this->_cPtr,$newVal);
	}

	function get_SslServerCertVerified() {
		return CkFtp2_get_SslServerCertVerified($this->_cPtr);
	}

	function get_SyncPreview($str) {
		CkFtp2_get_SyncPreview($this->_cPtr,$str);
	}

	function syncPreview() {
		return CkFtp2_syncPreview($this->_cPtr);
	}

	function get_UploadRate() {
		return CkFtp2_get_UploadRate($this->_cPtr);
	}

	function get_UseEpsv() {
		return CkFtp2_get_UseEpsv($this->_cPtr);
	}

	function put_UseEpsv($newVal) {
		CkFtp2_put_UseEpsv($this->_cPtr,$newVal);
	}

	function get_Username($str) {
		CkFtp2_get_Username($this->_cPtr,$str);
	}

	function username() {
		return CkFtp2_username($this->_cPtr);
	}

	function put_Username($newVal) {
		CkFtp2_put_Username($this->_cPtr,$newVal);
	}

	function get_Version($str) {
		CkFtp2_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkFtp2_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkFtp2_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkFtp2_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkFtp2_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkFtp2_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkFtp2_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function AppendFile($localPath,$remoteFilename) {
		return CkFtp2_AppendFile($this->_cPtr,$localPath,$remoteFilename);
	}

	function AppendFileFromBinaryData($remoteFilename,$binaryData) {
		return CkFtp2_AppendFileFromBinaryData($this->_cPtr,$remoteFilename,$binaryData);
	}

	function AppendFileFromTextData($remoteFilename,$textData,$charset) {
		return CkFtp2_AppendFileFromTextData($this->_cPtr,$remoteFilename,$textData,$charset);
	}

	function AsyncAbort() {
		CkFtp2_AsyncAbort($this->_cPtr);
	}

	function AsyncAppendFileStart($localPath,$remoteFilename) {
		return CkFtp2_AsyncAppendFileStart($this->_cPtr,$localPath,$remoteFilename);
	}

	function AsyncGetFileStart($remoteFilename,$localFilename) {
		return CkFtp2_AsyncGetFileStart($this->_cPtr,$remoteFilename,$localFilename);
	}

	function AsyncPutFileStart($localPath,$remoteFilename) {
		return CkFtp2_AsyncPutFileStart($this->_cPtr,$localPath,$remoteFilename);
	}

	function ChangeRemoteDir($relativeDirPath) {
		return CkFtp2_ChangeRemoteDir($this->_cPtr,$relativeDirPath);
	}

	function ClearControlChannel() {
		return CkFtp2_ClearControlChannel($this->_cPtr);
	}

	function ClearDirCache() {
		CkFtp2_ClearDirCache($this->_cPtr);
	}

	function ClearSessionLog() {
		CkFtp2_ClearSessionLog($this->_cPtr);
	}

	function Connect() {
		return CkFtp2_Connect($this->_cPtr);
	}

	function ConnectOnly() {
		return CkFtp2_ConnectOnly($this->_cPtr);
	}

	function ConvertToTls() {
		return CkFtp2_ConvertToTls($this->_cPtr);
	}

	function createPlan($localDir) {
		return CkFtp2_createPlan($this->_cPtr,$localDir);
	}

	function CreateRemoteDir($dir) {
		return CkFtp2_CreateRemoteDir($this->_cPtr,$dir);
	}

	function DeleteMatching($remotePattern) {
		return CkFtp2_DeleteMatching($this->_cPtr,$remotePattern);
	}

	function DeleteRemoteFile($filename) {
		return CkFtp2_DeleteRemoteFile($this->_cPtr,$filename);
	}

	function DeleteTree() {
		return CkFtp2_DeleteTree($this->_cPtr);
	}

	function DetermineProxyMethod() {
		return CkFtp2_DetermineProxyMethod($this->_cPtr);
	}

	function determineSettings() {
		return CkFtp2_determineSettings($this->_cPtr);
	}

	function dirTreeXml() {
		return CkFtp2_dirTreeXml($this->_cPtr);
	}

	function Disconnect() {
		return CkFtp2_Disconnect($this->_cPtr);
	}

	function DownloadTree($localRoot) {
		return CkFtp2_DownloadTree($this->_cPtr,$localRoot);
	}

	function feat() {
		return CkFtp2_feat($this->_cPtr);
	}

	function GetCreateDt($index) {
		$r=CkFtp2_GetCreateDt($this->_cPtr,$index);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkDateTime($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetCreateDtByName($filename) {
		$r=CkFtp2_GetCreateDtByName($this->_cPtr,$filename);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkDateTime($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetCreateFTime($index,$outFileTime) {
		return CkFtp2_GetCreateFTime($this->_cPtr,$index,$outFileTime);
	}

	function GetCreateTime($index,$outSysTime) {
		return CkFtp2_GetCreateTime($this->_cPtr,$index,$outSysTime);
	}

	function GetCreateTimeByName($filename,$outSysTime) {
		return CkFtp2_GetCreateTimeByName($this->_cPtr,$filename,$outSysTime);
	}

	function getCreateTimeByNameStr($filename) {
		return CkFtp2_getCreateTimeByNameStr($this->_cPtr,$filename);
	}

	function createTimeByNameStr($filename) {
		return CkFtp2_createTimeByNameStr($this->_cPtr,$filename);
	}

	function getCreateTimeStr($index) {
		return CkFtp2_getCreateTimeStr($this->_cPtr,$index);
	}

	function createTimeStr($index) {
		return CkFtp2_createTimeStr($this->_cPtr,$index);
	}

	function getCurrentRemoteDir() {
		return CkFtp2_getCurrentRemoteDir($this->_cPtr);
	}

	function currentRemoteDir() {
		return CkFtp2_currentRemoteDir($this->_cPtr);
	}

	function GetFile($remoteFilename,$localPath) {
		return CkFtp2_GetFile($this->_cPtr,$remoteFilename,$localPath);
	}

	function getFilename($index) {
		return CkFtp2_getFilename($this->_cPtr,$index);
	}

	function filename($index) {
		return CkFtp2_filename($this->_cPtr,$index);
	}

	function GetIsDirectory($index) {
		return CkFtp2_GetIsDirectory($this->_cPtr,$index);
	}

	function GetIsSymbolicLink($index) {
		return CkFtp2_GetIsSymbolicLink($this->_cPtr,$index);
	}

	function GetLastAccessDt($index) {
		$r=CkFtp2_GetLastAccessDt($this->_cPtr,$index);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkDateTime($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetLastAccessDtByName($filename) {
		$r=CkFtp2_GetLastAccessDtByName($this->_cPtr,$filename);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkDateTime($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetLastAccessFTime($index,$outFileTime) {
		return CkFtp2_GetLastAccessFTime($this->_cPtr,$index,$outFileTime);
	}

	function GetLastAccessTime($index,$outSysTime) {
		return CkFtp2_GetLastAccessTime($this->_cPtr,$index,$outSysTime);
	}

	function GetLastAccessTimeByName($filename,$outSysTime) {
		return CkFtp2_GetLastAccessTimeByName($this->_cPtr,$filename,$outSysTime);
	}

	function getLastAccessTimeByNameStr($filename) {
		return CkFtp2_getLastAccessTimeByNameStr($this->_cPtr,$filename);
	}

	function lastAccessTimeByNameStr($filename) {
		return CkFtp2_lastAccessTimeByNameStr($this->_cPtr,$filename);
	}

	function getLastAccessTimeStr($index) {
		return CkFtp2_getLastAccessTimeStr($this->_cPtr,$index);
	}

	function lastAccessTimeStr($index) {
		return CkFtp2_lastAccessTimeStr($this->_cPtr,$index);
	}

	function GetLastModDt($index) {
		$r=CkFtp2_GetLastModDt($this->_cPtr,$index);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkDateTime($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetLastModDtByName($filename) {
		$r=CkFtp2_GetLastModDtByName($this->_cPtr,$filename);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkDateTime($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetLastModifiedFTime($index,$outFileTime) {
		return CkFtp2_GetLastModifiedFTime($this->_cPtr,$index,$outFileTime);
	}

	function GetLastModifiedTime($index,$outSysTime) {
		return CkFtp2_GetLastModifiedTime($this->_cPtr,$index,$outSysTime);
	}

	function GetLastModifiedTimeByName($filename,$outSysTime) {
		return CkFtp2_GetLastModifiedTimeByName($this->_cPtr,$filename,$outSysTime);
	}

	function getLastModifiedTimeByNameStr($filename) {
		return CkFtp2_getLastModifiedTimeByNameStr($this->_cPtr,$filename);
	}

	function lastModifiedTimeByNameStr($filename) {
		return CkFtp2_lastModifiedTimeByNameStr($this->_cPtr,$filename);
	}

	function getLastModifiedTimeStr($index) {
		return CkFtp2_getLastModifiedTimeStr($this->_cPtr,$index);
	}

	function lastModifiedTimeStr($index) {
		return CkFtp2_lastModifiedTimeStr($this->_cPtr,$index);
	}

	function GetRemoteFileBinaryData($remoteFilename,$outData) {
		return CkFtp2_GetRemoteFileBinaryData($this->_cPtr,$remoteFilename,$outData);
	}

	function getRemoteFileTextC($remoteFilename,$charset) {
		return CkFtp2_getRemoteFileTextC($this->_cPtr,$remoteFilename,$charset);
	}

	function remoteFileTextC($remoteFilename,$charset) {
		return CkFtp2_remoteFileTextC($this->_cPtr,$remoteFilename,$charset);
	}

	function getRemoteFileTextData($remoteFilename) {
		return CkFtp2_getRemoteFileTextData($this->_cPtr,$remoteFilename);
	}

	function remoteFileTextData($remoteFilename) {
		return CkFtp2_remoteFileTextData($this->_cPtr,$remoteFilename);
	}

	function GetSize($index) {
		return CkFtp2_GetSize($this->_cPtr,$index);
	}

	function GetSize64($index) {
		return CkFtp2_GetSize64($this->_cPtr,$index);
	}

	function GetSizeByName($filname) {
		return CkFtp2_GetSizeByName($this->_cPtr,$filname);
	}

	function GetSizeByName64($filename) {
		return CkFtp2_GetSizeByName64($this->_cPtr,$filename);
	}

	function getSizeStr($index) {
		return CkFtp2_getSizeStr($this->_cPtr,$index);
	}

	function sizeStr($index) {
		return CkFtp2_sizeStr($this->_cPtr,$index);
	}

	function getSizeStrByName($filename) {
		return CkFtp2_getSizeStrByName($this->_cPtr,$filename);
	}

	function sizeStrByName($filename) {
		return CkFtp2_sizeStrByName($this->_cPtr,$filename);
	}

	function GetSslServerCert() {
		$r=CkFtp2_GetSslServerCert($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkCert($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function getTextDirListing($pattern) {
		return CkFtp2_getTextDirListing($this->_cPtr,$pattern);
	}

	function textDirListing($pattern) {
		return CkFtp2_textDirListing($this->_cPtr,$pattern);
	}

	function getXmlDirListing($pattern) {
		return CkFtp2_getXmlDirListing($this->_cPtr,$pattern);
	}

	function xmlDirListing($pattern) {
		return CkFtp2_xmlDirListing($this->_cPtr,$pattern);
	}

	function IsUnlocked() {
		return CkFtp2_IsUnlocked($this->_cPtr);
	}

	function LoginAfterConnectOnly() {
		return CkFtp2_LoginAfterConnectOnly($this->_cPtr);
	}

	function MGetFiles($remotePattern,$localDir) {
		return CkFtp2_MGetFiles($this->_cPtr,$remotePattern,$localDir);
	}

	function MPutFiles($pattern) {
		return CkFtp2_MPutFiles($this->_cPtr,$pattern);
	}

	function nlstXml($pattern) {
		return CkFtp2_nlstXml($this->_cPtr,$pattern);
	}

	function Noop() {
		return CkFtp2_Noop($this->_cPtr);
	}

	function PutFile($localPath,$remoteFilename) {
		return CkFtp2_PutFile($this->_cPtr,$localPath,$remoteFilename);
	}

	function PutFileFromBinaryData($remoteFilename,$binaryData) {
		return CkFtp2_PutFileFromBinaryData($this->_cPtr,$remoteFilename,$binaryData);
	}

	function PutFileFromTextData($remoteFilename,$textData,$charset) {
		return CkFtp2_PutFileFromTextData($this->_cPtr,$remoteFilename,$textData,$charset);
	}

	function PutPlan($planUtf8,$planLogFilePath) {
		return CkFtp2_PutPlan($this->_cPtr,$planUtf8,$planLogFilePath);
	}

	function PutTree($localDir) {
		return CkFtp2_PutTree($this->_cPtr,$localDir);
	}

	function Quote($cmd) {
		return CkFtp2_Quote($this->_cPtr,$cmd);
	}

	function RemoveRemoteDir($dir) {
		return CkFtp2_RemoveRemoteDir($this->_cPtr,$dir);
	}

	function RenameRemoteFile($existingFilename,$newFilename) {
		return CkFtp2_RenameRemoteFile($this->_cPtr,$existingFilename,$newFilename);
	}

	function SaveLastError($path) {
		return CkFtp2_SaveLastError($this->_cPtr,$path);
	}

	function sendCommand($cmd) {
		return CkFtp2_sendCommand($this->_cPtr,$cmd);
	}

	function SetModeZ() {
		return CkFtp2_SetModeZ($this->_cPtr);
	}

	function SetOldestDate($oldestDateTime) {
		CkFtp2_SetOldestDate($this->_cPtr,$oldestDateTime);
	}

	function SetOldestDateStr($oldestDateTimeStr) {
		CkFtp2_SetOldestDateStr($this->_cPtr,$oldestDateTimeStr);
	}

	function SetRemoteFileDateTime($dateTime,$remoteFilename) {
		return CkFtp2_SetRemoteFileDateTime($this->_cPtr,$dateTime,$remoteFilename);
	}

	function SetRemoteFileDateTimeStr($dateTimeStr,$remoteFilename) {
		return CkFtp2_SetRemoteFileDateTimeStr($this->_cPtr,$dateTimeStr,$remoteFilename);
	}

	function SetRemoteFileDt($dt,$remoteFilename) {
		return CkFtp2_SetRemoteFileDt($this->_cPtr,$dt,$remoteFilename);
	}

	function SetSslCertRequirement($name,$value) {
		CkFtp2_SetSslCertRequirement($this->_cPtr,$name,$value);
	}

	function SetSslClientCert($cert) {
		return CkFtp2_SetSslClientCert($this->_cPtr,$cert);
	}

	function SetSslClientCertPem($pemDataOrFilename,$pemPassword) {
		return CkFtp2_SetSslClientCertPem($this->_cPtr,$pemDataOrFilename,$pemPassword);
	}

	function SetSslClientCertPfx($pfxPath,$pfxPassword) {
		return CkFtp2_SetSslClientCertPfx($this->_cPtr,$pfxPath,$pfxPassword);
	}

	function SetTypeAscii() {
		return CkFtp2_SetTypeAscii($this->_cPtr);
	}

	function SetTypeBinary() {
		return CkFtp2_SetTypeBinary($this->_cPtr);
	}

	function Site($parms) {
		return CkFtp2_Site($this->_cPtr,$parms);
	}

	function SleepMs($millisec) {
		CkFtp2_SleepMs($this->_cPtr,$millisec);
	}

	function ck_stat() {
		return CkFtp2_ck_stat($this->_cPtr);
	}

	function SyncDeleteRemote($localRoot) {
		return CkFtp2_SyncDeleteRemote($this->_cPtr,$localRoot);
	}

	function SyncLocalDir($localRoot,$mode) {
		return CkFtp2_SyncLocalDir($this->_cPtr,$localRoot,$mode);
	}

	function SyncLocalTree($localRoot,$mode) {
		return CkFtp2_SyncLocalTree($this->_cPtr,$localRoot,$mode);
	}

	function SyncRemoteTree($localRoot,$mode) {
		return CkFtp2_SyncRemoteTree($this->_cPtr,$localRoot,$mode);
	}

	function SyncRemoteTree2($localRoot,$mode,$bDescend,$bPreviewOnly) {
		return CkFtp2_SyncRemoteTree2($this->_cPtr,$localRoot,$mode,$bDescend,$bPreviewOnly);
	}

	function syst() {
		return CkFtp2_syst($this->_cPtr);
	}

	function UnlockComponent($code) {
		return CkFtp2_UnlockComponent($this->_cPtr,$code);
	}
}

class CkMht {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkMht') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkMht();
	}

	function get_Utf8() {
		return CkMht_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkMht_put_Utf8($this->_cPtr,$b);
	}

	function get_BaseUrl($str) {
		CkMht_get_BaseUrl($this->_cPtr,$str);
	}

	function baseUrl() {
		return CkMht_baseUrl($this->_cPtr);
	}

	function put_BaseUrl($newVal) {
		CkMht_put_BaseUrl($this->_cPtr,$newVal);
	}

	function get_ConnectTimeout() {
		return CkMht_get_ConnectTimeout($this->_cPtr);
	}

	function put_ConnectTimeout($newVal) {
		CkMht_put_ConnectTimeout($this->_cPtr,$newVal);
	}

	function get_DebugHtmlAfter($str) {
		CkMht_get_DebugHtmlAfter($this->_cPtr,$str);
	}

	function debugHtmlAfter() {
		return CkMht_debugHtmlAfter($this->_cPtr);
	}

	function put_DebugHtmlAfter($newVal) {
		CkMht_put_DebugHtmlAfter($this->_cPtr,$newVal);
	}

	function get_DebugHtmlBefore($str) {
		CkMht_get_DebugHtmlBefore($this->_cPtr,$str);
	}

	function debugHtmlBefore() {
		return CkMht_debugHtmlBefore($this->_cPtr);
	}

	function put_DebugHtmlBefore($newVal) {
		CkMht_put_DebugHtmlBefore($this->_cPtr,$newVal);
	}

	function get_DebugTagCleaning() {
		return CkMht_get_DebugTagCleaning($this->_cPtr);
	}

	function put_DebugTagCleaning($newVal) {
		CkMht_put_DebugTagCleaning($this->_cPtr,$newVal);
	}

	function get_EmbedImages() {
		return CkMht_get_EmbedImages($this->_cPtr);
	}

	function put_EmbedImages($newVal) {
		CkMht_put_EmbedImages($this->_cPtr,$newVal);
	}

	function get_EmbedLocalOnly() {
		return CkMht_get_EmbedLocalOnly($this->_cPtr);
	}

	function put_EmbedLocalOnly($newVal) {
		CkMht_put_EmbedLocalOnly($this->_cPtr,$newVal);
	}

	function get_FetchFromCache() {
		return CkMht_get_FetchFromCache($this->_cPtr);
	}

	function put_FetchFromCache($newVal) {
		CkMht_put_FetchFromCache($this->_cPtr,$newVal);
	}

	function get_HeartbeatMs() {
		return CkMht_get_HeartbeatMs($this->_cPtr);
	}

	function put_HeartbeatMs($newVal) {
		CkMht_put_HeartbeatMs($this->_cPtr,$newVal);
	}

	function get_IgnoreMustRevalidate() {
		return CkMht_get_IgnoreMustRevalidate($this->_cPtr);
	}

	function put_IgnoreMustRevalidate($newVal) {
		CkMht_put_IgnoreMustRevalidate($this->_cPtr,$newVal);
	}

	function get_IgnoreNoCache() {
		return CkMht_get_IgnoreNoCache($this->_cPtr);
	}

	function put_IgnoreNoCache($newVal) {
		CkMht_put_IgnoreNoCache($this->_cPtr,$newVal);
	}

	function get_LastErrorHtml($str) {
		CkMht_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkMht_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkMht_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkMht_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkMht_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkMht_lastErrorXml($this->_cPtr);
	}

	function get_NoScripts() {
		return CkMht_get_NoScripts($this->_cPtr);
	}

	function put_NoScripts($newVal) {
		CkMht_put_NoScripts($this->_cPtr,$newVal);
	}

	function get_NtlmAuth() {
		return CkMht_get_NtlmAuth($this->_cPtr);
	}

	function put_NtlmAuth($newVal) {
		CkMht_put_NtlmAuth($this->_cPtr,$newVal);
	}

	function get_NumCacheLevels() {
		return CkMht_get_NumCacheLevels($this->_cPtr);
	}

	function put_NumCacheLevels($newVal) {
		CkMht_put_NumCacheLevels($this->_cPtr,$newVal);
	}

	function get_NumCacheRoots() {
		return CkMht_get_NumCacheRoots($this->_cPtr);
	}

	function get_PreferMHTScripts() {
		return CkMht_get_PreferMHTScripts($this->_cPtr);
	}

	function put_PreferMHTScripts($newVal) {
		CkMht_put_PreferMHTScripts($this->_cPtr,$newVal);
	}

	function get_Proxy($str) {
		CkMht_get_Proxy($this->_cPtr,$str);
	}

	function proxy() {
		return CkMht_proxy($this->_cPtr);
	}

	function put_Proxy($newVal) {
		CkMht_put_Proxy($this->_cPtr,$newVal);
	}

	function get_ProxyLogin($str) {
		CkMht_get_ProxyLogin($this->_cPtr,$str);
	}

	function proxyLogin() {
		return CkMht_proxyLogin($this->_cPtr);
	}

	function put_ProxyLogin($newVal) {
		CkMht_put_ProxyLogin($this->_cPtr,$newVal);
	}

	function get_ProxyPassword($str) {
		CkMht_get_ProxyPassword($this->_cPtr,$str);
	}

	function proxyPassword() {
		return CkMht_proxyPassword($this->_cPtr);
	}

	function put_ProxyPassword($newVal) {
		CkMht_put_ProxyPassword($this->_cPtr,$newVal);
	}

	function get_ReadTimeout() {
		return CkMht_get_ReadTimeout($this->_cPtr);
	}

	function put_ReadTimeout($newVal) {
		CkMht_put_ReadTimeout($this->_cPtr,$newVal);
	}

	function get_SocksHostname($str) {
		CkMht_get_SocksHostname($this->_cPtr,$str);
	}

	function socksHostname() {
		return CkMht_socksHostname($this->_cPtr);
	}

	function put_SocksHostname($newVal) {
		CkMht_put_SocksHostname($this->_cPtr,$newVal);
	}

	function get_SocksPassword($str) {
		CkMht_get_SocksPassword($this->_cPtr,$str);
	}

	function socksPassword() {
		return CkMht_socksPassword($this->_cPtr);
	}

	function put_SocksPassword($newVal) {
		CkMht_put_SocksPassword($this->_cPtr,$newVal);
	}

	function get_SocksPort() {
		return CkMht_get_SocksPort($this->_cPtr);
	}

	function put_SocksPort($newVal) {
		CkMht_put_SocksPort($this->_cPtr,$newVal);
	}

	function get_SocksUsername($str) {
		CkMht_get_SocksUsername($this->_cPtr,$str);
	}

	function socksUsername() {
		return CkMht_socksUsername($this->_cPtr);
	}

	function put_SocksUsername($newVal) {
		CkMht_put_SocksUsername($this->_cPtr,$newVal);
	}

	function get_SocksVersion() {
		return CkMht_get_SocksVersion($this->_cPtr);
	}

	function put_SocksVersion($newVal) {
		CkMht_put_SocksVersion($this->_cPtr,$newVal);
	}

	function get_UnpackUseRelPaths() {
		return CkMht_get_UnpackUseRelPaths($this->_cPtr);
	}

	function put_UnpackUseRelPaths($newVal) {
		CkMht_put_UnpackUseRelPaths($this->_cPtr,$newVal);
	}

	function get_UpdateCache() {
		return CkMht_get_UpdateCache($this->_cPtr);
	}

	function put_UpdateCache($newVal) {
		CkMht_put_UpdateCache($this->_cPtr,$newVal);
	}

	function get_UseCids() {
		return CkMht_get_UseCids($this->_cPtr);
	}

	function put_UseCids($newVal) {
		CkMht_put_UseCids($this->_cPtr,$newVal);
	}

	function get_UseFilename() {
		return CkMht_get_UseFilename($this->_cPtr);
	}

	function put_UseFilename($newVal) {
		CkMht_put_UseFilename($this->_cPtr,$newVal);
	}

	function get_UseIEProxy() {
		return CkMht_get_UseIEProxy($this->_cPtr);
	}

	function put_UseIEProxy($newVal) {
		CkMht_put_UseIEProxy($this->_cPtr,$newVal);
	}

	function get_UseInline() {
		return CkMht_get_UseInline($this->_cPtr);
	}

	function put_UseInline($newVal) {
		CkMht_put_UseInline($this->_cPtr,$newVal);
	}

	function get_Version($str) {
		CkMht_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkMht_version($this->_cPtr);
	}

	function get_WebSiteLogin($str) {
		CkMht_get_WebSiteLogin($this->_cPtr,$str);
	}

	function webSiteLogin() {
		return CkMht_webSiteLogin($this->_cPtr);
	}

	function put_WebSiteLogin($newVal) {
		CkMht_put_WebSiteLogin($this->_cPtr,$newVal);
	}

	function get_WebSiteLoginDomain($str) {
		CkMht_get_WebSiteLoginDomain($this->_cPtr,$str);
	}

	function webSiteLoginDomain() {
		return CkMht_webSiteLoginDomain($this->_cPtr);
	}

	function put_WebSiteLoginDomain($newVal) {
		CkMht_put_WebSiteLoginDomain($this->_cPtr,$newVal);
	}

	function get_WebSitePassword($str) {
		CkMht_get_WebSitePassword($this->_cPtr,$str);
	}

	function webSitePassword() {
		return CkMht_webSitePassword($this->_cPtr);
	}

	function put_WebSitePassword($newVal) {
		CkMht_put_WebSitePassword($this->_cPtr,$newVal);
	}

	function get_DebugLogFilePath($str) {
		CkMht_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkMht_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkMht_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkMht_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkMht_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function AddCacheRoot($dir) {
		CkMht_AddCacheRoot($this->_cPtr,$dir);
	}

	function AddCustomHeader($name,$value) {
		CkMht_AddCustomHeader($this->_cPtr,$name,$value);
	}

	function AddExternalStyleSheet($url) {
		CkMht_AddExternalStyleSheet($this->_cPtr,$url);
	}

	function ClearCustomHeaders() {
		CkMht_ClearCustomHeaders($this->_cPtr);
	}

	function ExcludeImagesMatching($pattern) {
		CkMht_ExcludeImagesMatching($this->_cPtr,$pattern);
	}

	function GetAndSaveEML($url,$emlPath) {
		return CkMht_GetAndSaveEML($this->_cPtr,$url,$emlPath);
	}

	function GetAndSaveMHT($url,$mhtPath) {
		return CkMht_GetAndSaveMHT($this->_cPtr,$url,$mhtPath);
	}

	function GetAndZipEML($url,$zipEntryFilename,$zipPath) {
		return CkMht_GetAndZipEML($this->_cPtr,$url,$zipEntryFilename,$zipPath);
	}

	function GetAndZipMHT($url,$zipEntryFilename,$zipPath) {
		return CkMht_GetAndZipMHT($this->_cPtr,$url,$zipEntryFilename,$zipPath);
	}

	function getCacheRoot($index) {
		return CkMht_getCacheRoot($this->_cPtr,$index);
	}

	function cacheRoot($index) {
		return CkMht_cacheRoot($this->_cPtr,$index);
	}

	function getEML($url) {
		return CkMht_getEML($this->_cPtr,$url);
	}

	function eML($url) {
		return CkMht_eML($this->_cPtr,$url);
	}

	function GetEmail($url) {
		$r=CkMht_GetEmail($this->_cPtr,$url);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkEmail($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function getMHT($url) {
		return CkMht_getMHT($this->_cPtr,$url);
	}

	function mHT($url) {
		return CkMht_mHT($this->_cPtr,$url);
	}

	function GetMime($url) {
		$r=CkMht_GetMime($this->_cPtr,$url);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkMime($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function htmlToEML($htmlText) {
		return CkMht_htmlToEML($this->_cPtr,$htmlText);
	}

	function HtmlToEMLFile($html,$emlPath) {
		return CkMht_HtmlToEMLFile($this->_cPtr,$html,$emlPath);
	}

	function HtmlToEmail($htmlText) {
		$r=CkMht_HtmlToEmail($this->_cPtr,$htmlText);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkEmail($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function htmlToMHT($htmlText) {
		return CkMht_htmlToMHT($this->_cPtr,$htmlText);
	}

	function HtmlToMHTFile($html,$mhtPath) {
		return CkMht_HtmlToMHTFile($this->_cPtr,$html,$mhtPath);
	}

	function IsUnlocked() {
		return CkMht_IsUnlocked($this->_cPtr);
	}

	function RemoveCustomHeader($name) {
		CkMht_RemoveCustomHeader($this->_cPtr,$name);
	}

	function RestoreDefaults() {
		CkMht_RestoreDefaults($this->_cPtr);
	}

	function SaveLastError($path) {
		return CkMht_SaveLastError($this->_cPtr,$path);
	}

	function UnlockComponent($unlockCode) {
		return CkMht_UnlockComponent($this->_cPtr,$unlockCode);
	}

	function UnpackMHT($mhtPath,$unpackDir,$htmlFilename,$partsSubDir) {
		return CkMht_UnpackMHT($this->_cPtr,$mhtPath,$unpackDir,$htmlFilename,$partsSubDir);
	}

	function UnpackMHTString($mhtContents,$unpackDir,$htmlFilename,$partsSubDir) {
		return CkMht_UnpackMHTString($this->_cPtr,$mhtContents,$unpackDir,$htmlFilename,$partsSubDir);
	}
}

class CkHttp {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkHttp') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkHttp();
	}

	function get_Utf8() {
		return CkHttp_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkHttp_put_Utf8($this->_cPtr,$b);
	}

	function get_Accept($str) {
		CkHttp_get_Accept($this->_cPtr,$str);
	}

	function ck_accept() {
		return CkHttp_ck_accept($this->_cPtr);
	}

	function put_Accept($newVal) {
		CkHttp_put_Accept($this->_cPtr,$newVal);
	}

	function get_AcceptCharset($str) {
		CkHttp_get_AcceptCharset($this->_cPtr,$str);
	}

	function acceptCharset() {
		return CkHttp_acceptCharset($this->_cPtr);
	}

	function put_AcceptCharset($newVal) {
		CkHttp_put_AcceptCharset($this->_cPtr,$newVal);
	}

	function get_AcceptLanguage($str) {
		CkHttp_get_AcceptLanguage($this->_cPtr,$str);
	}

	function acceptLanguage() {
		return CkHttp_acceptLanguage($this->_cPtr);
	}

	function put_AcceptLanguage($newVal) {
		CkHttp_put_AcceptLanguage($this->_cPtr,$newVal);
	}

	function get_AllowGzip() {
		return CkHttp_get_AllowGzip($this->_cPtr);
	}

	function put_AllowGzip($newVal) {
		CkHttp_put_AllowGzip($this->_cPtr,$newVal);
	}

	function get_AutoAddHostHeader() {
		return CkHttp_get_AutoAddHostHeader($this->_cPtr);
	}

	function put_AutoAddHostHeader($newVal) {
		CkHttp_put_AutoAddHostHeader($this->_cPtr,$newVal);
	}

	function get_AwsAccessKey($str) {
		CkHttp_get_AwsAccessKey($this->_cPtr,$str);
	}

	function awsAccessKey() {
		return CkHttp_awsAccessKey($this->_cPtr);
	}

	function put_AwsAccessKey($newVal) {
		CkHttp_put_AwsAccessKey($this->_cPtr,$newVal);
	}

	function get_AwsSecretKey($str) {
		CkHttp_get_AwsSecretKey($this->_cPtr,$str);
	}

	function awsSecretKey() {
		return CkHttp_awsSecretKey($this->_cPtr);
	}

	function put_AwsSecretKey($newVal) {
		CkHttp_put_AwsSecretKey($this->_cPtr,$newVal);
	}

	function get_AwsSubResources($str) {
		CkHttp_get_AwsSubResources($this->_cPtr,$str);
	}

	function awsSubResources() {
		return CkHttp_awsSubResources($this->_cPtr);
	}

	function put_AwsSubResources($newVal) {
		CkHttp_put_AwsSubResources($this->_cPtr,$newVal);
	}

	function get_BgLastErrorText($str) {
		CkHttp_get_BgLastErrorText($this->_cPtr,$str);
	}

	function bgLastErrorText() {
		return CkHttp_bgLastErrorText($this->_cPtr);
	}

	function get_BgPercentDone() {
		return CkHttp_get_BgPercentDone($this->_cPtr);
	}

	function get_BgResultData($outBytes) {
		CkHttp_get_BgResultData($this->_cPtr,$outBytes);
	}

	function get_BgResultInt() {
		return CkHttp_get_BgResultInt($this->_cPtr);
	}

	function get_BgResultString($str) {
		CkHttp_get_BgResultString($this->_cPtr,$str);
	}

	function bgResultString() {
		return CkHttp_bgResultString($this->_cPtr);
	}

	function get_BgTaskFinished() {
		return CkHttp_get_BgTaskFinished($this->_cPtr);
	}

	function get_BgTaskRunning() {
		return CkHttp_get_BgTaskRunning($this->_cPtr);
	}

	function get_BgTaskSuccess() {
		return CkHttp_get_BgTaskSuccess($this->_cPtr);
	}

	function get_ClientIpAddress($str) {
		CkHttp_get_ClientIpAddress($this->_cPtr,$str);
	}

	function clientIpAddress() {
		return CkHttp_clientIpAddress($this->_cPtr);
	}

	function put_ClientIpAddress($newVal) {
		CkHttp_put_ClientIpAddress($this->_cPtr,$newVal);
	}

	function get_ConnectTimeout() {
		return CkHttp_get_ConnectTimeout($this->_cPtr);
	}

	function put_ConnectTimeout($newVal) {
		CkHttp_put_ConnectTimeout($this->_cPtr,$newVal);
	}

	function get_Connection($str) {
		CkHttp_get_Connection($this->_cPtr,$str);
	}

	function connection() {
		return CkHttp_connection($this->_cPtr);
	}

	function put_Connection($newVal) {
		CkHttp_put_Connection($this->_cPtr,$newVal);
	}

	function get_CookieDir($str) {
		CkHttp_get_CookieDir($this->_cPtr,$str);
	}

	function cookieDir() {
		return CkHttp_cookieDir($this->_cPtr);
	}

	function put_CookieDir($newVal) {
		CkHttp_put_CookieDir($this->_cPtr,$newVal);
	}

	function get_DefaultFreshPeriod() {
		return CkHttp_get_DefaultFreshPeriod($this->_cPtr);
	}

	function put_DefaultFreshPeriod($newVal) {
		CkHttp_put_DefaultFreshPeriod($this->_cPtr,$newVal);
	}

	function get_DigestAuth() {
		return CkHttp_get_DigestAuth($this->_cPtr);
	}

	function put_DigestAuth($newVal) {
		CkHttp_put_DigestAuth($this->_cPtr,$newVal);
	}

	function get_EventLogCount() {
		return CkHttp_get_EventLogCount($this->_cPtr);
	}

	function get_FetchFromCache() {
		return CkHttp_get_FetchFromCache($this->_cPtr);
	}

	function put_FetchFromCache($newVal) {
		CkHttp_put_FetchFromCache($this->_cPtr,$newVal);
	}

	function get_FinalRedirectUrl($str) {
		CkHttp_get_FinalRedirectUrl($this->_cPtr,$str);
	}

	function finalRedirectUrl() {
		return CkHttp_finalRedirectUrl($this->_cPtr);
	}

	function get_FollowRedirects() {
		return CkHttp_get_FollowRedirects($this->_cPtr);
	}

	function put_FollowRedirects($newVal) {
		CkHttp_put_FollowRedirects($this->_cPtr,$newVal);
	}

	function get_FreshnessAlgorithm() {
		return CkHttp_get_FreshnessAlgorithm($this->_cPtr);
	}

	function put_FreshnessAlgorithm($newVal) {
		CkHttp_put_FreshnessAlgorithm($this->_cPtr,$newVal);
	}

	function get_HeartbeatMs() {
		return CkHttp_get_HeartbeatMs($this->_cPtr);
	}

	function put_HeartbeatMs($newVal) {
		CkHttp_put_HeartbeatMs($this->_cPtr,$newVal);
	}

	function get_IgnoreMustRevalidate() {
		return CkHttp_get_IgnoreMustRevalidate($this->_cPtr);
	}

	function put_IgnoreMustRevalidate($newVal) {
		CkHttp_put_IgnoreMustRevalidate($this->_cPtr,$newVal);
	}

	function get_IgnoreNoCache() {
		return CkHttp_get_IgnoreNoCache($this->_cPtr);
	}

	function put_IgnoreNoCache($newVal) {
		CkHttp_put_IgnoreNoCache($this->_cPtr,$newVal);
	}

	function get_KeepEventLog() {
		return CkHttp_get_KeepEventLog($this->_cPtr);
	}

	function put_KeepEventLog($newVal) {
		CkHttp_put_KeepEventLog($this->_cPtr,$newVal);
	}

	function get_LMFactor() {
		return CkHttp_get_LMFactor($this->_cPtr);
	}

	function put_LMFactor($newVal) {
		CkHttp_put_LMFactor($this->_cPtr,$newVal);
	}

	function get_LastContentType($str) {
		CkHttp_get_LastContentType($this->_cPtr,$str);
	}

	function lastContentType() {
		return CkHttp_lastContentType($this->_cPtr);
	}

	function get_LastErrorHtml($str) {
		CkHttp_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkHttp_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkHttp_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkHttp_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkHttp_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkHttp_lastErrorXml($this->_cPtr);
	}

	function get_LastHeader($str) {
		CkHttp_get_LastHeader($this->_cPtr,$str);
	}

	function lastHeader() {
		return CkHttp_lastHeader($this->_cPtr);
	}

	function get_LastModDate($str) {
		CkHttp_get_LastModDate($this->_cPtr,$str);
	}

	function lastModDate() {
		return CkHttp_lastModDate($this->_cPtr);
	}

	function get_LastResponseHeader($str) {
		CkHttp_get_LastResponseHeader($this->_cPtr,$str);
	}

	function lastResponseHeader() {
		return CkHttp_lastResponseHeader($this->_cPtr);
	}

	function get_LastStatus() {
		return CkHttp_get_LastStatus($this->_cPtr);
	}

	function get_Login($str) {
		CkHttp_get_Login($this->_cPtr,$str);
	}

	function login() {
		return CkHttp_login($this->_cPtr);
	}

	function put_Login($newVal) {
		CkHttp_put_Login($this->_cPtr,$newVal);
	}

	function get_LoginDomain($str) {
		CkHttp_get_LoginDomain($this->_cPtr,$str);
	}

	function loginDomain() {
		return CkHttp_loginDomain($this->_cPtr);
	}

	function put_LoginDomain($newVal) {
		CkHttp_put_LoginDomain($this->_cPtr,$newVal);
	}

	function get_MaxConnections() {
		return CkHttp_get_MaxConnections($this->_cPtr);
	}

	function put_MaxConnections($newVal) {
		CkHttp_put_MaxConnections($this->_cPtr,$newVal);
	}

	function get_MaxFreshPeriod() {
		return CkHttp_get_MaxFreshPeriod($this->_cPtr);
	}

	function put_MaxFreshPeriod($newVal) {
		CkHttp_put_MaxFreshPeriod($this->_cPtr,$newVal);
	}

	function get_MaxResponseSize() {
		return CkHttp_get_MaxResponseSize($this->_cPtr);
	}

	function put_MaxResponseSize($newVal) {
		CkHttp_put_MaxResponseSize($this->_cPtr,$newVal);
	}

	function get_MaxUrlLen() {
		return CkHttp_get_MaxUrlLen($this->_cPtr);
	}

	function put_MaxUrlLen($newVal) {
		CkHttp_put_MaxUrlLen($this->_cPtr,$newVal);
	}

	function get_MimicFireFox() {
		return CkHttp_get_MimicFireFox($this->_cPtr);
	}

	function put_MimicFireFox($newVal) {
		CkHttp_put_MimicFireFox($this->_cPtr,$newVal);
	}

	function get_MimicIE() {
		return CkHttp_get_MimicIE($this->_cPtr);
	}

	function put_MimicIE($newVal) {
		CkHttp_put_MimicIE($this->_cPtr,$newVal);
	}

	function get_MinFreshPeriod() {
		return CkHttp_get_MinFreshPeriod($this->_cPtr);
	}

	function put_MinFreshPeriod($newVal) {
		CkHttp_put_MinFreshPeriod($this->_cPtr,$newVal);
	}

	function get_NegotiateAuth() {
		return CkHttp_get_NegotiateAuth($this->_cPtr);
	}

	function put_NegotiateAuth($newVal) {
		CkHttp_put_NegotiateAuth($this->_cPtr,$newVal);
	}

	function get_NtlmAuth() {
		return CkHttp_get_NtlmAuth($this->_cPtr);
	}

	function put_NtlmAuth($newVal) {
		CkHttp_put_NtlmAuth($this->_cPtr,$newVal);
	}

	function get_NumCacheLevels() {
		return CkHttp_get_NumCacheLevels($this->_cPtr);
	}

	function put_NumCacheLevels($newVal) {
		CkHttp_put_NumCacheLevels($this->_cPtr,$newVal);
	}

	function get_NumCacheRoots() {
		return CkHttp_get_NumCacheRoots($this->_cPtr);
	}

	function get_OAuth1() {
		return CkHttp_get_OAuth1($this->_cPtr);
	}

	function put_OAuth1($newVal) {
		CkHttp_put_OAuth1($this->_cPtr,$newVal);
	}

	function get_OAuthConsumerKey($str) {
		CkHttp_get_OAuthConsumerKey($this->_cPtr,$str);
	}

	function oAuthConsumerKey() {
		return CkHttp_oAuthConsumerKey($this->_cPtr);
	}

	function put_OAuthConsumerKey($newVal) {
		CkHttp_put_OAuthConsumerKey($this->_cPtr,$newVal);
	}

	function get_OAuthConsumerSecret($str) {
		CkHttp_get_OAuthConsumerSecret($this->_cPtr,$str);
	}

	function oAuthConsumerSecret() {
		return CkHttp_oAuthConsumerSecret($this->_cPtr);
	}

	function put_OAuthConsumerSecret($newVal) {
		CkHttp_put_OAuthConsumerSecret($this->_cPtr,$newVal);
	}

	function get_OAuthRealm($str) {
		CkHttp_get_OAuthRealm($this->_cPtr,$str);
	}

	function oAuthRealm() {
		return CkHttp_oAuthRealm($this->_cPtr);
	}

	function put_OAuthRealm($newVal) {
		CkHttp_put_OAuthRealm($this->_cPtr,$newVal);
	}

	function get_OAuthSigMethod($str) {
		CkHttp_get_OAuthSigMethod($this->_cPtr,$str);
	}

	function oAuthSigMethod() {
		return CkHttp_oAuthSigMethod($this->_cPtr);
	}

	function put_OAuthSigMethod($newVal) {
		CkHttp_put_OAuthSigMethod($this->_cPtr,$newVal);
	}

	function get_OAuthToken($str) {
		CkHttp_get_OAuthToken($this->_cPtr,$str);
	}

	function oAuthToken() {
		return CkHttp_oAuthToken($this->_cPtr);
	}

	function put_OAuthToken($newVal) {
		CkHttp_put_OAuthToken($this->_cPtr,$newVal);
	}

	function get_OAuthTokenSecret($str) {
		CkHttp_get_OAuthTokenSecret($this->_cPtr,$str);
	}

	function oAuthTokenSecret() {
		return CkHttp_oAuthTokenSecret($this->_cPtr);
	}

	function put_OAuthTokenSecret($newVal) {
		CkHttp_put_OAuthTokenSecret($this->_cPtr,$newVal);
	}

	function get_OAuthVerifier($str) {
		CkHttp_get_OAuthVerifier($this->_cPtr,$str);
	}

	function oAuthVerifier() {
		return CkHttp_oAuthVerifier($this->_cPtr);
	}

	function put_OAuthVerifier($newVal) {
		CkHttp_put_OAuthVerifier($this->_cPtr,$newVal);
	}

	function get_Password($str) {
		CkHttp_get_Password($this->_cPtr,$str);
	}

	function password() {
		return CkHttp_password($this->_cPtr);
	}

	function put_Password($newVal) {
		CkHttp_put_Password($this->_cPtr,$newVal);
	}

	function get_ProxyAuthMethod($str) {
		CkHttp_get_ProxyAuthMethod($this->_cPtr,$str);
	}

	function proxyAuthMethod() {
		return CkHttp_proxyAuthMethod($this->_cPtr);
	}

	function put_ProxyAuthMethod($newVal) {
		CkHttp_put_ProxyAuthMethod($this->_cPtr,$newVal);
	}

	function get_ProxyDomain($str) {
		CkHttp_get_ProxyDomain($this->_cPtr,$str);
	}

	function proxyDomain() {
		return CkHttp_proxyDomain($this->_cPtr);
	}

	function put_ProxyDomain($newVal) {
		CkHttp_put_ProxyDomain($this->_cPtr,$newVal);
	}

	function get_ProxyLogin($str) {
		CkHttp_get_ProxyLogin($this->_cPtr,$str);
	}

	function proxyLogin() {
		return CkHttp_proxyLogin($this->_cPtr);
	}

	function put_ProxyLogin($newVal) {
		CkHttp_put_ProxyLogin($this->_cPtr,$newVal);
	}

	function get_ProxyLoginDomain($str) {
		CkHttp_get_ProxyLoginDomain($this->_cPtr,$str);
	}

	function proxyLoginDomain() {
		return CkHttp_proxyLoginDomain($this->_cPtr);
	}

	function put_ProxyLoginDomain($newVal) {
		CkHttp_put_ProxyLoginDomain($this->_cPtr,$newVal);
	}

	function get_ProxyPassword($str) {
		CkHttp_get_ProxyPassword($this->_cPtr,$str);
	}

	function proxyPassword() {
		return CkHttp_proxyPassword($this->_cPtr);
	}

	function put_ProxyPassword($newVal) {
		CkHttp_put_ProxyPassword($this->_cPtr,$newVal);
	}

	function get_ProxyPort() {
		return CkHttp_get_ProxyPort($this->_cPtr);
	}

	function put_ProxyPort($newVal) {
		CkHttp_put_ProxyPort($this->_cPtr,$newVal);
	}

	function get_ReadTimeout() {
		return CkHttp_get_ReadTimeout($this->_cPtr);
	}

	function put_ReadTimeout($newVal) {
		CkHttp_put_ReadTimeout($this->_cPtr,$newVal);
	}

	function get_RedirectVerb($str) {
		CkHttp_get_RedirectVerb($this->_cPtr,$str);
	}

	function redirectVerb() {
		return CkHttp_redirectVerb($this->_cPtr);
	}

	function put_RedirectVerb($newVal) {
		CkHttp_put_RedirectVerb($this->_cPtr,$newVal);
	}

	function get_Referer($str) {
		CkHttp_get_Referer($this->_cPtr,$str);
	}

	function referer() {
		return CkHttp_referer($this->_cPtr);
	}

	function put_Referer($newVal) {
		CkHttp_put_Referer($this->_cPtr,$newVal);
	}

	function get_RequiredContentType($str) {
		CkHttp_get_RequiredContentType($this->_cPtr,$str);
	}

	function requiredContentType() {
		return CkHttp_requiredContentType($this->_cPtr);
	}

	function put_RequiredContentType($newVal) {
		CkHttp_put_RequiredContentType($this->_cPtr,$newVal);
	}

	function get_S3Ssl() {
		return CkHttp_get_S3Ssl($this->_cPtr);
	}

	function put_S3Ssl($newVal) {
		CkHttp_put_S3Ssl($this->_cPtr,$newVal);
	}

	function get_SaveCookies() {
		return CkHttp_get_SaveCookies($this->_cPtr);
	}

	function put_SaveCookies($newVal) {
		CkHttp_put_SaveCookies($this->_cPtr,$newVal);
	}

	function get_SendBufferSize() {
		return CkHttp_get_SendBufferSize($this->_cPtr);
	}

	function put_SendBufferSize($newVal) {
		CkHttp_put_SendBufferSize($this->_cPtr,$newVal);
	}

	function get_SendCookies() {
		return CkHttp_get_SendCookies($this->_cPtr);
	}

	function put_SendCookies($newVal) {
		CkHttp_put_SendCookies($this->_cPtr,$newVal);
	}

	function get_SessionLogFilename($str) {
		CkHttp_get_SessionLogFilename($this->_cPtr,$str);
	}

	function sessionLogFilename() {
		return CkHttp_sessionLogFilename($this->_cPtr);
	}

	function put_SessionLogFilename($newVal) {
		CkHttp_put_SessionLogFilename($this->_cPtr,$newVal);
	}

	function get_SoRcvBuf() {
		return CkHttp_get_SoRcvBuf($this->_cPtr);
	}

	function put_SoRcvBuf($newVal) {
		CkHttp_put_SoRcvBuf($this->_cPtr,$newVal);
	}

	function get_SoSndBuf() {
		return CkHttp_get_SoSndBuf($this->_cPtr);
	}

	function put_SoSndBuf($newVal) {
		CkHttp_put_SoSndBuf($this->_cPtr,$newVal);
	}

	function get_SocksHostname($str) {
		CkHttp_get_SocksHostname($this->_cPtr,$str);
	}

	function socksHostname() {
		return CkHttp_socksHostname($this->_cPtr);
	}

	function put_SocksHostname($newVal) {
		CkHttp_put_SocksHostname($this->_cPtr,$newVal);
	}

	function get_SocksPassword($str) {
		CkHttp_get_SocksPassword($this->_cPtr,$str);
	}

	function socksPassword() {
		return CkHttp_socksPassword($this->_cPtr);
	}

	function put_SocksPassword($newVal) {
		CkHttp_put_SocksPassword($this->_cPtr,$newVal);
	}

	function get_SocksPort() {
		return CkHttp_get_SocksPort($this->_cPtr);
	}

	function put_SocksPort($newVal) {
		CkHttp_put_SocksPort($this->_cPtr,$newVal);
	}

	function get_SocksUsername($str) {
		CkHttp_get_SocksUsername($this->_cPtr,$str);
	}

	function socksUsername() {
		return CkHttp_socksUsername($this->_cPtr);
	}

	function put_SocksUsername($newVal) {
		CkHttp_put_SocksUsername($this->_cPtr,$newVal);
	}

	function get_SocksVersion() {
		return CkHttp_get_SocksVersion($this->_cPtr);
	}

	function put_SocksVersion($newVal) {
		CkHttp_put_SocksVersion($this->_cPtr,$newVal);
	}

	function get_SslProtocol($str) {
		CkHttp_get_SslProtocol($this->_cPtr,$str);
	}

	function sslProtocol() {
		return CkHttp_sslProtocol($this->_cPtr);
	}

	function put_SslProtocol($newVal) {
		CkHttp_put_SslProtocol($this->_cPtr,$newVal);
	}

	function get_UpdateCache() {
		return CkHttp_get_UpdateCache($this->_cPtr);
	}

	function put_UpdateCache($newVal) {
		CkHttp_put_UpdateCache($this->_cPtr,$newVal);
	}

	function get_UseBgThread() {
		return CkHttp_get_UseBgThread($this->_cPtr);
	}

	function put_UseBgThread($newVal) {
		CkHttp_put_UseBgThread($this->_cPtr,$newVal);
	}

	function get_UseIEProxy() {
		return CkHttp_get_UseIEProxy($this->_cPtr);
	}

	function put_UseIEProxy($newVal) {
		CkHttp_put_UseIEProxy($this->_cPtr,$newVal);
	}

	function get_UserAgent($str) {
		CkHttp_get_UserAgent($this->_cPtr,$str);
	}

	function userAgent() {
		return CkHttp_userAgent($this->_cPtr);
	}

	function put_UserAgent($newVal) {
		CkHttp_put_UserAgent($this->_cPtr,$newVal);
	}

	function get_Version($str) {
		CkHttp_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkHttp_version($this->_cPtr);
	}

	function get_WasRedirected() {
		return CkHttp_get_WasRedirected($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkHttp_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkHttp_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkHttp_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkHttp_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkHttp_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function AddCacheRoot($dir) {
		CkHttp_AddCacheRoot($this->_cPtr,$dir);
	}

	function AddQuickHeader($name,$value) {
		return CkHttp_AddQuickHeader($this->_cPtr,$name,$value);
	}

	function BgResponseObject() {
		$r=CkHttp_BgResponseObject($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkHttpResponse($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function BgTaskAbort() {
		CkHttp_BgTaskAbort($this->_cPtr);
	}

	function ClearBgEventLog() {
		CkHttp_ClearBgEventLog($this->_cPtr);
	}

	function ClearInMemoryCookies() {
		CkHttp_ClearInMemoryCookies($this->_cPtr);
	}

	function CloseAllConnections() {
		return CkHttp_CloseAllConnections($this->_cPtr);
	}

	function Download($url,$saveToPath) {
		return CkHttp_Download($this->_cPtr,$url,$saveToPath);
	}

	function DownloadAppend($url,$appendToPath) {
		return CkHttp_DownloadAppend($this->_cPtr,$url,$appendToPath);
	}

	function downloadHash($url,$hashAlgorithm,$encoding) {
		return CkHttp_downloadHash($this->_cPtr,$url,$hashAlgorithm,$encoding);
	}

	function eventLogName($index) {
		return CkHttp_eventLogName($this->_cPtr,$index);
	}

	function eventLogValue($index) {
		return CkHttp_eventLogValue($this->_cPtr,$index);
	}

	function extractMetaRefreshUrl($html) {
		return CkHttp_extractMetaRefreshUrl($this->_cPtr,$html);
	}

	function genTimeStamp() {
		return CkHttp_genTimeStamp($this->_cPtr);
	}

	function getCacheRoot($index) {
		return CkHttp_getCacheRoot($this->_cPtr,$index);
	}

	function cacheRoot($index) {
		return CkHttp_cacheRoot($this->_cPtr,$index);
	}

	function getCookieXml($domain) {
		return CkHttp_getCookieXml($this->_cPtr,$domain);
	}

	function cookieXml($domain) {
		return CkHttp_cookieXml($this->_cPtr,$domain);
	}

	function getDomain($url) {
		return CkHttp_getDomain($this->_cPtr,$url);
	}

	function domain($url) {
		return CkHttp_domain($this->_cPtr,$url);
	}

	function GetHead($url) {
		$r=CkHttp_GetHead($this->_cPtr,$url);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkHttpResponse($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function getRequestHeader($name) {
		return CkHttp_getRequestHeader($this->_cPtr,$name);
	}

	function requestHeader($name) {
		return CkHttp_requestHeader($this->_cPtr,$name);
	}

	function GetServerSslCert($domain,$port) {
		$r=CkHttp_GetServerSslCert($this->_cPtr,$domain,$port);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkCert($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function getUrlPath($url) {
		return CkHttp_getUrlPath($this->_cPtr,$url);
	}

	function urlPath($url) {
		return CkHttp_urlPath($this->_cPtr,$url);
	}

	function HasRequestHeader($name) {
		return CkHttp_HasRequestHeader($this->_cPtr,$name);
	}

	function IsUnlocked() {
		return CkHttp_IsUnlocked($this->_cPtr);
	}

	function postBinary($url,$byteData,$contentType,$md5,$gzip) {
		return CkHttp_postBinary($this->_cPtr,$url,$byteData,$contentType,$md5,$gzip);
	}

	function PostJson($url,$jsonText) {
		$r=CkHttp_PostJson($this->_cPtr,$url,$jsonText);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkHttpResponse($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function PostJson2($url,$contentType,$jsonText) {
		$r=CkHttp_PostJson2($this->_cPtr,$url,$contentType,$jsonText);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkHttpResponse($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function PostMime($url,$mime) {
		$r=CkHttp_PostMime($this->_cPtr,$url,$mime);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkHttpResponse($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function PostUrlEncoded($url,$req) {
		$r=CkHttp_PostUrlEncoded($this->_cPtr,$url,$req);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkHttpResponse($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function PostXml($url,$xmlDoc,$charset) {
		$r=CkHttp_PostXml($this->_cPtr,$url,$xmlDoc,$charset);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkHttpResponse($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function putBinary($url,$byteData,$contentType,$md5,$gzip) {
		return CkHttp_putBinary($this->_cPtr,$url,$byteData,$contentType,$md5,$gzip);
	}

	function putText($url,$textData,$charset,$contentType,$md5,$gzip) {
		return CkHttp_putText($this->_cPtr,$url,$textData,$charset,$contentType,$md5,$gzip);
	}

	function quickDeleteStr($url) {
		return CkHttp_quickDeleteStr($this->_cPtr,$url);
	}

	function QuickGet($url,$outData) {
		return CkHttp_QuickGet($this->_cPtr,$url,$outData);
	}

	function QuickGetObj($url) {
		$r=CkHttp_QuickGetObj($this->_cPtr,$url);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkHttpResponse($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function quickGetStr($url) {
		return CkHttp_quickGetStr($this->_cPtr,$url);
	}

	function quickPutStr($url) {
		return CkHttp_quickPutStr($this->_cPtr,$url);
	}

	function RemoveQuickHeader($name) {
		return CkHttp_RemoveQuickHeader($this->_cPtr,$name);
	}

	function RemoveRequestHeader($name) {
		CkHttp_RemoveRequestHeader($this->_cPtr,$name);
	}

	function renderGet($url) {
		return CkHttp_renderGet($this->_cPtr,$url);
	}

	function ResumeDownload($url,$appendToPath) {
		return CkHttp_ResumeDownload($this->_cPtr,$url,$appendToPath);
	}

	function S3_CreateBucket($bucketName) {
		return CkHttp_S3_CreateBucket($this->_cPtr,$bucketName);
	}

	function S3_DeleteBucket($bucketName) {
		return CkHttp_S3_DeleteBucket($this->_cPtr,$bucketName);
	}

	function S3_DeleteObject($bucketName,$objectName) {
		return CkHttp_S3_DeleteObject($this->_cPtr,$bucketName,$objectName);
	}

	function S3_DownloadBytes($bucketName,$objectName,$outBytes) {
		return CkHttp_S3_DownloadBytes($this->_cPtr,$bucketName,$objectName,$outBytes);
	}

	function S3_DownloadFile($bucketName,$objectName,$localFilePath) {
		return CkHttp_S3_DownloadFile($this->_cPtr,$bucketName,$objectName,$localFilePath);
	}

	function s3_DownloadString($bucketName,$objectName,$charset) {
		return CkHttp_s3_DownloadString($this->_cPtr,$bucketName,$objectName,$charset);
	}

	function s3_ListBucketObjects($bucketName) {
		return CkHttp_s3_ListBucketObjects($this->_cPtr,$bucketName);
	}

	function s3_ListBuckets() {
		return CkHttp_s3_ListBuckets($this->_cPtr);
	}

	function S3_UploadBytes($objectContent,$contentType,$bucketName,$objectName) {
		return CkHttp_S3_UploadBytes($this->_cPtr,$objectContent,$contentType,$bucketName,$objectName);
	}

	function S3_UploadFile($localFilePath,$contentType,$bucketName,$ObjectName) {
		return CkHttp_S3_UploadFile($this->_cPtr,$localFilePath,$contentType,$bucketName,$ObjectName);
	}

	function S3_UploadString($objectContent,$charset,$contentType,$bucketName,$ObjectName) {
		return CkHttp_S3_UploadString($this->_cPtr,$objectContent,$charset,$contentType,$bucketName,$ObjectName);
	}

	function SaveLastError($path) {
		return CkHttp_SaveLastError($this->_cPtr,$path);
	}

	function SetCookieXml($domain,$cookieXml) {
		return CkHttp_SetCookieXml($this->_cPtr,$domain,$cookieXml);
	}

	function SetRequestHeader($name,$value) {
		CkHttp_SetRequestHeader($this->_cPtr,$name,$value);
	}

	function SetSslClientCert($cert) {
		return CkHttp_SetSslClientCert($this->_cPtr,$cert);
	}

	function SetSslClientCertPem($pemDataOrPath,$pemPassword) {
		return CkHttp_SetSslClientCertPem($this->_cPtr,$pemDataOrPath,$pemPassword);
	}

	function SetSslClientCertPfx($pfxPath,$pfxPassword) {
		return CkHttp_SetSslClientCertPfx($this->_cPtr,$pfxPath,$pfxPassword);
	}

	function SleepMs($millisec) {
		CkHttp_SleepMs($this->_cPtr,$millisec);
	}

	function SynchronousRequest($domain,$port,$ssl,$req) {
		$r=CkHttp_SynchronousRequest($this->_cPtr,$domain,$port,$ssl,$req);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkHttpResponse($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function UnlockComponent($unlockCode) {
		return CkHttp_UnlockComponent($this->_cPtr,$unlockCode);
	}

	function urlDecode($str) {
		return CkHttp_urlDecode($this->_cPtr,$str);
	}

	function urlEncode($str) {
		return CkHttp_urlEncode($this->_cPtr,$str);
	}

	function xmlRpc($urlEndpoint,$xmlIn) {
		return CkHttp_xmlRpc($this->_cPtr,$urlEndpoint,$xmlIn);
	}

	function xmlRpcPut($urlEndpoint,$xmlIn) {
		return CkHttp_xmlRpcPut($this->_cPtr,$urlEndpoint,$xmlIn);
	}
}

class CkHttpRequest {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkHttpRequest') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkHttpRequest();
	}

	function get_Utf8() {
		return CkHttpRequest_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkHttpRequest_put_Utf8($this->_cPtr,$b);
	}

	function get_Charset($str) {
		CkHttpRequest_get_Charset($this->_cPtr,$str);
	}

	function charset() {
		return CkHttpRequest_charset($this->_cPtr);
	}

	function put_Charset($newVal) {
		CkHttpRequest_put_Charset($this->_cPtr,$newVal);
	}

	function get_ContentType($str) {
		CkHttpRequest_get_ContentType($this->_cPtr,$str);
	}

	function contentType() {
		return CkHttpRequest_contentType($this->_cPtr);
	}

	function put_ContentType($newVal) {
		CkHttpRequest_put_ContentType($this->_cPtr,$newVal);
	}

	function get_EntireHeader($str) {
		CkHttpRequest_get_EntireHeader($this->_cPtr,$str);
	}

	function entireHeader() {
		return CkHttpRequest_entireHeader($this->_cPtr);
	}

	function put_EntireHeader($newVal) {
		CkHttpRequest_put_EntireHeader($this->_cPtr,$newVal);
	}

	function get_HttpVerb($str) {
		CkHttpRequest_get_HttpVerb($this->_cPtr,$str);
	}

	function httpVerb() {
		return CkHttpRequest_httpVerb($this->_cPtr);
	}

	function put_HttpVerb($newVal) {
		CkHttpRequest_put_HttpVerb($this->_cPtr,$newVal);
	}

	function get_HttpVersion($str) {
		CkHttpRequest_get_HttpVersion($this->_cPtr,$str);
	}

	function httpVersion() {
		return CkHttpRequest_httpVersion($this->_cPtr);
	}

	function put_HttpVersion($newVal) {
		CkHttpRequest_put_HttpVersion($this->_cPtr,$newVal);
	}

	function get_LastErrorHtml($str) {
		CkHttpRequest_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkHttpRequest_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkHttpRequest_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkHttpRequest_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkHttpRequest_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkHttpRequest_lastErrorXml($this->_cPtr);
	}

	function get_NumHeaderFields() {
		return CkHttpRequest_get_NumHeaderFields($this->_cPtr);
	}

	function get_NumParams() {
		return CkHttpRequest_get_NumParams($this->_cPtr);
	}

	function get_Path($str) {
		CkHttpRequest_get_Path($this->_cPtr,$str);
	}

	function path() {
		return CkHttpRequest_path($this->_cPtr);
	}

	function put_Path($newVal) {
		CkHttpRequest_put_Path($this->_cPtr,$newVal);
	}

	function get_SendCharset() {
		return CkHttpRequest_get_SendCharset($this->_cPtr);
	}

	function put_SendCharset($newVal) {
		CkHttpRequest_put_SendCharset($this->_cPtr,$newVal);
	}

	function get_Version($str) {
		CkHttpRequest_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkHttpRequest_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkHttpRequest_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkHttpRequest_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkHttpRequest_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkHttpRequest_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkHttpRequest_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function AddBytesForUpload($name,$filename,$byteData) {
		return CkHttpRequest_AddBytesForUpload($this->_cPtr,$name,$filename,$byteData);
	}

	function AddBytesForUpload2($name,$filename,$byteData,$contentType) {
		return CkHttpRequest_AddBytesForUpload2($this->_cPtr,$name,$filename,$byteData,$contentType);
	}

	function AddFileForUpload($name,$path) {
		return CkHttpRequest_AddFileForUpload($this->_cPtr,$name,$path);
	}

	function AddFileForUpload2($name,$path,$contentType) {
		return CkHttpRequest_AddFileForUpload2($this->_cPtr,$name,$path,$contentType);
	}

	function AddHeader($name,$value) {
		CkHttpRequest_AddHeader($this->_cPtr,$name,$value);
	}

	function AddParam($name,$value) {
		CkHttpRequest_AddParam($this->_cPtr,$name,$value);
	}

	function AddStringForUpload($name,$filename,$strData,$charset) {
		return CkHttpRequest_AddStringForUpload($this->_cPtr,$name,$filename,$strData,$charset);
	}

	function AddStringForUpload2($name,$filename,$strData,$charset,$contentType) {
		return CkHttpRequest_AddStringForUpload2($this->_cPtr,$name,$filename,$strData,$charset,$contentType);
	}

	function generateRequestText() {
		return CkHttpRequest_generateRequestText($this->_cPtr);
	}

	function getHeaderField($name) {
		return CkHttpRequest_getHeaderField($this->_cPtr,$name);
	}

	function headerField($name) {
		return CkHttpRequest_headerField($this->_cPtr,$name);
	}

	function getHeaderName($index) {
		return CkHttpRequest_getHeaderName($this->_cPtr,$index);
	}

	function headerName($index) {
		return CkHttpRequest_headerName($this->_cPtr,$index);
	}

	function getHeaderValue($index) {
		return CkHttpRequest_getHeaderValue($this->_cPtr,$index);
	}

	function headerValue($index) {
		return CkHttpRequest_headerValue($this->_cPtr,$index);
	}

	function getParam($name) {
		return CkHttpRequest_getParam($this->_cPtr,$name);
	}

	function param($name) {
		return CkHttpRequest_param($this->_cPtr,$name);
	}

	function getParamName($index) {
		return CkHttpRequest_getParamName($this->_cPtr,$index);
	}

	function paramName($index) {
		return CkHttpRequest_paramName($this->_cPtr,$index);
	}

	function getParamValue($index) {
		return CkHttpRequest_getParamValue($this->_cPtr,$index);
	}

	function paramValue($index) {
		return CkHttpRequest_paramValue($this->_cPtr,$index);
	}

	function getUrlEncodedParams() {
		return CkHttpRequest_getUrlEncodedParams($this->_cPtr);
	}

	function urlEncodedParams() {
		return CkHttpRequest_urlEncodedParams($this->_cPtr);
	}

	function LoadBodyFromBytes($binaryData) {
		return CkHttpRequest_LoadBodyFromBytes($this->_cPtr,$binaryData);
	}

	function LoadBodyFromFile($path) {
		return CkHttpRequest_LoadBodyFromFile($this->_cPtr,$path);
	}

	function LoadBodyFromString($bodyStr,$charset) {
		return CkHttpRequest_LoadBodyFromString($this->_cPtr,$bodyStr,$charset);
	}

	function RemoveAllParams() {
		CkHttpRequest_RemoveAllParams($this->_cPtr);
	}

	function RemoveHeader($name) {
		return CkHttpRequest_RemoveHeader($this->_cPtr,$name);
	}

	function RemoveParam($name) {
		CkHttpRequest_RemoveParam($this->_cPtr,$name);
	}

	function SaveLastError($path) {
		return CkHttpRequest_SaveLastError($this->_cPtr,$path);
	}

	function SetFromUrl($url) {
		CkHttpRequest_SetFromUrl($this->_cPtr,$url);
	}

	function StreamBodyFromFile($path) {
		return CkHttpRequest_StreamBodyFromFile($this->_cPtr,$path);
	}

	function UseGet() {
		CkHttpRequest_UseGet($this->_cPtr);
	}

	function UseHead() {
		CkHttpRequest_UseHead($this->_cPtr);
	}

	function UsePost() {
		CkHttpRequest_UsePost($this->_cPtr);
	}

	function UsePostMultipartForm() {
		CkHttpRequest_UsePostMultipartForm($this->_cPtr);
	}

	function UsePut() {
		CkHttpRequest_UsePut($this->_cPtr);
	}

	function UseUpload() {
		CkHttpRequest_UseUpload($this->_cPtr);
	}

	function UseUploadPut() {
		CkHttpRequest_UseUploadPut($this->_cPtr);
	}

	function UseXmlHttp($xmlBody) {
		CkHttpRequest_UseXmlHttp($this->_cPtr,$xmlBody);
	}
}

class CkHttpResponse {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkHttpResponse') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkHttpResponse();
	}

	function get_Utf8() {
		return CkHttpResponse_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkHttpResponse_put_Utf8($this->_cPtr,$b);
	}

	function get_Body($outBytes) {
		CkHttpResponse_get_Body($this->_cPtr,$outBytes);
	}

	function get_BodyQP($str) {
		CkHttpResponse_get_BodyQP($this->_cPtr,$str);
	}

	function bodyQP() {
		return CkHttpResponse_bodyQP($this->_cPtr);
	}

	function get_BodyStr($str) {
		CkHttpResponse_get_BodyStr($this->_cPtr,$str);
	}

	function bodyStr() {
		return CkHttpResponse_bodyStr($this->_cPtr);
	}

	function get_Charset($str) {
		CkHttpResponse_get_Charset($this->_cPtr,$str);
	}

	function charset() {
		return CkHttpResponse_charset($this->_cPtr);
	}

	function get_ContentLength() {
		return CkHttpResponse_get_ContentLength($this->_cPtr);
	}

	function get_Date($outSysTime) {
		CkHttpResponse_get_Date($this->_cPtr,$outSysTime);
	}

	function get_DateStr($str) {
		CkHttpResponse_get_DateStr($this->_cPtr,$str);
	}

	function dateStr() {
		return CkHttpResponse_dateStr($this->_cPtr);
	}

	function get_Domain($str) {
		CkHttpResponse_get_Domain($this->_cPtr,$str);
	}

	function domain() {
		return CkHttpResponse_domain($this->_cPtr);
	}

	function get_FullMime($str) {
		CkHttpResponse_get_FullMime($this->_cPtr,$str);
	}

	function fullMime() {
		return CkHttpResponse_fullMime($this->_cPtr);
	}

	function get_Header($str) {
		CkHttpResponse_get_Header($this->_cPtr,$str);
	}

	function header() {
		return CkHttpResponse_header($this->_cPtr);
	}

	function get_LastErrorHtml($str) {
		CkHttpResponse_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkHttpResponse_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkHttpResponse_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkHttpResponse_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkHttpResponse_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkHttpResponse_lastErrorXml($this->_cPtr);
	}

	function get_NumCookies() {
		return CkHttpResponse_get_NumCookies($this->_cPtr);
	}

	function get_NumHeaderFields() {
		return CkHttpResponse_get_NumHeaderFields($this->_cPtr);
	}

	function get_StatusCode() {
		return CkHttpResponse_get_StatusCode($this->_cPtr);
	}

	function get_StatusLine($str) {
		CkHttpResponse_get_StatusLine($this->_cPtr,$str);
	}

	function statusLine() {
		return CkHttpResponse_statusLine($this->_cPtr);
	}

	function get_Version($str) {
		CkHttpResponse_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkHttpResponse_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkHttpResponse_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkHttpResponse_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkHttpResponse_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkHttpResponse_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkHttpResponse_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function getCookieDomain($index) {
		return CkHttpResponse_getCookieDomain($this->_cPtr,$index);
	}

	function cookieDomain($index) {
		return CkHttpResponse_cookieDomain($this->_cPtr,$index);
	}

	function GetCookieExpires($index,$outSysTime) {
		return CkHttpResponse_GetCookieExpires($this->_cPtr,$index,$outSysTime);
	}

	function getCookieExpiresStr($index) {
		return CkHttpResponse_getCookieExpiresStr($this->_cPtr,$index);
	}

	function cookieExpiresStr($index) {
		return CkHttpResponse_cookieExpiresStr($this->_cPtr,$index);
	}

	function getCookieName($index) {
		return CkHttpResponse_getCookieName($this->_cPtr,$index);
	}

	function cookieName($index) {
		return CkHttpResponse_cookieName($this->_cPtr,$index);
	}

	function getCookiePath($index) {
		return CkHttpResponse_getCookiePath($this->_cPtr,$index);
	}

	function cookiePath($index) {
		return CkHttpResponse_cookiePath($this->_cPtr,$index);
	}

	function getCookieValue($index) {
		return CkHttpResponse_getCookieValue($this->_cPtr,$index);
	}

	function cookieValue($index) {
		return CkHttpResponse_cookieValue($this->_cPtr,$index);
	}

	function getHeaderField($fieldName) {
		return CkHttpResponse_getHeaderField($this->_cPtr,$fieldName);
	}

	function headerField($fieldName) {
		return CkHttpResponse_headerField($this->_cPtr,$fieldName);
	}

	function getHeaderFieldAttr($fieldName,$attrName) {
		return CkHttpResponse_getHeaderFieldAttr($this->_cPtr,$fieldName,$attrName);
	}

	function headerFieldAttr($fieldName,$attrName) {
		return CkHttpResponse_headerFieldAttr($this->_cPtr,$fieldName,$attrName);
	}

	function getHeaderName($index) {
		return CkHttpResponse_getHeaderName($this->_cPtr,$index);
	}

	function headerName($index) {
		return CkHttpResponse_headerName($this->_cPtr,$index);
	}

	function getHeaderValue($index) {
		return CkHttpResponse_getHeaderValue($this->_cPtr,$index);
	}

	function headerValue($index) {
		return CkHttpResponse_headerValue($this->_cPtr,$index);
	}

	function SaveBodyBinary($path) {
		return CkHttpResponse_SaveBodyBinary($this->_cPtr,$path);
	}

	function SaveBodyText($bCrlf,$path) {
		return CkHttpResponse_SaveBodyText($this->_cPtr,$bCrlf,$path);
	}

	function SaveLastError($path) {
		return CkHttpResponse_SaveLastError($this->_cPtr,$path);
	}

	function urlEncParamValue($encodedParams,$paramName) {
		return CkHttpResponse_urlEncParamValue($this->_cPtr,$encodedParams,$paramName);
	}
}

class CkImap {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkImap') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkImap();
	}

	function get_Utf8() {
		return CkImap_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkImap_put_Utf8($this->_cPtr,$b);
	}

	function get_AppendSeen() {
		return CkImap_get_AppendSeen($this->_cPtr);
	}

	function put_AppendSeen($newVal) {
		CkImap_put_AppendSeen($this->_cPtr,$newVal);
	}

	function get_AppendUid() {
		return CkImap_get_AppendUid($this->_cPtr);
	}

	function get_AuthMethod($str) {
		CkImap_get_AuthMethod($this->_cPtr,$str);
	}

	function authMethod() {
		return CkImap_authMethod($this->_cPtr);
	}

	function put_AuthMethod($newVal) {
		CkImap_put_AuthMethod($this->_cPtr,$newVal);
	}

	function get_AuthzId($str) {
		CkImap_get_AuthzId($this->_cPtr,$str);
	}

	function authzId() {
		return CkImap_authzId($this->_cPtr);
	}

	function put_AuthzId($newVal) {
		CkImap_put_AuthzId($this->_cPtr,$newVal);
	}

	function get_AutoDownloadAttachments() {
		return CkImap_get_AutoDownloadAttachments($this->_cPtr);
	}

	function put_AutoDownloadAttachments($newVal) {
		CkImap_put_AutoDownloadAttachments($this->_cPtr,$newVal);
	}

	function get_AutoFix() {
		return CkImap_get_AutoFix($this->_cPtr);
	}

	function put_AutoFix($newVal) {
		CkImap_put_AutoFix($this->_cPtr,$newVal);
	}

	function get_ClientIpAddress($str) {
		CkImap_get_ClientIpAddress($this->_cPtr,$str);
	}

	function clientIpAddress() {
		return CkImap_clientIpAddress($this->_cPtr);
	}

	function put_ClientIpAddress($newVal) {
		CkImap_put_ClientIpAddress($this->_cPtr,$newVal);
	}

	function get_ConnectTimeout() {
		return CkImap_get_ConnectTimeout($this->_cPtr);
	}

	function put_ConnectTimeout($newVal) {
		CkImap_put_ConnectTimeout($this->_cPtr,$newVal);
	}

	function get_ConnectedToHost($str) {
		CkImap_get_ConnectedToHost($this->_cPtr,$str);
	}

	function connectedToHost() {
		return CkImap_connectedToHost($this->_cPtr);
	}

	function get_Domain($str) {
		CkImap_get_Domain($this->_cPtr,$str);
	}

	function domain() {
		return CkImap_domain($this->_cPtr);
	}

	function put_Domain($newVal) {
		CkImap_put_Domain($this->_cPtr,$newVal);
	}

	function get_HeartbeatMs() {
		return CkImap_get_HeartbeatMs($this->_cPtr);
	}

	function put_HeartbeatMs($newVal) {
		CkImap_put_HeartbeatMs($this->_cPtr,$newVal);
	}

	function get_HttpProxyAuthMethod($str) {
		CkImap_get_HttpProxyAuthMethod($this->_cPtr,$str);
	}

	function httpProxyAuthMethod() {
		return CkImap_httpProxyAuthMethod($this->_cPtr);
	}

	function put_HttpProxyAuthMethod($newVal) {
		CkImap_put_HttpProxyAuthMethod($this->_cPtr,$newVal);
	}

	function get_HttpProxyDomain($str) {
		CkImap_get_HttpProxyDomain($this->_cPtr,$str);
	}

	function httpProxyDomain() {
		return CkImap_httpProxyDomain($this->_cPtr);
	}

	function put_HttpProxyDomain($newVal) {
		CkImap_put_HttpProxyDomain($this->_cPtr,$newVal);
	}

	function get_HttpProxyHostname($str) {
		CkImap_get_HttpProxyHostname($this->_cPtr,$str);
	}

	function httpProxyHostname() {
		return CkImap_httpProxyHostname($this->_cPtr);
	}

	function put_HttpProxyHostname($newVal) {
		CkImap_put_HttpProxyHostname($this->_cPtr,$newVal);
	}

	function get_HttpProxyPassword($str) {
		CkImap_get_HttpProxyPassword($this->_cPtr,$str);
	}

	function httpProxyPassword() {
		return CkImap_httpProxyPassword($this->_cPtr);
	}

	function put_HttpProxyPassword($newVal) {
		CkImap_put_HttpProxyPassword($this->_cPtr,$newVal);
	}

	function get_HttpProxyPort() {
		return CkImap_get_HttpProxyPort($this->_cPtr);
	}

	function put_HttpProxyPort($newVal) {
		CkImap_put_HttpProxyPort($this->_cPtr,$newVal);
	}

	function get_HttpProxyUsername($str) {
		CkImap_get_HttpProxyUsername($this->_cPtr,$str);
	}

	function httpProxyUsername() {
		return CkImap_httpProxyUsername($this->_cPtr);
	}

	function put_HttpProxyUsername($newVal) {
		CkImap_put_HttpProxyUsername($this->_cPtr,$newVal);
	}

	function get_KeepSessionLog() {
		return CkImap_get_KeepSessionLog($this->_cPtr);
	}

	function put_KeepSessionLog($newVal) {
		CkImap_put_KeepSessionLog($this->_cPtr,$newVal);
	}

	function get_LastAppendedMime($str) {
		CkImap_get_LastAppendedMime($this->_cPtr,$str);
	}

	function lastAppendedMime() {
		return CkImap_lastAppendedMime($this->_cPtr);
	}

	function get_LastCommand($str) {
		CkImap_get_LastCommand($this->_cPtr,$str);
	}

	function lastCommand() {
		return CkImap_lastCommand($this->_cPtr);
	}

	function get_LastErrorHtml($str) {
		CkImap_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkImap_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkImap_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkImap_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkImap_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkImap_lastErrorXml($this->_cPtr);
	}

	function get_LastIntermediateResponse($str) {
		CkImap_get_LastIntermediateResponse($this->_cPtr,$str);
	}

	function lastIntermediateResponse() {
		return CkImap_lastIntermediateResponse($this->_cPtr);
	}

	function get_LastResponse($str) {
		CkImap_get_LastResponse($this->_cPtr,$str);
	}

	function lastResponse() {
		return CkImap_lastResponse($this->_cPtr);
	}

	function get_LoggedInUser($str) {
		CkImap_get_LoggedInUser($this->_cPtr,$str);
	}

	function loggedInUser() {
		return CkImap_loggedInUser($this->_cPtr);
	}

	function get_NumMessages() {
		return CkImap_get_NumMessages($this->_cPtr);
	}

	function get_PeekMode() {
		return CkImap_get_PeekMode($this->_cPtr);
	}

	function put_PeekMode($newVal) {
		CkImap_put_PeekMode($this->_cPtr,$newVal);
	}

	function get_Port() {
		return CkImap_get_Port($this->_cPtr);
	}

	function put_Port($newVal) {
		CkImap_put_Port($this->_cPtr,$newVal);
	}

	function get_ReadTimeout() {
		return CkImap_get_ReadTimeout($this->_cPtr);
	}

	function put_ReadTimeout($newVal) {
		CkImap_put_ReadTimeout($this->_cPtr,$newVal);
	}

	function get_SearchCharset($str) {
		CkImap_get_SearchCharset($this->_cPtr,$str);
	}

	function searchCharset() {
		return CkImap_searchCharset($this->_cPtr);
	}

	function put_SearchCharset($newVal) {
		CkImap_put_SearchCharset($this->_cPtr,$newVal);
	}

	function get_SelectedMailbox($str) {
		CkImap_get_SelectedMailbox($this->_cPtr,$str);
	}

	function selectedMailbox() {
		return CkImap_selectedMailbox($this->_cPtr);
	}

	function get_SendBufferSize() {
		return CkImap_get_SendBufferSize($this->_cPtr);
	}

	function put_SendBufferSize($newVal) {
		CkImap_put_SendBufferSize($this->_cPtr,$newVal);
	}

	function get_SeparatorChar() {
		return CkImap_get_SeparatorChar($this->_cPtr);
	}

	function put_SeparatorChar($newVal) {
		CkImap_put_SeparatorChar($this->_cPtr,$newVal);
	}

	function get_SessionLog($str) {
		CkImap_get_SessionLog($this->_cPtr,$str);
	}

	function sessionLog() {
		return CkImap_sessionLog($this->_cPtr);
	}

	function get_SoRcvBuf() {
		return CkImap_get_SoRcvBuf($this->_cPtr);
	}

	function put_SoRcvBuf($newVal) {
		CkImap_put_SoRcvBuf($this->_cPtr,$newVal);
	}

	function get_SoSndBuf() {
		return CkImap_get_SoSndBuf($this->_cPtr);
	}

	function put_SoSndBuf($newVal) {
		CkImap_put_SoSndBuf($this->_cPtr,$newVal);
	}

	function get_SocksHostname($str) {
		CkImap_get_SocksHostname($this->_cPtr,$str);
	}

	function socksHostname() {
		return CkImap_socksHostname($this->_cPtr);
	}

	function put_SocksHostname($newVal) {
		CkImap_put_SocksHostname($this->_cPtr,$newVal);
	}

	function get_SocksPassword($str) {
		CkImap_get_SocksPassword($this->_cPtr,$str);
	}

	function socksPassword() {
		return CkImap_socksPassword($this->_cPtr);
	}

	function put_SocksPassword($newVal) {
		CkImap_put_SocksPassword($this->_cPtr,$newVal);
	}

	function get_SocksPort() {
		return CkImap_get_SocksPort($this->_cPtr);
	}

	function put_SocksPort($newVal) {
		CkImap_put_SocksPort($this->_cPtr,$newVal);
	}

	function get_SocksUsername($str) {
		CkImap_get_SocksUsername($this->_cPtr,$str);
	}

	function socksUsername() {
		return CkImap_socksUsername($this->_cPtr);
	}

	function put_SocksUsername($newVal) {
		CkImap_put_SocksUsername($this->_cPtr,$newVal);
	}

	function get_SocksVersion() {
		return CkImap_get_SocksVersion($this->_cPtr);
	}

	function put_SocksVersion($newVal) {
		CkImap_put_SocksVersion($this->_cPtr,$newVal);
	}

	function get_Ssl() {
		return CkImap_get_Ssl($this->_cPtr);
	}

	function put_Ssl($newVal) {
		CkImap_put_Ssl($this->_cPtr,$newVal);
	}

	function get_SslProtocol($str) {
		CkImap_get_SslProtocol($this->_cPtr,$str);
	}

	function sslProtocol() {
		return CkImap_sslProtocol($this->_cPtr);
	}

	function put_SslProtocol($newVal) {
		CkImap_put_SslProtocol($this->_cPtr,$newVal);
	}

	function get_SslServerCertVerified() {
		return CkImap_get_SslServerCertVerified($this->_cPtr);
	}

	function get_StartTls() {
		return CkImap_get_StartTls($this->_cPtr);
	}

	function put_StartTls($newVal) {
		CkImap_put_StartTls($this->_cPtr,$newVal);
	}

	function get_UidNext() {
		return CkImap_get_UidNext($this->_cPtr);
	}

	function get_UidValidity() {
		return CkImap_get_UidValidity($this->_cPtr);
	}

	function get_Version($str) {
		CkImap_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkImap_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkImap_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkImap_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkImap_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkImap_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkImap_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function AddPfxSourceData($pfxData,$password) {
		return CkImap_AddPfxSourceData($this->_cPtr,$pfxData,$password);
	}

	function AddPfxSourceFile($pfxFilePath,$password) {
		return CkImap_AddPfxSourceFile($this->_cPtr,$pfxFilePath,$password);
	}

	function AppendMail($mailbox,$email) {
		return CkImap_AppendMail($this->_cPtr,$mailbox,$email);
	}

	function AppendMime($mailbox,$mimeText) {
		return CkImap_AppendMime($this->_cPtr,$mailbox,$mimeText);
	}

	function AppendMimeWithDate($mailbox,$mimeText,$internalDate) {
		return CkImap_AppendMimeWithDate($this->_cPtr,$mailbox,$mimeText,$internalDate);
	}

	function AppendMimeWithDateStr($mailbox,$mimeText,$internalDateStr) {
		return CkImap_AppendMimeWithDateStr($this->_cPtr,$mailbox,$mimeText,$internalDateStr);
	}

	function AppendMimeWithFlags($mailbox,$mimeText,$seen,$flagged,$answered,$draft) {
		return CkImap_AppendMimeWithFlags($this->_cPtr,$mailbox,$mimeText,$seen,$flagged,$answered,$draft);
	}

	function CheckForNewEmail() {
		$r=CkImap_CheckForNewEmail($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkMessageSet($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function ClearSessionLog() {
		CkImap_ClearSessionLog($this->_cPtr);
	}

	function CloseMailbox($mailbox) {
		return CkImap_CloseMailbox($this->_cPtr,$mailbox);
	}

	function Connect($hostname) {
		return CkImap_Connect($this->_cPtr,$hostname);
	}

	function Copy($msgId,$bUid,$copyToMailbox) {
		return CkImap_Copy($this->_cPtr,$msgId,$bUid,$copyToMailbox);
	}

	function CopyMultiple($messageSet,$copyToMailbox) {
		return CkImap_CopyMultiple($this->_cPtr,$messageSet,$copyToMailbox);
	}

	function CopySequence($startSeqNum,$count,$copyToMailbox) {
		return CkImap_CopySequence($this->_cPtr,$startSeqNum,$count,$copyToMailbox);
	}

	function CreateMailbox($mailbox) {
		return CkImap_CreateMailbox($this->_cPtr,$mailbox);
	}

	function DeleteMailbox($mailbox) {
		return CkImap_DeleteMailbox($this->_cPtr,$mailbox);
	}

	function Disconnect() {
		return CkImap_Disconnect($this->_cPtr);
	}

	function ExamineMailbox($mailbox) {
		return CkImap_ExamineMailbox($this->_cPtr,$mailbox);
	}

	function Expunge() {
		return CkImap_Expunge($this->_cPtr);
	}

	function ExpungeAndClose() {
		return CkImap_ExpungeAndClose($this->_cPtr);
	}

	function FetchAttachment($email,$attachIndex,$saveToPath) {
		return CkImap_FetchAttachment($this->_cPtr,$email,$attachIndex,$saveToPath);
	}

	function FetchAttachmentBytes($email,$attachIndex,$outBytes) {
		return CkImap_FetchAttachmentBytes($this->_cPtr,$email,$attachIndex,$outBytes);
	}

	function fetchAttachmentString($email,$attachIndex,$charset) {
		return CkImap_fetchAttachmentString($this->_cPtr,$email,$attachIndex,$charset);
	}

	function FetchBundle($messageSet) {
		$r=CkImap_FetchBundle($this->_cPtr,$messageSet);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkEmailBundle($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function FetchBundleAsMime($messageSet) {
		$r=CkImap_FetchBundleAsMime($this->_cPtr,$messageSet);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkStringArray($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function FetchChunk($startSeqNum,$count,$failedSet,$fetchedSet) {
		$r=CkImap_FetchChunk($this->_cPtr,$startSeqNum,$count,$failedSet,$fetchedSet);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkEmailBundle($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function fetchFlags($msgId,$bUid) {
		return CkImap_fetchFlags($this->_cPtr,$msgId,$bUid);
	}

	function FetchHeaders($messageSet) {
		$r=CkImap_FetchHeaders($this->_cPtr,$messageSet);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkEmailBundle($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function FetchSequence($startSeqNum,$numMessages) {
		$r=CkImap_FetchSequence($this->_cPtr,$startSeqNum,$numMessages);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkEmailBundle($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function FetchSequenceAsMime($startSeqNum,$count) {
		$r=CkImap_FetchSequenceAsMime($this->_cPtr,$startSeqNum,$count);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkStringArray($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function FetchSequenceHeaders($startSeqNum,$numMessages) {
		$r=CkImap_FetchSequenceHeaders($this->_cPtr,$startSeqNum,$numMessages);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkEmailBundle($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function FetchSingle($msgId,$bUid) {
		$r=CkImap_FetchSingle($this->_cPtr,$msgId,$bUid);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkEmail($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function fetchSingleAsMime($msgId,$bUid) {
		return CkImap_fetchSingleAsMime($this->_cPtr,$msgId,$bUid);
	}

	function FetchSingleHeader($msgId,$bUid) {
		$r=CkImap_FetchSingleHeader($this->_cPtr,$msgId,$bUid);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkEmail($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function fetchSingleHeaderAsMime($msgId,$bUID) {
		return CkImap_fetchSingleHeaderAsMime($this->_cPtr,$msgId,$bUID);
	}

	function GetAllUids() {
		$r=CkImap_GetAllUids($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkMessageSet($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function getMailAttachFilename($email,$attachIndex) {
		return CkImap_getMailAttachFilename($this->_cPtr,$email,$attachIndex);
	}

	function mailAttachFilename($email,$attachIndex) {
		return CkImap_mailAttachFilename($this->_cPtr,$email,$attachIndex);
	}

	function GetMailAttachSize($email,$attachIndex) {
		return CkImap_GetMailAttachSize($this->_cPtr,$email,$attachIndex);
	}

	function GetMailFlag($email,$flagName) {
		return CkImap_GetMailFlag($this->_cPtr,$email,$flagName);
	}

	function GetMailNumAttach($email) {
		return CkImap_GetMailNumAttach($this->_cPtr,$email);
	}

	function GetMailSize($email) {
		return CkImap_GetMailSize($this->_cPtr,$email);
	}

	function GetSslServerCert() {
		$r=CkImap_GetSslServerCert($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkCert($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function IsConnected() {
		return CkImap_IsConnected($this->_cPtr);
	}

	function IsLoggedIn() {
		return CkImap_IsLoggedIn($this->_cPtr);
	}

	function IsUnlocked() {
		return CkImap_IsUnlocked($this->_cPtr);
	}

	function ListMailboxes($reference,$wildcardedMailbox) {
		$r=CkImap_ListMailboxes($this->_cPtr,$reference,$wildcardedMailbox);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkMailboxes($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function ListSubscribed($reference,$wildcardedMailbox) {
		$r=CkImap_ListSubscribed($this->_cPtr,$reference,$wildcardedMailbox);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkMailboxes($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function Login($login,$password) {
		return CkImap_Login($this->_cPtr,$login,$password);
	}

	function Logout() {
		return CkImap_Logout($this->_cPtr);
	}

	function Noop() {
		return CkImap_Noop($this->_cPtr);
	}

	function RefetchMailFlags($emailInOut) {
		return CkImap_RefetchMailFlags($this->_cPtr,$emailInOut);
	}

	function RenameMailbox($fromMailbox,$toMailbox) {
		return CkImap_RenameMailbox($this->_cPtr,$fromMailbox,$toMailbox);
	}

	function SaveLastError($path) {
		return CkImap_SaveLastError($this->_cPtr,$path);
	}

	function Search($criteria,$bUid) {
		$r=CkImap_Search($this->_cPtr,$criteria,$bUid);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkMessageSet($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function SelectMailbox($mailbox) {
		return CkImap_SelectMailbox($this->_cPtr,$mailbox);
	}

	function sendRawCommand($rawCommand) {
		return CkImap_sendRawCommand($this->_cPtr,$rawCommand);
	}

	function SendRawCommandB($cmd,$outBytes) {
		return CkImap_SendRawCommandB($this->_cPtr,$cmd,$outBytes);
	}

	function SendRawCommandC($cmd,$outBytes) {
		return CkImap_SendRawCommandC($this->_cPtr,$cmd,$outBytes);
	}

	function SetDecryptCert2($cert,$key) {
		return CkImap_SetDecryptCert2($this->_cPtr,$cert,$key);
	}

	function SetFlag($msgId,$bUid,$flagName,$value) {
		return CkImap_SetFlag($this->_cPtr,$msgId,$bUid,$flagName,$value);
	}

	function SetFlags($messageSet,$flagName,$value) {
		return CkImap_SetFlags($this->_cPtr,$messageSet,$flagName,$value);
	}

	function SetMailFlag($email,$flagName,$value) {
		return CkImap_SetMailFlag($this->_cPtr,$email,$flagName,$value);
	}

	function SetSslClientCert($cert) {
		return CkImap_SetSslClientCert($this->_cPtr,$cert);
	}

	function SetSslClientCertPem($pemDataOrPath,$pemPassword) {
		return CkImap_SetSslClientCertPem($this->_cPtr,$pemDataOrPath,$pemPassword);
	}

	function SetSslClientCertPfx($pfxPath,$pfxPassword) {
		return CkImap_SetSslClientCertPfx($this->_cPtr,$pfxPath,$pfxPassword);
	}

	function SshAuthenticatePk($sshLogin,$privateKey) {
		return CkImap_SshAuthenticatePk($this->_cPtr,$sshLogin,$privateKey);
	}

	function SshAuthenticatePw($sshLogin,$sshPassword) {
		return CkImap_SshAuthenticatePw($this->_cPtr,$sshLogin,$sshPassword);
	}

	function SshTunnel($sshServerHostname,$sshServerPort) {
		return CkImap_SshTunnel($this->_cPtr,$sshServerHostname,$sshServerPort);
	}

	function StoreFlags($msgId,$bUid,$flagName,$value) {
		return CkImap_StoreFlags($this->_cPtr,$msgId,$bUid,$flagName,$value);
	}

	function Subscribe($mailbox) {
		return CkImap_Subscribe($this->_cPtr,$mailbox);
	}

	function UnlockComponent($unlockCode) {
		return CkImap_UnlockComponent($this->_cPtr,$unlockCode);
	}

	function Unsubscribe($mailbox) {
		return CkImap_Unsubscribe($this->_cPtr,$mailbox);
	}
}

class CkMailboxes {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkMailboxes') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkMailboxes();
	}

	function get_Utf8() {
		return CkMailboxes_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkMailboxes_put_Utf8($this->_cPtr,$b);
	}

	function get_Count() {
		return CkMailboxes_get_Count($this->_cPtr);
	}

	function get_LastErrorHtml($str) {
		CkMailboxes_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkMailboxes_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkMailboxes_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkMailboxes_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkMailboxes_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkMailboxes_lastErrorXml($this->_cPtr);
	}

	function get_Version($str) {
		CkMailboxes_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkMailboxes_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkMailboxes_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkMailboxes_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkMailboxes_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkMailboxes_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkMailboxes_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function getName($index) {
		return CkMailboxes_getName($this->_cPtr,$index);
	}

	function name($index) {
		return CkMailboxes_name($this->_cPtr,$index);
	}

	function HasInferiors($index) {
		return CkMailboxes_HasInferiors($this->_cPtr,$index);
	}

	function IsMarked($index) {
		return CkMailboxes_IsMarked($this->_cPtr,$index);
	}

	function IsSelectable($index) {
		return CkMailboxes_IsSelectable($this->_cPtr,$index);
	}

	function SaveLastError($path) {
		return CkMailboxes_SaveLastError($this->_cPtr,$path);
	}
}

class CkMessageSet {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkMessageSet') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkMessageSet();
	}

	function get_Utf8() {
		return CkMessageSet_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkMessageSet_put_Utf8($this->_cPtr,$b);
	}

	function get_Count() {
		return CkMessageSet_get_Count($this->_cPtr);
	}

	function get_HasUids() {
		return CkMessageSet_get_HasUids($this->_cPtr);
	}

	function put_HasUids($newVal) {
		CkMessageSet_put_HasUids($this->_cPtr,$newVal);
	}

	function get_LastErrorHtml($str) {
		CkMessageSet_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkMessageSet_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkMessageSet_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkMessageSet_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkMessageSet_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkMessageSet_lastErrorXml($this->_cPtr);
	}

	function get_Version($str) {
		CkMessageSet_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkMessageSet_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkMessageSet_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkMessageSet_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkMessageSet_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkMessageSet_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkMessageSet_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function ContainsId($id) {
		return CkMessageSet_ContainsId($this->_cPtr,$id);
	}

	function FromCompactString($str) {
		return CkMessageSet_FromCompactString($this->_cPtr,$str);
	}

	function GetId($index) {
		return CkMessageSet_GetId($this->_cPtr,$index);
	}

	function InsertId($id) {
		CkMessageSet_InsertId($this->_cPtr,$id);
	}

	function RemoveId($id) {
		CkMessageSet_RemoveId($this->_cPtr,$id);
	}

	function SaveLastError($path) {
		return CkMessageSet_SaveLastError($this->_cPtr,$path);
	}

	function toCompactString() {
		return CkMessageSet_toCompactString($this->_cPtr);
	}

	function toString() {
		return CkMessageSet_toString($this->_cPtr);
	}
}

class CkCharset {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkCharset') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkCharset();
	}

	function get_Utf8() {
		return CkCharset_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkCharset_put_Utf8($this->_cPtr,$b);
	}

	function get_AltToCharset($str) {
		CkCharset_get_AltToCharset($this->_cPtr,$str);
	}

	function altToCharset() {
		return CkCharset_altToCharset($this->_cPtr);
	}

	function put_AltToCharset($newVal) {
		CkCharset_put_AltToCharset($this->_cPtr,$newVal);
	}

	function get_ErrorAction() {
		return CkCharset_get_ErrorAction($this->_cPtr);
	}

	function put_ErrorAction($newVal) {
		CkCharset_put_ErrorAction($this->_cPtr,$newVal);
	}

	function get_FromCharset($str) {
		CkCharset_get_FromCharset($this->_cPtr,$str);
	}

	function fromCharset() {
		return CkCharset_fromCharset($this->_cPtr);
	}

	function put_FromCharset($newVal) {
		CkCharset_put_FromCharset($this->_cPtr,$newVal);
	}

	function get_LastErrorHtml($str) {
		CkCharset_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkCharset_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkCharset_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkCharset_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkCharset_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkCharset_lastErrorXml($this->_cPtr);
	}

	function get_LastInputAsHex($str) {
		CkCharset_get_LastInputAsHex($this->_cPtr,$str);
	}

	function lastInputAsHex() {
		return CkCharset_lastInputAsHex($this->_cPtr);
	}

	function get_LastInputAsQP($str) {
		CkCharset_get_LastInputAsQP($this->_cPtr,$str);
	}

	function lastInputAsQP() {
		return CkCharset_lastInputAsQP($this->_cPtr);
	}

	function get_LastOutputAsHex($str) {
		CkCharset_get_LastOutputAsHex($this->_cPtr,$str);
	}

	function lastOutputAsHex() {
		return CkCharset_lastOutputAsHex($this->_cPtr);
	}

	function get_LastOutputAsQP($str) {
		CkCharset_get_LastOutputAsQP($this->_cPtr,$str);
	}

	function lastOutputAsQP() {
		return CkCharset_lastOutputAsQP($this->_cPtr);
	}

	function get_SaveLast() {
		return CkCharset_get_SaveLast($this->_cPtr);
	}

	function put_SaveLast($newVal) {
		CkCharset_put_SaveLast($this->_cPtr,$newVal);
	}

	function get_ToCharset($str) {
		CkCharset_get_ToCharset($this->_cPtr,$str);
	}

	function toCharset() {
		return CkCharset_toCharset($this->_cPtr);
	}

	function put_ToCharset($newVal) {
		CkCharset_put_ToCharset($this->_cPtr,$newVal);
	}

	function get_Version($str) {
		CkCharset_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkCharset_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkCharset_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkCharset_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkCharset_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkCharset_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkCharset_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function CharsetToCodePage($charsetName) {
		return CkCharset_CharsetToCodePage($this->_cPtr,$charsetName);
	}

	function codePageToCharset($codePage) {
		return CkCharset_codePageToCharset($this->_cPtr,$codePage);
	}

	function ConvertData($inData,$outData) {
		return CkCharset_ConvertData($this->_cPtr,$inData,$outData);
	}

	function ConvertFile($srcPath,$destPath) {
		return CkCharset_ConvertFile($this->_cPtr,$srcPath,$destPath);
	}

	function ConvertFileNoPreamble($srcPath,$destPath) {
		return CkCharset_ConvertFileNoPreamble($this->_cPtr,$srcPath,$destPath);
	}

	function ConvertFromUtf16($uniData,$outMbData) {
		return CkCharset_ConvertFromUtf16($this->_cPtr,$uniData,$outMbData);
	}

	function ConvertHtml($htmlIn,$outHtml) {
		return CkCharset_ConvertHtml($this->_cPtr,$htmlIn,$outHtml);
	}

	function ConvertHtmlFile($srcPath,$destPath) {
		return CkCharset_ConvertHtmlFile($this->_cPtr,$srcPath,$destPath);
	}

	function ConvertToUtf16($mbData,$outUniData) {
		return CkCharset_ConvertToUtf16($this->_cPtr,$mbData,$outUniData);
	}

	function entityEncodeDec($inStr) {
		return CkCharset_entityEncodeDec($this->_cPtr,$inStr);
	}

	function entityEncodeHex($inStr) {
		return CkCharset_entityEncodeHex($this->_cPtr,$inStr);
	}

	function getHtmlCharset($htmlData) {
		return CkCharset_getHtmlCharset($this->_cPtr,$htmlData);
	}

	function htmlCharset($htmlData) {
		return CkCharset_htmlCharset($this->_cPtr,$htmlData);
	}

	function getHtmlFileCharset($htmlPath) {
		return CkCharset_getHtmlFileCharset($this->_cPtr,$htmlPath);
	}

	function htmlFileCharset($htmlPath) {
		return CkCharset_htmlFileCharset($this->_cPtr,$htmlPath);
	}

	function htmlDecodeToStr($str) {
		return CkCharset_htmlDecodeToStr($this->_cPtr,$str);
	}

	function HtmlEntityDecode($inData,$outData) {
		return CkCharset_HtmlEntityDecode($this->_cPtr,$inData,$outData);
	}

	function HtmlEntityDecodeFile($srcPath,$destPath) {
		return CkCharset_HtmlEntityDecodeFile($this->_cPtr,$srcPath,$destPath);
	}

	function IsUnlocked() {
		return CkCharset_IsUnlocked($this->_cPtr);
	}

	function lowerCase($inStr) {
		return CkCharset_lowerCase($this->_cPtr,$inStr);
	}

	function ReadFile($path,$outData) {
		return CkCharset_ReadFile($this->_cPtr,$path,$outData);
	}

	function readFileToString($path,$srcCharset) {
		return CkCharset_readFileToString($this->_cPtr,$path,$srcCharset);
	}

	function SaveLastError($path) {
		return CkCharset_SaveLastError($this->_cPtr,$path);
	}

	function SetErrorBytes($pByteData,$szByteData) {
		CkCharset_SetErrorBytes($this->_cPtr,$pByteData,$szByteData);
	}

	function SetErrorString($str,$charset) {
		CkCharset_SetErrorString($this->_cPtr,$str,$charset);
	}

	function UnlockComponent($unlockCode) {
		return CkCharset_UnlockComponent($this->_cPtr,$unlockCode);
	}

	function upperCase($inStr) {
		return CkCharset_upperCase($this->_cPtr,$inStr);
	}

	function urlDecodeStr($inStr) {
		return CkCharset_urlDecodeStr($this->_cPtr,$inStr);
	}

	function VerifyData($charset,$charData) {
		return CkCharset_VerifyData($this->_cPtr,$charset,$charData);
	}

	function VerifyFile($charset,$path) {
		return CkCharset_VerifyFile($this->_cPtr,$charset,$path);
	}

	function WriteFile($path,$dataBuf) {
		return CkCharset_WriteFile($this->_cPtr,$path,$dataBuf);
	}

	function WriteStringToFile($str,$path,$charset) {
		return CkCharset_WriteStringToFile($this->_cPtr,$str,$path,$charset);
	}
}

class CkSpider {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkSpider') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkSpider();
	}

	function get_Utf8() {
		return CkSpider_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkSpider_put_Utf8($this->_cPtr,$b);
	}

	function get_AvoidHttps() {
		return CkSpider_get_AvoidHttps($this->_cPtr);
	}

	function put_AvoidHttps($newVal) {
		CkSpider_put_AvoidHttps($this->_cPtr,$newVal);
	}

	function get_CacheDir($str) {
		CkSpider_get_CacheDir($this->_cPtr,$str);
	}

	function cacheDir() {
		return CkSpider_cacheDir($this->_cPtr);
	}

	function put_CacheDir($newVal) {
		CkSpider_put_CacheDir($this->_cPtr,$newVal);
	}

	function get_ChopAtQuery() {
		return CkSpider_get_ChopAtQuery($this->_cPtr);
	}

	function put_ChopAtQuery($newVal) {
		CkSpider_put_ChopAtQuery($this->_cPtr,$newVal);
	}

	function get_ConnectTimeout() {
		return CkSpider_get_ConnectTimeout($this->_cPtr);
	}

	function put_ConnectTimeout($newVal) {
		CkSpider_put_ConnectTimeout($this->_cPtr,$newVal);
	}

	function get_Domain($str) {
		CkSpider_get_Domain($this->_cPtr,$str);
	}

	function domain() {
		return CkSpider_domain($this->_cPtr);
	}

	function get_FetchFromCache() {
		return CkSpider_get_FetchFromCache($this->_cPtr);
	}

	function put_FetchFromCache($newVal) {
		CkSpider_put_FetchFromCache($this->_cPtr,$newVal);
	}

	function get_HeartbeatMs() {
		return CkSpider_get_HeartbeatMs($this->_cPtr);
	}

	function put_HeartbeatMs($newVal) {
		CkSpider_put_HeartbeatMs($this->_cPtr,$newVal);
	}

	function get_LastErrorHtml($str) {
		CkSpider_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkSpider_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkSpider_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkSpider_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkSpider_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkSpider_lastErrorXml($this->_cPtr);
	}

	function get_LastFromCache() {
		return CkSpider_get_LastFromCache($this->_cPtr);
	}

	function get_LastHtml($str) {
		CkSpider_get_LastHtml($this->_cPtr,$str);
	}

	function lastHtml() {
		return CkSpider_lastHtml($this->_cPtr);
	}

	function get_LastHtmlDescription($str) {
		CkSpider_get_LastHtmlDescription($this->_cPtr,$str);
	}

	function lastHtmlDescription() {
		return CkSpider_lastHtmlDescription($this->_cPtr);
	}

	function get_LastHtmlKeywords($str) {
		CkSpider_get_LastHtmlKeywords($this->_cPtr,$str);
	}

	function lastHtmlKeywords() {
		return CkSpider_lastHtmlKeywords($this->_cPtr);
	}

	function get_LastHtmlTitle($str) {
		CkSpider_get_LastHtmlTitle($this->_cPtr,$str);
	}

	function lastHtmlTitle() {
		return CkSpider_lastHtmlTitle($this->_cPtr);
	}

	function get_LastModDate($outSysTime) {
		CkSpider_get_LastModDate($this->_cPtr,$outSysTime);
	}

	function get_LastModDateStr($str) {
		CkSpider_get_LastModDateStr($this->_cPtr,$str);
	}

	function lastModDateStr() {
		return CkSpider_lastModDateStr($this->_cPtr);
	}

	function get_LastUrl($str) {
		CkSpider_get_LastUrl($this->_cPtr,$str);
	}

	function lastUrl() {
		return CkSpider_lastUrl($this->_cPtr);
	}

	function get_MaxResponseSize() {
		return CkSpider_get_MaxResponseSize($this->_cPtr);
	}

	function put_MaxResponseSize($newVal) {
		CkSpider_put_MaxResponseSize($this->_cPtr,$newVal);
	}

	function get_MaxUrlLen() {
		return CkSpider_get_MaxUrlLen($this->_cPtr);
	}

	function put_MaxUrlLen($newVal) {
		CkSpider_put_MaxUrlLen($this->_cPtr,$newVal);
	}

	function get_NumAvoidPatterns() {
		return CkSpider_get_NumAvoidPatterns($this->_cPtr);
	}

	function get_NumFailed() {
		return CkSpider_get_NumFailed($this->_cPtr);
	}

	function get_NumOutboundLinks() {
		return CkSpider_get_NumOutboundLinks($this->_cPtr);
	}

	function get_NumSpidered() {
		return CkSpider_get_NumSpidered($this->_cPtr);
	}

	function get_NumUnspidered() {
		return CkSpider_get_NumUnspidered($this->_cPtr);
	}

	function get_ProxyDomain($str) {
		CkSpider_get_ProxyDomain($this->_cPtr,$str);
	}

	function proxyDomain() {
		return CkSpider_proxyDomain($this->_cPtr);
	}

	function put_ProxyDomain($newVal) {
		CkSpider_put_ProxyDomain($this->_cPtr,$newVal);
	}

	function get_ProxyLogin($str) {
		CkSpider_get_ProxyLogin($this->_cPtr,$str);
	}

	function proxyLogin() {
		return CkSpider_proxyLogin($this->_cPtr);
	}

	function put_ProxyLogin($newVal) {
		CkSpider_put_ProxyLogin($this->_cPtr,$newVal);
	}

	function get_ProxyPassword($str) {
		CkSpider_get_ProxyPassword($this->_cPtr,$str);
	}

	function proxyPassword() {
		return CkSpider_proxyPassword($this->_cPtr);
	}

	function put_ProxyPassword($newVal) {
		CkSpider_put_ProxyPassword($this->_cPtr,$newVal);
	}

	function get_ProxyPort() {
		return CkSpider_get_ProxyPort($this->_cPtr);
	}

	function put_ProxyPort($newVal) {
		CkSpider_put_ProxyPort($this->_cPtr,$newVal);
	}

	function get_ReadTimeout() {
		return CkSpider_get_ReadTimeout($this->_cPtr);
	}

	function put_ReadTimeout($newVal) {
		CkSpider_put_ReadTimeout($this->_cPtr,$newVal);
	}

	function get_UpdateCache() {
		return CkSpider_get_UpdateCache($this->_cPtr);
	}

	function put_UpdateCache($newVal) {
		CkSpider_put_UpdateCache($this->_cPtr,$newVal);
	}

	function get_UserAgent($str) {
		CkSpider_get_UserAgent($this->_cPtr,$str);
	}

	function userAgent() {
		return CkSpider_userAgent($this->_cPtr);
	}

	function put_UserAgent($newVal) {
		CkSpider_put_UserAgent($this->_cPtr,$newVal);
	}

	function get_Version($str) {
		CkSpider_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkSpider_version($this->_cPtr);
	}

	function get_WindDownCount() {
		return CkSpider_get_WindDownCount($this->_cPtr);
	}

	function put_WindDownCount($newVal) {
		CkSpider_put_WindDownCount($this->_cPtr,$newVal);
	}

	function get_DebugLogFilePath($str) {
		CkSpider_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkSpider_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkSpider_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkSpider_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkSpider_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function AddAvoidOutboundLinkPattern($pattern) {
		CkSpider_AddAvoidOutboundLinkPattern($this->_cPtr,$pattern);
	}

	function AddAvoidPattern($pattern) {
		CkSpider_AddAvoidPattern($this->_cPtr,$pattern);
	}

	function AddMustMatchPattern($pattern) {
		CkSpider_AddMustMatchPattern($this->_cPtr,$pattern);
	}

	function AddUnspidered($url) {
		CkSpider_AddUnspidered($this->_cPtr,$url);
	}

	function canonicalizeUrl($url) {
		return CkSpider_canonicalizeUrl($this->_cPtr,$url);
	}

	function ClearFailedUrls() {
		CkSpider_ClearFailedUrls($this->_cPtr);
	}

	function ClearOutboundLinks() {
		CkSpider_ClearOutboundLinks($this->_cPtr);
	}

	function ClearSpideredUrls() {
		CkSpider_ClearSpideredUrls($this->_cPtr);
	}

	function CrawlNext() {
		return CkSpider_CrawlNext($this->_cPtr);
	}

	function fetchRobotsText() {
		return CkSpider_fetchRobotsText($this->_cPtr);
	}

	function getAvoidPattern($index) {
		return CkSpider_getAvoidPattern($this->_cPtr,$index);
	}

	function avoidPattern($index) {
		return CkSpider_avoidPattern($this->_cPtr,$index);
	}

	function getBaseDomain($domain) {
		return CkSpider_getBaseDomain($this->_cPtr,$domain);
	}

	function baseDomain($domain) {
		return CkSpider_baseDomain($this->_cPtr,$domain);
	}

	function getFailedUrl($index) {
		return CkSpider_getFailedUrl($this->_cPtr,$index);
	}

	function failedUrl($index) {
		return CkSpider_failedUrl($this->_cPtr,$index);
	}

	function getOutboundLink($index) {
		return CkSpider_getOutboundLink($this->_cPtr,$index);
	}

	function outboundLink($index) {
		return CkSpider_outboundLink($this->_cPtr,$index);
	}

	function getSpideredUrl($index) {
		return CkSpider_getSpideredUrl($this->_cPtr,$index);
	}

	function spideredUrl($index) {
		return CkSpider_spideredUrl($this->_cPtr,$index);
	}

	function getUnspideredUrl($index) {
		return CkSpider_getUnspideredUrl($this->_cPtr,$index);
	}

	function unspideredUrl($index) {
		return CkSpider_unspideredUrl($this->_cPtr,$index);
	}

	function getUrlDomain($url) {
		return CkSpider_getUrlDomain($this->_cPtr,$url);
	}

	function urlDomain($url) {
		return CkSpider_urlDomain($this->_cPtr,$url);
	}

	function Initialize($domain) {
		CkSpider_Initialize($this->_cPtr,$domain);
	}

	function RecrawlLast() {
		return CkSpider_RecrawlLast($this->_cPtr);
	}

	function SaveLastError($path) {
		return CkSpider_SaveLastError($this->_cPtr,$path);
	}

	function SkipUnspidered($index) {
		CkSpider_SkipUnspidered($this->_cPtr,$index);
	}

	function SleepMs($millisec) {
		CkSpider_SleepMs($this->_cPtr,$millisec);
	}
}

class CkXml {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkXml') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkXml();
	}

	function get_Utf8() {
		return CkXml_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkXml_put_Utf8($this->_cPtr,$b);
	}

	function get_Cdata() {
		return CkXml_get_Cdata($this->_cPtr);
	}

	function put_Cdata($newVal) {
		CkXml_put_Cdata($this->_cPtr,$newVal);
	}

	function get_Content($str) {
		CkXml_get_Content($this->_cPtr,$str);
	}

	function content() {
		return CkXml_content($this->_cPtr);
	}

	function put_Content($newVal) {
		CkXml_put_Content($this->_cPtr,$newVal);
	}

	function get_ContentInt() {
		return CkXml_get_ContentInt($this->_cPtr);
	}

	function put_ContentInt($newVal) {
		CkXml_put_ContentInt($this->_cPtr,$newVal);
	}

	function get_DocType($str) {
		CkXml_get_DocType($this->_cPtr,$str);
	}

	function docType() {
		return CkXml_docType($this->_cPtr);
	}

	function put_DocType($newVal) {
		CkXml_put_DocType($this->_cPtr,$newVal);
	}

	function get_EmitXmlDecl() {
		return CkXml_get_EmitXmlDecl($this->_cPtr);
	}

	function put_EmitXmlDecl($newVal) {
		CkXml_put_EmitXmlDecl($this->_cPtr,$newVal);
	}

	function get_Encoding($str) {
		CkXml_get_Encoding($this->_cPtr,$str);
	}

	function encoding() {
		return CkXml_encoding($this->_cPtr);
	}

	function put_Encoding($newVal) {
		CkXml_put_Encoding($this->_cPtr,$newVal);
	}

	function get_LastErrorHtml($str) {
		CkXml_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkXml_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkXml_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkXml_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkXml_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkXml_lastErrorXml($this->_cPtr);
	}

	function get_NumAttributes() {
		return CkXml_get_NumAttributes($this->_cPtr);
	}

	function get_NumChildren() {
		return CkXml_get_NumChildren($this->_cPtr);
	}

	function get_SortCaseInsensitive() {
		return CkXml_get_SortCaseInsensitive($this->_cPtr);
	}

	function put_SortCaseInsensitive($newVal) {
		CkXml_put_SortCaseInsensitive($this->_cPtr,$newVal);
	}

	function get_Standalone() {
		return CkXml_get_Standalone($this->_cPtr);
	}

	function put_Standalone($newVal) {
		CkXml_put_Standalone($this->_cPtr,$newVal);
	}

	function get_Tag($str) {
		CkXml_get_Tag($this->_cPtr,$str);
	}

	function tag() {
		return CkXml_tag($this->_cPtr);
	}

	function put_Tag($newVal) {
		CkXml_put_Tag($this->_cPtr,$newVal);
	}

	function get_TreeId() {
		return CkXml_get_TreeId($this->_cPtr);
	}

	function get_Version($str) {
		CkXml_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkXml_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkXml_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkXml_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkXml_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkXml_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkXml_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function accumulateTagContent($tag,$skipTags) {
		return CkXml_accumulateTagContent($this->_cPtr,$tag,$skipTags);
	}

	function AddAttribute($name,$value) {
		return CkXml_AddAttribute($this->_cPtr,$name,$value);
	}

	function AddAttributeInt($name,$value) {
		return CkXml_AddAttributeInt($this->_cPtr,$name,$value);
	}

	function AddChildTree($tree) {
		return CkXml_AddChildTree($this->_cPtr,$tree);
	}

	function AddOrUpdateAttribute($name,$value) {
		CkXml_AddOrUpdateAttribute($this->_cPtr,$name,$value);
	}

	function AddOrUpdateAttributeI($name,$value) {
		CkXml_AddOrUpdateAttributeI($this->_cPtr,$name,$value);
	}

	function AddStyleSheet($styleSheet) {
		CkXml_AddStyleSheet($this->_cPtr,$styleSheet);
	}

	function AddToAttribute($name,$amount) {
		CkXml_AddToAttribute($this->_cPtr,$name,$amount);
	}

	function AddToChildContent($tag,$amount) {
		CkXml_AddToChildContent($this->_cPtr,$tag,$amount);
	}

	function AddToContent($amount) {
		CkXml_AddToContent($this->_cPtr,$amount);
	}

	function AppendToContent($str) {
		return CkXml_AppendToContent($this->_cPtr,$str);
	}

	function BEncodeContent($charset,$db) {
		return CkXml_BEncodeContent($this->_cPtr,$charset,$db);
	}

	function ChildContentMatches($tag,$pattern,$caseSensitive) {
		return CkXml_ChildContentMatches($this->_cPtr,$tag,$pattern,$caseSensitive);
	}

	function chilkatPath($cmd) {
		return CkXml_chilkatPath($this->_cPtr,$cmd);
	}

	function Clear() {
		return CkXml_Clear($this->_cPtr);
	}

	function ContentMatches($pattern,$caseSensitive) {
		return CkXml_ContentMatches($this->_cPtr,$pattern,$caseSensitive);
	}

	function Copy($node) {
		CkXml_Copy($this->_cPtr,$node);
	}

	function CopyRef($node) {
		CkXml_CopyRef($this->_cPtr,$node);
	}

	function DecodeContent($outData) {
		return CkXml_DecodeContent($this->_cPtr,$outData);
	}

	function decodeEntities($str) {
		return CkXml_decodeEntities($this->_cPtr,$str);
	}

	function DecryptContent($password) {
		return CkXml_DecryptContent($this->_cPtr,$password);
	}

	function EncryptContent($password) {
		return CkXml_EncryptContent($this->_cPtr,$password);
	}

	function ExtractChildByIndex($index) {
		$r=CkXml_ExtractChildByIndex($this->_cPtr,$index);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkXml($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function ExtractChildByName($tag,$attrName,$attrValue) {
		$r=CkXml_ExtractChildByName($this->_cPtr,$tag,$attrName,$attrValue);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkXml($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function FindChild($tag) {
		$r=CkXml_FindChild($this->_cPtr,$tag);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkXml($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function FindChild2($tag) {
		return CkXml_FindChild2($this->_cPtr,$tag);
	}

	function FindNextRecord($tag,$contentPattern) {
		$r=CkXml_FindNextRecord($this->_cPtr,$tag,$contentPattern);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkXml($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function FindOrAddNewChild($tag) {
		$r=CkXml_FindOrAddNewChild($this->_cPtr,$tag);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkXml($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function FirstChild() {
		$r=CkXml_FirstChild($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkXml($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function FirstChild2() {
		return CkXml_FirstChild2($this->_cPtr);
	}

	function getAttrValue($name) {
		return CkXml_getAttrValue($this->_cPtr,$name);
	}

	function attrValue($name) {
		return CkXml_attrValue($this->_cPtr,$name);
	}

	function GetAttrValueInt($name) {
		return CkXml_GetAttrValueInt($this->_cPtr,$name);
	}

	function getAttributeName($index) {
		return CkXml_getAttributeName($this->_cPtr,$index);
	}

	function attributeName($index) {
		return CkXml_attributeName($this->_cPtr,$index);
	}

	function getAttributeValue($index) {
		return CkXml_getAttributeValue($this->_cPtr,$index);
	}

	function attributeValue($index) {
		return CkXml_attributeValue($this->_cPtr,$index);
	}

	function GetAttributeValueInt($index) {
		return CkXml_GetAttributeValueInt($this->_cPtr,$index);
	}

	function GetBinaryContent($unzipFlag,$decryptFlag,$password,$outData) {
		return CkXml_GetBinaryContent($this->_cPtr,$unzipFlag,$decryptFlag,$password,$outData);
	}

	function GetChild($index) {
		$r=CkXml_GetChild($this->_cPtr,$index);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkXml($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetChild2($index) {
		return CkXml_GetChild2($this->_cPtr,$index);
	}

	function GetChildBoolValue($tag) {
		return CkXml_GetChildBoolValue($this->_cPtr,$tag);
	}

	function getChildContent($tag) {
		return CkXml_getChildContent($this->_cPtr,$tag);
	}

	function childContent($tag) {
		return CkXml_childContent($this->_cPtr,$tag);
	}

	function getChildContentByIndex($index) {
		return CkXml_getChildContentByIndex($this->_cPtr,$index);
	}

	function childContentByIndex($index) {
		return CkXml_childContentByIndex($this->_cPtr,$index);
	}

	function GetChildExact($tag,$content) {
		$r=CkXml_GetChildExact($this->_cPtr,$tag,$content);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkXml($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetChildIntValue($tag) {
		return CkXml_GetChildIntValue($this->_cPtr,$tag);
	}

	function getChildTag($index) {
		return CkXml_getChildTag($this->_cPtr,$index);
	}

	function childTag($index) {
		return CkXml_childTag($this->_cPtr,$index);
	}

	function getChildTagByIndex($index) {
		return CkXml_getChildTagByIndex($this->_cPtr,$index);
	}

	function childTagByIndex($index) {
		return CkXml_childTagByIndex($this->_cPtr,$index);
	}

	function GetChildWithAttr($tag,$attrName,$attrValue) {
		$r=CkXml_GetChildWithAttr($this->_cPtr,$tag,$attrName,$attrValue);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkXml($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetChildWithContent($content) {
		$r=CkXml_GetChildWithContent($this->_cPtr,$content);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkXml($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetChildWithTag($tag) {
		$r=CkXml_GetChildWithTag($this->_cPtr,$tag);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkXml($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetNthChildWithTag($tag,$n) {
		$r=CkXml_GetNthChildWithTag($this->_cPtr,$tag,$n);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkXml($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetNthChildWithTag2($tag,$n) {
		return CkXml_GetNthChildWithTag2($this->_cPtr,$tag,$n);
	}

	function GetParent() {
		$r=CkXml_GetParent($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkXml($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetParent2() {
		return CkXml_GetParent2($this->_cPtr);
	}

	function GetRoot() {
		$r=CkXml_GetRoot($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkXml($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetRoot2() {
		CkXml_GetRoot2($this->_cPtr);
	}

	function GetSelf() {
		$r=CkXml_GetSelf($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkXml($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function getXml() {
		return CkXml_getXml($this->_cPtr);
	}

	function xml() {
		return CkXml_xml($this->_cPtr);
	}

	function HasAttrWithValue($name,$value) {
		return CkXml_HasAttrWithValue($this->_cPtr,$name,$value);
	}

	function HasAttribute($name) {
		return CkXml_HasAttribute($this->_cPtr,$name);
	}

	function HasChildWithContent($content) {
		return CkXml_HasChildWithContent($this->_cPtr,$content);
	}

	function HasChildWithTag($tag) {
		return CkXml_HasChildWithTag($this->_cPtr,$tag);
	}

	function HasChildWithTagAndContent($tag,$content) {
		return CkXml_HasChildWithTagAndContent($this->_cPtr,$tag,$content);
	}

	function InsertChildTreeAfter($index,$tree) {
		return CkXml_InsertChildTreeAfter($this->_cPtr,$index,$tree);
	}

	function InsertChildTreeBefore($index,$tree) {
		return CkXml_InsertChildTreeBefore($this->_cPtr,$index,$tree);
	}

	function LastChild() {
		$r=CkXml_LastChild($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkXml($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function LastChild2() {
		return CkXml_LastChild2($this->_cPtr);
	}

	function LoadXml($xmlData) {
		return CkXml_LoadXml($this->_cPtr,$xmlData);
	}

	function LoadXml2($xmlData,$autoTrim) {
		return CkXml_LoadXml2($this->_cPtr,$xmlData,$autoTrim);
	}

	function LoadXmlFile($path) {
		return CkXml_LoadXmlFile($this->_cPtr,$path);
	}

	function LoadXmlFile2($path,$autoTrim) {
		return CkXml_LoadXmlFile2($this->_cPtr,$path,$autoTrim);
	}

	function NewChild($tag,$content) {
		$r=CkXml_NewChild($this->_cPtr,$tag,$content);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkXml($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function NewChild2($tag,$content) {
		CkXml_NewChild2($this->_cPtr,$tag,$content);
	}

	function NewChildAfter($index,$tag,$content) {
		$r=CkXml_NewChildAfter($this->_cPtr,$index,$tag,$content);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkXml($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function NewChildBefore($index,$tag,$content) {
		$r=CkXml_NewChildBefore($this->_cPtr,$index,$tag,$content);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkXml($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function NewChildInt2($tag,$value) {
		CkXml_NewChildInt2($this->_cPtr,$tag,$value);
	}

	function NextSibling() {
		$r=CkXml_NextSibling($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkXml($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function NextSibling2() {
		return CkXml_NextSibling2($this->_cPtr);
	}

	function NumChildrenHavingTag($tag) {
		return CkXml_NumChildrenHavingTag($this->_cPtr,$tag);
	}

	function PreviousSibling() {
		$r=CkXml_PreviousSibling($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkXml($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function PreviousSibling2() {
		return CkXml_PreviousSibling2($this->_cPtr);
	}

	function QEncodeContent($charset,$db) {
		return CkXml_QEncodeContent($this->_cPtr,$charset,$db);
	}

	function RemoveAllAttributes() {
		return CkXml_RemoveAllAttributes($this->_cPtr);
	}

	function RemoveAllChildren() {
		CkXml_RemoveAllChildren($this->_cPtr);
	}

	function RemoveAttribute($name) {
		return CkXml_RemoveAttribute($this->_cPtr,$name);
	}

	function RemoveChild($tag) {
		CkXml_RemoveChild($this->_cPtr,$tag);
	}

	function RemoveChildByIndex($index) {
		CkXml_RemoveChildByIndex($this->_cPtr,$index);
	}

	function RemoveChildWithContent($content) {
		CkXml_RemoveChildWithContent($this->_cPtr,$content);
	}

	function RemoveFromTree() {
		CkXml_RemoveFromTree($this->_cPtr);
	}

	function SaveBinaryContent($path,$unzipFlag,$decryptFlag,$password) {
		return CkXml_SaveBinaryContent($this->_cPtr,$path,$unzipFlag,$decryptFlag,$password);
	}

	function SaveLastError($path) {
		return CkXml_SaveLastError($this->_cPtr,$path);
	}

	function SaveXml($path) {
		return CkXml_SaveXml($this->_cPtr,$path);
	}

	function SearchAllForContent($after,$contentPattern) {
		$r=CkXml_SearchAllForContent($this->_cPtr,$after,$contentPattern);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkXml($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function SearchAllForContent2($after,$contentPattern) {
		return CkXml_SearchAllForContent2($this->_cPtr,$after,$contentPattern);
	}

	function SearchForAttribute($after,$tag,$attr,$valuePattern) {
		$r=CkXml_SearchForAttribute($this->_cPtr,$after,$tag,$attr,$valuePattern);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkXml($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function SearchForAttribute2($after,$tag,$attr,$valuePattern) {
		return CkXml_SearchForAttribute2($this->_cPtr,$after,$tag,$attr,$valuePattern);
	}

	function SearchForContent($after,$tag,$contentPattern) {
		$r=CkXml_SearchForContent($this->_cPtr,$after,$tag,$contentPattern);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkXml($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function SearchForContent2($after,$tag,$contentPattern) {
		return CkXml_SearchForContent2($this->_cPtr,$after,$tag,$contentPattern);
	}

	function SearchForTag($after,$tag) {
		$r=CkXml_SearchForTag($this->_cPtr,$after,$tag);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkXml($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function SearchForTag2($after,$tag) {
		return CkXml_SearchForTag2($this->_cPtr,$after,$tag);
	}

	function SetBinaryContent($data,$zipFlag,$encryptFlag,$password) {
		return CkXml_SetBinaryContent($this->_cPtr,$data,$zipFlag,$encryptFlag,$password);
	}

	function SetBinaryContent2($pByteData,$szByteData,$zipFlag,$encryptFlag,$password) {
		return CkXml_SetBinaryContent2($this->_cPtr,$pByteData,$szByteData,$zipFlag,$encryptFlag,$password);
	}

	function SetBinaryContentFromFile($path,$zipFlag,$encryptFlag,$password) {
		return CkXml_SetBinaryContentFromFile($this->_cPtr,$path,$zipFlag,$encryptFlag,$password);
	}

	function SortByAttribute($attrName,$ascending) {
		CkXml_SortByAttribute($this->_cPtr,$attrName,$ascending);
	}

	function SortByAttributeInt($attrName,$ascending) {
		CkXml_SortByAttributeInt($this->_cPtr,$attrName,$ascending);
	}

	function SortByContent($ascending) {
		CkXml_SortByContent($this->_cPtr,$ascending);
	}

	function SortByTag($ascending) {
		CkXml_SortByTag($this->_cPtr,$ascending);
	}

	function SortRecordsByAttribute($sortTag,$attrName,$ascending) {
		CkXml_SortRecordsByAttribute($this->_cPtr,$sortTag,$attrName,$ascending);
	}

	function SortRecordsByContent($sortTag,$ascending) {
		CkXml_SortRecordsByContent($this->_cPtr,$sortTag,$ascending);
	}

	function SortRecordsByContentInt($sortTag,$ascending) {
		CkXml_SortRecordsByContentInt($this->_cPtr,$sortTag,$ascending);
	}

	function SwapNode($node) {
		return CkXml_SwapNode($this->_cPtr,$node);
	}

	function SwapTree($tree) {
		return CkXml_SwapTree($this->_cPtr,$tree);
	}

	function tagContent($tag) {
		return CkXml_tagContent($this->_cPtr,$tag);
	}

	function TagEquals($tag) {
		return CkXml_TagEquals($this->_cPtr,$tag);
	}

	function UnzipContent() {
		return CkXml_UnzipContent($this->_cPtr);
	}

	function UnzipTree() {
		return CkXml_UnzipTree($this->_cPtr);
	}

	function UpdateAttribute($attrName,$attrValue) {
		return CkXml_UpdateAttribute($this->_cPtr,$attrName,$attrValue);
	}

	function UpdateAttributeInt($attrName,$value) {
		return CkXml_UpdateAttributeInt($this->_cPtr,$attrName,$value);
	}

	function UpdateChildContent($tag,$value) {
		CkXml_UpdateChildContent($this->_cPtr,$tag,$value);
	}

	function UpdateChildContentInt($tag,$value) {
		CkXml_UpdateChildContentInt($this->_cPtr,$tag,$value);
	}

	function ZipContent() {
		return CkXml_ZipContent($this->_cPtr);
	}

	function ZipTree() {
		return CkXml_ZipTree($this->_cPtr);
	}
}

class CkBounce {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkBounce') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkBounce();
	}

	function get_Utf8() {
		return CkBounce_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkBounce_put_Utf8($this->_cPtr,$b);
	}

	function get_BounceAddress($str) {
		CkBounce_get_BounceAddress($this->_cPtr,$str);
	}

	function bounceAddress() {
		return CkBounce_bounceAddress($this->_cPtr);
	}

	function get_BounceData($str) {
		CkBounce_get_BounceData($this->_cPtr,$str);
	}

	function bounceData() {
		return CkBounce_bounceData($this->_cPtr);
	}

	function get_BounceType() {
		return CkBounce_get_BounceType($this->_cPtr);
	}

	function get_LastErrorHtml($str) {
		CkBounce_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkBounce_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkBounce_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkBounce_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkBounce_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkBounce_lastErrorXml($this->_cPtr);
	}

	function get_Version($str) {
		CkBounce_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkBounce_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkBounce_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkBounce_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkBounce_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkBounce_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkBounce_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function ExamineEmail($email) {
		return CkBounce_ExamineEmail($this->_cPtr,$email);
	}

	function ExamineEml($emlPath) {
		return CkBounce_ExamineEml($this->_cPtr,$emlPath);
	}

	function ExamineMime($mimeString) {
		return CkBounce_ExamineMime($this->_cPtr,$mimeString);
	}

	function SaveLastError($path) {
		return CkBounce_SaveLastError($this->_cPtr,$path);
	}

	function UnlockComponent($unlockCode) {
		return CkBounce_UnlockComponent($this->_cPtr,$unlockCode);
	}
}

class CkRss {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkRss') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkRss();
	}

	function get_Utf8() {
		return CkRss_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkRss_put_Utf8($this->_cPtr,$b);
	}

	function get_LastErrorHtml($str) {
		CkRss_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkRss_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkRss_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkRss_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkRss_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkRss_lastErrorXml($this->_cPtr);
	}

	function get_NumChannels() {
		return CkRss_get_NumChannels($this->_cPtr);
	}

	function get_NumItems() {
		return CkRss_get_NumItems($this->_cPtr);
	}

	function get_Version($str) {
		CkRss_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkRss_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkRss_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkRss_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkRss_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkRss_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkRss_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function AddNewChannel() {
		$r=CkRss_AddNewChannel($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkRss($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function AddNewImage() {
		$r=CkRss_AddNewImage($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkRss($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function AddNewItem() {
		$r=CkRss_AddNewItem($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkRss($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function DownloadRss($url) {
		return CkRss_DownloadRss($this->_cPtr,$url);
	}

	function getAttr($tag,$attrName) {
		return CkRss_getAttr($this->_cPtr,$tag,$attrName);
	}

	function attr($tag,$attrName) {
		return CkRss_attr($this->_cPtr,$tag,$attrName);
	}

	function GetChannel($index) {
		$r=CkRss_GetChannel($this->_cPtr,$index);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkRss($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetCount($tag) {
		return CkRss_GetCount($this->_cPtr,$tag);
	}

	function GetDate($tag,$outSysTime) {
		return CkRss_GetDate($this->_cPtr,$tag,$outSysTime);
	}

	function getDateStr($tag) {
		return CkRss_getDateStr($this->_cPtr,$tag);
	}

	function dateStr($tag) {
		return CkRss_dateStr($this->_cPtr,$tag);
	}

	function GetImage() {
		$r=CkRss_GetImage($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkRss($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetInt($tag) {
		return CkRss_GetInt($this->_cPtr,$tag);
	}

	function GetItem($index) {
		$r=CkRss_GetItem($this->_cPtr,$index);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkRss($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function getString($tag) {
		return CkRss_getString($this->_cPtr,$tag);
	}

	function string($tag) {
		return CkRss_string($this->_cPtr,$tag);
	}

	function LoadRssFile($path) {
		return CkRss_LoadRssFile($this->_cPtr,$path);
	}

	function LoadRssString($rssString) {
		return CkRss_LoadRssString($this->_cPtr,$rssString);
	}

	function mGetAttr($tag,$index,$attrName) {
		return CkRss_mGetAttr($this->_cPtr,$tag,$index,$attrName);
	}

	function mGetString($tag,$index) {
		return CkRss_mGetString($this->_cPtr,$tag,$index);
	}

	function MSetAttr($tag,$index,$attrName,$value) {
		return CkRss_MSetAttr($this->_cPtr,$tag,$index,$attrName,$value);
	}

	function MSetString($tag,$index,$value) {
		return CkRss_MSetString($this->_cPtr,$tag,$index,$value);
	}

	function NewRss() {
		CkRss_NewRss($this->_cPtr);
	}

	function Remove($tag) {
		CkRss_Remove($this->_cPtr,$tag);
	}

	function SaveLastError($path) {
		return CkRss_SaveLastError($this->_cPtr,$path);
	}

	function SetAttr($tag,$attrName,$value) {
		CkRss_SetAttr($this->_cPtr,$tag,$attrName,$value);
	}

	function SetDate($tag,$dateTime) {
		CkRss_SetDate($this->_cPtr,$tag,$dateTime);
	}

	function SetDateNow($tag) {
		CkRss_SetDateNow($this->_cPtr,$tag);
	}

	function SetDateStr($tag,$dateTimeStr) {
		CkRss_SetDateStr($this->_cPtr,$tag,$dateTimeStr);
	}

	function SetInt($tag,$value) {
		CkRss_SetInt($this->_cPtr,$tag,$value);
	}

	function SetString($tag,$value) {
		CkRss_SetString($this->_cPtr,$tag,$value);
	}

	function toXmlString() {
		return CkRss_toXmlString($this->_cPtr);
	}
}

class CkAtom {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkAtom') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkAtom();
	}

	function get_Utf8() {
		return CkAtom_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkAtom_put_Utf8($this->_cPtr,$b);
	}

	function get_LastErrorHtml($str) {
		CkAtom_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkAtom_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkAtom_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkAtom_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkAtom_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkAtom_lastErrorXml($this->_cPtr);
	}

	function get_NumEntries() {
		return CkAtom_get_NumEntries($this->_cPtr);
	}

	function get_Version($str) {
		CkAtom_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkAtom_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkAtom_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkAtom_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkAtom_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkAtom_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkAtom_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function AddElement($tag,$value) {
		return CkAtom_AddElement($this->_cPtr,$tag,$value);
	}

	function AddElementDate($tag,$dateTime) {
		return CkAtom_AddElementDate($this->_cPtr,$tag,$dateTime);
	}

	function AddElementDateStr($tag,$dateTimeStr) {
		return CkAtom_AddElementDateStr($this->_cPtr,$tag,$dateTimeStr);
	}

	function AddElementDt($tag,$dateTime) {
		return CkAtom_AddElementDt($this->_cPtr,$tag,$dateTime);
	}

	function AddElementHtml($tag,$htmlStr) {
		return CkAtom_AddElementHtml($this->_cPtr,$tag,$htmlStr);
	}

	function AddElementXHtml($tag,$xmlStr) {
		return CkAtom_AddElementXHtml($this->_cPtr,$tag,$xmlStr);
	}

	function AddElementXml($tag,$xmlStr) {
		return CkAtom_AddElementXml($this->_cPtr,$tag,$xmlStr);
	}

	function AddEntry($xmlStr) {
		CkAtom_AddEntry($this->_cPtr,$xmlStr);
	}

	function AddLink($rel,$href,$title,$typ) {
		CkAtom_AddLink($this->_cPtr,$rel,$href,$title,$typ);
	}

	function AddPerson($tag,$name,$uri,$email) {
		CkAtom_AddPerson($this->_cPtr,$tag,$name,$uri,$email);
	}

	function DeleteElement($tag,$index) {
		CkAtom_DeleteElement($this->_cPtr,$tag,$index);
	}

	function DeleteElementAttr($tag,$index,$attrName) {
		CkAtom_DeleteElementAttr($this->_cPtr,$tag,$index,$attrName);
	}

	function DeletePerson($tag,$index) {
		CkAtom_DeletePerson($this->_cPtr,$tag,$index);
	}

	function DownloadAtom($url) {
		return CkAtom_DownloadAtom($this->_cPtr,$url);
	}

	function getElement($tag,$index) {
		return CkAtom_getElement($this->_cPtr,$tag,$index);
	}

	function element($tag,$index) {
		return CkAtom_element($this->_cPtr,$tag,$index);
	}

	function getElementAttr($tag,$index,$attrName) {
		return CkAtom_getElementAttr($this->_cPtr,$tag,$index,$attrName);
	}

	function elementAttr($tag,$index,$attrName) {
		return CkAtom_elementAttr($this->_cPtr,$tag,$index,$attrName);
	}

	function GetElementCount($tag) {
		return CkAtom_GetElementCount($this->_cPtr,$tag);
	}

	function GetElementDate($tag,$index,$outSysTime) {
		return CkAtom_GetElementDate($this->_cPtr,$tag,$index,$outSysTime);
	}

	function getElementDateStr($tag,$index) {
		return CkAtom_getElementDateStr($this->_cPtr,$tag,$index);
	}

	function elementDateStr($tag,$index) {
		return CkAtom_elementDateStr($this->_cPtr,$tag,$index);
	}

	function GetElementDt($tag,$index) {
		$r=CkAtom_GetElementDt($this->_cPtr,$tag,$index);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkDateTime($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetEntry($index) {
		$r=CkAtom_GetEntry($this->_cPtr,$index);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkAtom($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function getLinkHref($relName) {
		return CkAtom_getLinkHref($this->_cPtr,$relName);
	}

	function linkHref($relName) {
		return CkAtom_linkHref($this->_cPtr,$relName);
	}

	function getPersonInfo($tag,$index,$tag2) {
		return CkAtom_getPersonInfo($this->_cPtr,$tag,$index,$tag2);
	}

	function personInfo($tag,$index,$tag2) {
		return CkAtom_personInfo($this->_cPtr,$tag,$index,$tag2);
	}

	function getTopAttr($attrName) {
		return CkAtom_getTopAttr($this->_cPtr,$attrName);
	}

	function topAttr($attrName) {
		return CkAtom_topAttr($this->_cPtr,$attrName);
	}

	function HasElement($tag) {
		return CkAtom_HasElement($this->_cPtr,$tag);
	}

	function LoadXml($xmlStr) {
		return CkAtom_LoadXml($this->_cPtr,$xmlStr);
	}

	function NewEntry() {
		CkAtom_NewEntry($this->_cPtr);
	}

	function NewFeed() {
		CkAtom_NewFeed($this->_cPtr);
	}

	function SaveLastError($path) {
		return CkAtom_SaveLastError($this->_cPtr,$path);
	}

	function SetElementAttr($tag,$index,$attrName,$attrValue) {
		CkAtom_SetElementAttr($this->_cPtr,$tag,$index,$attrName,$attrValue);
	}

	function SetTopAttr($attrName,$value) {
		CkAtom_SetTopAttr($this->_cPtr,$attrName,$value);
	}

	function toXmlString() {
		return CkAtom_toXmlString($this->_cPtr);
	}

	function UpdateElement($tag,$index,$value) {
		CkAtom_UpdateElement($this->_cPtr,$tag,$index,$value);
	}

	function UpdateElementDate($tag,$index,$dateTime) {
		CkAtom_UpdateElementDate($this->_cPtr,$tag,$index,$dateTime);
	}

	function UpdateElementDateStr($tag,$index,$dateTimeStr) {
		CkAtom_UpdateElementDateStr($this->_cPtr,$tag,$index,$dateTimeStr);
	}

	function UpdateElementDt($tag,$index,$dateTime) {
		CkAtom_UpdateElementDt($this->_cPtr,$tag,$index,$dateTime);
	}

	function UpdateElementHtml($tag,$index,$htmlStr) {
		CkAtom_UpdateElementHtml($this->_cPtr,$tag,$index,$htmlStr);
	}

	function UpdateElementXHtml($tag,$index,$xmlStr) {
		CkAtom_UpdateElementXHtml($this->_cPtr,$tag,$index,$xmlStr);
	}

	function UpdateElementXml($tag,$index,$xmlStr) {
		CkAtom_UpdateElementXml($this->_cPtr,$tag,$index,$xmlStr);
	}

	function UpdatePerson($tag,$index,$name,$uri,$email) {
		CkAtom_UpdatePerson($this->_cPtr,$tag,$index,$name,$uri,$email);
	}
}

class CkCache {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkCache') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkCache();
	}

	function get_Utf8() {
		return CkCache_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkCache_put_Utf8($this->_cPtr,$b);
	}

	function get_LastErrorHtml($str) {
		CkCache_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkCache_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkCache_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkCache_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkCache_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkCache_lastErrorXml($this->_cPtr);
	}

	function get_LastEtagFetched($str) {
		CkCache_get_LastEtagFetched($this->_cPtr,$str);
	}

	function lastEtagFetched() {
		return CkCache_lastEtagFetched($this->_cPtr);
	}

	function get_LastExpirationFetched($outSysTime) {
		CkCache_get_LastExpirationFetched($this->_cPtr,$outSysTime);
	}

	function get_LastExpirationFetchedStr($str) {
		CkCache_get_LastExpirationFetchedStr($this->_cPtr,$str);
	}

	function lastExpirationFetchedStr() {
		return CkCache_lastExpirationFetchedStr($this->_cPtr);
	}

	function get_LastHitExpired() {
		return CkCache_get_LastHitExpired($this->_cPtr);
	}

	function get_LastKeyFetched($str) {
		CkCache_get_LastKeyFetched($this->_cPtr,$str);
	}

	function lastKeyFetched() {
		return CkCache_lastKeyFetched($this->_cPtr);
	}

	function get_Level() {
		return CkCache_get_Level($this->_cPtr);
	}

	function put_Level($newVal) {
		CkCache_put_Level($this->_cPtr,$newVal);
	}

	function get_NumRoots() {
		return CkCache_get_NumRoots($this->_cPtr);
	}

	function get_Version($str) {
		CkCache_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkCache_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkCache_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkCache_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkCache_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkCache_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkCache_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function AddRoot($path) {
		CkCache_AddRoot($this->_cPtr,$path);
	}

	function DeleteAll() {
		return CkCache_DeleteAll($this->_cPtr);
	}

	function DeleteAllExpired() {
		return CkCache_DeleteAllExpired($this->_cPtr);
	}

	function DeleteFromCache($key) {
		return CkCache_DeleteFromCache($this->_cPtr,$key);
	}

	function DeleteOlder($dt) {
		return CkCache_DeleteOlder($this->_cPtr,$dt);
	}

	function DeleteOlderDt($dt) {
		return CkCache_DeleteOlderDt($this->_cPtr,$dt);
	}

	function DeleteOlderStr($dateTimeStr) {
		return CkCache_DeleteOlderStr($this->_cPtr,$dateTimeStr);
	}

	function FetchFromCache($key,$outBytes) {
		return CkCache_FetchFromCache($this->_cPtr,$key,$outBytes);
	}

	function fetchText($key) {
		return CkCache_fetchText($this->_cPtr,$key);
	}

	function getEtag($key) {
		return CkCache_getEtag($this->_cPtr,$key);
	}

	function etag($key) {
		return CkCache_etag($this->_cPtr,$key);
	}

	function GetExpiration($key,$outSysTime) {
		return CkCache_GetExpiration($this->_cPtr,$key,$outSysTime);
	}

	function GetExpirationDt($key) {
		$r=CkCache_GetExpirationDt($this->_cPtr,$key);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkDateTime($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function getExpirationStr($url) {
		return CkCache_getExpirationStr($this->_cPtr,$url);
	}

	function expirationStr($url) {
		return CkCache_expirationStr($this->_cPtr,$url);
	}

	function getFilename($key) {
		return CkCache_getFilename($this->_cPtr,$key);
	}

	function filename($key) {
		return CkCache_filename($this->_cPtr,$key);
	}

	function getRoot($index) {
		return CkCache_getRoot($this->_cPtr,$index);
	}

	function root($index) {
		return CkCache_root($this->_cPtr,$index);
	}

	function IsCached($key) {
		return CkCache_IsCached($this->_cPtr,$key);
	}

	function SaveLastError($path) {
		return CkCache_SaveLastError($this->_cPtr,$path);
	}

	function SaveText($key,$expire,$eTag,$strData) {
		return CkCache_SaveText($this->_cPtr,$key,$expire,$eTag,$strData);
	}

	function SaveTextDt($key,$expire,$eTag,$strData) {
		return CkCache_SaveTextDt($this->_cPtr,$key,$expire,$eTag,$strData);
	}

	function SaveTextNoExpire($key,$eTag,$strData) {
		return CkCache_SaveTextNoExpire($this->_cPtr,$key,$eTag,$strData);
	}

	function SaveTextStr($key,$expireDateTimeStr,$eTag,$strData) {
		return CkCache_SaveTextStr($this->_cPtr,$key,$expireDateTimeStr,$eTag,$strData);
	}

	function SaveToCache($key,$expire,$eTag,$data) {
		return CkCache_SaveToCache($this->_cPtr,$key,$expire,$eTag,$data);
	}

	function SaveToCacheDt($key,$expire,$eTag,$data) {
		return CkCache_SaveToCacheDt($this->_cPtr,$key,$expire,$eTag,$data);
	}

	function SaveToCacheNoExpire($key,$eTag,$data) {
		return CkCache_SaveToCacheNoExpire($this->_cPtr,$key,$eTag,$data);
	}

	function SaveToCacheStr($url,$expireDateTimeStr,$eTag,$data) {
		return CkCache_SaveToCacheStr($this->_cPtr,$url,$expireDateTimeStr,$eTag,$data);
	}

	function UpdateExpiration($key,$dt) {
		return CkCache_UpdateExpiration($this->_cPtr,$key,$dt);
	}

	function UpdateExpirationDt($key,$dt) {
		return CkCache_UpdateExpirationDt($this->_cPtr,$key,$dt);
	}

	function UpdateExpirationStr($url,$dateTimeStr) {
		return CkCache_UpdateExpirationStr($this->_cPtr,$url,$dateTimeStr);
	}
}

class CkDh {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkDh') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkDh();
	}

	function get_Utf8() {
		return CkDh_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkDh_put_Utf8($this->_cPtr,$b);
	}

	function get_G() {
		return CkDh_get_G($this->_cPtr);
	}

	function get_LastErrorHtml($str) {
		CkDh_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkDh_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkDh_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkDh_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkDh_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkDh_lastErrorXml($this->_cPtr);
	}

	function get_P($str) {
		CkDh_get_P($this->_cPtr,$str);
	}

	function p() {
		return CkDh_p($this->_cPtr);
	}

	function get_Version($str) {
		CkDh_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkDh_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkDh_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkDh_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkDh_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkDh_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkDh_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function createE($numBits) {
		return CkDh_createE($this->_cPtr,$numBits);
	}

	function findK($e) {
		return CkDh_findK($this->_cPtr,$e);
	}

	function GenPG($numBits,$g) {
		return CkDh_GenPG($this->_cPtr,$numBits,$g);
	}

	function SaveLastError($path) {
		return CkDh_SaveLastError($this->_cPtr,$path);
	}

	function SetPG($p,$g) {
		return CkDh_SetPG($this->_cPtr,$p,$g);
	}

	function UnlockComponent($unlockCode) {
		return CkDh_UnlockComponent($this->_cPtr,$unlockCode);
	}

	function UseKnownPrime($index) {
		CkDh_UseKnownPrime($this->_cPtr,$index);
	}
}

class CkDsa {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkDsa') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkDsa();
	}

	function get_Utf8() {
		return CkDsa_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkDsa_put_Utf8($this->_cPtr,$b);
	}

	function get_GroupSize() {
		return CkDsa_get_GroupSize($this->_cPtr);
	}

	function put_GroupSize($newVal) {
		CkDsa_put_GroupSize($this->_cPtr,$newVal);
	}

	function get_Hash($outBytes) {
		CkDsa_get_Hash($this->_cPtr,$outBytes);
	}

	function put_Hash($inBytes) {
		CkDsa_put_Hash($this->_cPtr,$inBytes);
	}

	function get_HexG($str) {
		CkDsa_get_HexG($this->_cPtr,$str);
	}

	function hexG() {
		return CkDsa_hexG($this->_cPtr);
	}

	function get_HexP($str) {
		CkDsa_get_HexP($this->_cPtr,$str);
	}

	function hexP() {
		return CkDsa_hexP($this->_cPtr);
	}

	function get_HexQ($str) {
		CkDsa_get_HexQ($this->_cPtr,$str);
	}

	function hexQ() {
		return CkDsa_hexQ($this->_cPtr);
	}

	function get_HexX($str) {
		CkDsa_get_HexX($this->_cPtr,$str);
	}

	function hexX() {
		return CkDsa_hexX($this->_cPtr);
	}

	function get_HexY($str) {
		CkDsa_get_HexY($this->_cPtr,$str);
	}

	function hexY() {
		return CkDsa_hexY($this->_cPtr);
	}

	function get_LastErrorHtml($str) {
		CkDsa_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkDsa_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkDsa_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkDsa_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkDsa_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkDsa_lastErrorXml($this->_cPtr);
	}

	function get_Signature($outBytes) {
		CkDsa_get_Signature($this->_cPtr,$outBytes);
	}

	function put_Signature($inBytes) {
		CkDsa_put_Signature($this->_cPtr,$inBytes);
	}

	function get_Version($str) {
		CkDsa_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkDsa_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkDsa_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkDsa_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkDsa_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkDsa_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkDsa_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function FromDer($derData) {
		return CkDsa_FromDer($this->_cPtr,$derData);
	}

	function FromDerFile($path) {
		return CkDsa_FromDerFile($this->_cPtr,$path);
	}

	function FromEncryptedPem($password,$pemData) {
		return CkDsa_FromEncryptedPem($this->_cPtr,$password,$pemData);
	}

	function FromPem($pemData) {
		return CkDsa_FromPem($this->_cPtr,$pemData);
	}

	function FromPublicDer($derData) {
		return CkDsa_FromPublicDer($this->_cPtr,$derData);
	}

	function FromPublicDerFile($path) {
		return CkDsa_FromPublicDerFile($this->_cPtr,$path);
	}

	function FromPublicPem($pemData) {
		return CkDsa_FromPublicPem($this->_cPtr,$pemData);
	}

	function FromXml($xmlKey) {
		return CkDsa_FromXml($this->_cPtr,$xmlKey);
	}

	function GenKey($numBits) {
		return CkDsa_GenKey($this->_cPtr,$numBits);
	}

	function GenKeyFromParamsDer($derBytes) {
		return CkDsa_GenKeyFromParamsDer($this->_cPtr,$derBytes);
	}

	function GenKeyFromParamsDerFile($path) {
		return CkDsa_GenKeyFromParamsDerFile($this->_cPtr,$path);
	}

	function GenKeyFromParamsPem($pem) {
		return CkDsa_GenKeyFromParamsPem($this->_cPtr,$pem);
	}

	function GenKeyFromParamsPemFile($path) {
		return CkDsa_GenKeyFromParamsPemFile($this->_cPtr,$path);
	}

	function getEncodedHash($encoding) {
		return CkDsa_getEncodedHash($this->_cPtr,$encoding);
	}

	function encodedHash($encoding) {
		return CkDsa_encodedHash($this->_cPtr,$encoding);
	}

	function getEncodedSignature($encoding) {
		return CkDsa_getEncodedSignature($this->_cPtr,$encoding);
	}

	function encodedSignature($encoding) {
		return CkDsa_encodedSignature($this->_cPtr,$encoding);
	}

	function loadText($path) {
		return CkDsa_loadText($this->_cPtr,$path);
	}

	function SaveLastError($path) {
		return CkDsa_SaveLastError($this->_cPtr,$path);
	}

	function SaveText($strToSave,$path) {
		return CkDsa_SaveText($this->_cPtr,$strToSave,$path);
	}

	function SetEncodedHash($encoding,$encodedHash) {
		return CkDsa_SetEncodedHash($this->_cPtr,$encoding,$encodedHash);
	}

	function SetEncodedSignature($encoding,$encodedSig) {
		return CkDsa_SetEncodedSignature($this->_cPtr,$encoding,$encodedSig);
	}

	function SetEncodedSignatureRS($encoding,$encodedR,$encodedS) {
		return CkDsa_SetEncodedSignatureRS($this->_cPtr,$encoding,$encodedR,$encodedS);
	}

	function SetKeyExplicit($groupSizeInBytes,$pHex,$qHex,$gHex,$xHex) {
		return CkDsa_SetKeyExplicit($this->_cPtr,$groupSizeInBytes,$pHex,$qHex,$gHex,$xHex);
	}

	function SetPubKeyExplicit($groupSizeInBytes,$pHex,$qHex,$gHex,$yHex) {
		return CkDsa_SetPubKeyExplicit($this->_cPtr,$groupSizeInBytes,$pHex,$qHex,$gHex,$yHex);
	}

	function SignHash() {
		return CkDsa_SignHash($this->_cPtr);
	}

	function ToDer($outBytes) {
		return CkDsa_ToDer($this->_cPtr,$outBytes);
	}

	function ToDerFile($path) {
		return CkDsa_ToDerFile($this->_cPtr,$path);
	}

	function toEncryptedPem($password) {
		return CkDsa_toEncryptedPem($this->_cPtr,$password);
	}

	function toPem() {
		return CkDsa_toPem($this->_cPtr);
	}

	function ToPublicDer($outBytes) {
		return CkDsa_ToPublicDer($this->_cPtr,$outBytes);
	}

	function ToPublicDerFile($path) {
		return CkDsa_ToPublicDerFile($this->_cPtr,$path);
	}

	function toPublicPem() {
		return CkDsa_toPublicPem($this->_cPtr);
	}

	function toXml($bPublicOnly) {
		return CkDsa_toXml($this->_cPtr,$bPublicOnly);
	}

	function UnlockComponent($unlockCode) {
		return CkDsa_UnlockComponent($this->_cPtr,$unlockCode);
	}

	function Verify() {
		return CkDsa_Verify($this->_cPtr);
	}

	function VerifyKey() {
		return CkDsa_VerifyKey($this->_cPtr);
	}
}

class CkSFtp {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkSFtp') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkSFtp();
	}

	function get_Utf8() {
		return CkSFtp_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkSFtp_put_Utf8($this->_cPtr,$b);
	}

	function get_AccumulateBuffer($outBytes) {
		CkSFtp_get_AccumulateBuffer($this->_cPtr,$outBytes);
	}

	function get_ClientIdentifier($str) {
		CkSFtp_get_ClientIdentifier($this->_cPtr,$str);
	}

	function clientIdentifier() {
		return CkSFtp_clientIdentifier($this->_cPtr);
	}

	function put_ClientIdentifier($newVal) {
		CkSFtp_put_ClientIdentifier($this->_cPtr,$newVal);
	}

	function get_ClientIpAddress($str) {
		CkSFtp_get_ClientIpAddress($this->_cPtr,$str);
	}

	function clientIpAddress() {
		return CkSFtp_clientIpAddress($this->_cPtr);
	}

	function put_ClientIpAddress($newVal) {
		CkSFtp_put_ClientIpAddress($this->_cPtr,$newVal);
	}

	function get_ConnectTimeoutMs() {
		return CkSFtp_get_ConnectTimeoutMs($this->_cPtr);
	}

	function put_ConnectTimeoutMs($newVal) {
		CkSFtp_put_ConnectTimeoutMs($this->_cPtr,$newVal);
	}

	function get_DisconnectCode() {
		return CkSFtp_get_DisconnectCode($this->_cPtr);
	}

	function get_DisconnectReason($str) {
		CkSFtp_get_DisconnectReason($this->_cPtr,$str);
	}

	function disconnectReason() {
		return CkSFtp_disconnectReason($this->_cPtr);
	}

	function get_EnableCache() {
		return CkSFtp_get_EnableCache($this->_cPtr);
	}

	function put_EnableCache($newVal) {
		CkSFtp_put_EnableCache($this->_cPtr,$newVal);
	}

	function get_FilenameCharset($str) {
		CkSFtp_get_FilenameCharset($this->_cPtr,$str);
	}

	function filenameCharset() {
		return CkSFtp_filenameCharset($this->_cPtr);
	}

	function put_FilenameCharset($newVal) {
		CkSFtp_put_FilenameCharset($this->_cPtr,$newVal);
	}

	function get_ForceCipher($str) {
		CkSFtp_get_ForceCipher($this->_cPtr,$str);
	}

	function forceCipher() {
		return CkSFtp_forceCipher($this->_cPtr);
	}

	function put_ForceCipher($newVal) {
		CkSFtp_put_ForceCipher($this->_cPtr,$newVal);
	}

	function get_ForceV3() {
		return CkSFtp_get_ForceV3($this->_cPtr);
	}

	function put_ForceV3($newVal) {
		CkSFtp_put_ForceV3($this->_cPtr,$newVal);
	}

	function get_HeartbeatMs() {
		return CkSFtp_get_HeartbeatMs($this->_cPtr);
	}

	function put_HeartbeatMs($newVal) {
		CkSFtp_put_HeartbeatMs($this->_cPtr,$newVal);
	}

	function get_HostKeyAlg($str) {
		CkSFtp_get_HostKeyAlg($this->_cPtr,$str);
	}

	function hostKeyAlg() {
		return CkSFtp_hostKeyAlg($this->_cPtr);
	}

	function put_HostKeyAlg($newVal) {
		CkSFtp_put_HostKeyAlg($this->_cPtr,$newVal);
	}

	function get_HostKeyFingerprint($str) {
		CkSFtp_get_HostKeyFingerprint($this->_cPtr,$str);
	}

	function hostKeyFingerprint() {
		return CkSFtp_hostKeyFingerprint($this->_cPtr);
	}

	function get_HttpProxyAuthMethod($str) {
		CkSFtp_get_HttpProxyAuthMethod($this->_cPtr,$str);
	}

	function httpProxyAuthMethod() {
		return CkSFtp_httpProxyAuthMethod($this->_cPtr);
	}

	function put_HttpProxyAuthMethod($newVal) {
		CkSFtp_put_HttpProxyAuthMethod($this->_cPtr,$newVal);
	}

	function get_HttpProxyDomain($str) {
		CkSFtp_get_HttpProxyDomain($this->_cPtr,$str);
	}

	function httpProxyDomain() {
		return CkSFtp_httpProxyDomain($this->_cPtr);
	}

	function put_HttpProxyDomain($newVal) {
		CkSFtp_put_HttpProxyDomain($this->_cPtr,$newVal);
	}

	function get_HttpProxyHostname($str) {
		CkSFtp_get_HttpProxyHostname($this->_cPtr,$str);
	}

	function httpProxyHostname() {
		return CkSFtp_httpProxyHostname($this->_cPtr);
	}

	function put_HttpProxyHostname($newVal) {
		CkSFtp_put_HttpProxyHostname($this->_cPtr,$newVal);
	}

	function get_HttpProxyPassword($str) {
		CkSFtp_get_HttpProxyPassword($this->_cPtr,$str);
	}

	function httpProxyPassword() {
		return CkSFtp_httpProxyPassword($this->_cPtr);
	}

	function put_HttpProxyPassword($newVal) {
		CkSFtp_put_HttpProxyPassword($this->_cPtr,$newVal);
	}

	function get_HttpProxyPort() {
		return CkSFtp_get_HttpProxyPort($this->_cPtr);
	}

	function put_HttpProxyPort($newVal) {
		CkSFtp_put_HttpProxyPort($this->_cPtr,$newVal);
	}

	function get_HttpProxyUsername($str) {
		CkSFtp_get_HttpProxyUsername($this->_cPtr,$str);
	}

	function httpProxyUsername() {
		return CkSFtp_httpProxyUsername($this->_cPtr);
	}

	function put_HttpProxyUsername($newVal) {
		CkSFtp_put_HttpProxyUsername($this->_cPtr,$newVal);
	}

	function get_IdleTimeoutMs() {
		return CkSFtp_get_IdleTimeoutMs($this->_cPtr);
	}

	function put_IdleTimeoutMs($newVal) {
		CkSFtp_put_IdleTimeoutMs($this->_cPtr,$newVal);
	}

	function get_IncludeDotDirs() {
		return CkSFtp_get_IncludeDotDirs($this->_cPtr);
	}

	function put_IncludeDotDirs($newVal) {
		CkSFtp_put_IncludeDotDirs($this->_cPtr,$newVal);
	}

	function get_InitializeFailCode() {
		return CkSFtp_get_InitializeFailCode($this->_cPtr);
	}

	function get_InitializeFailReason($str) {
		CkSFtp_get_InitializeFailReason($this->_cPtr,$str);
	}

	function initializeFailReason() {
		return CkSFtp_initializeFailReason($this->_cPtr);
	}

	function get_IsConnected() {
		return CkSFtp_get_IsConnected($this->_cPtr);
	}

	function get_KeepSessionLog() {
		return CkSFtp_get_KeepSessionLog($this->_cPtr);
	}

	function put_KeepSessionLog($newVal) {
		CkSFtp_put_KeepSessionLog($this->_cPtr,$newVal);
	}

	function get_LastErrorHtml($str) {
		CkSFtp_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkSFtp_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkSFtp_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkSFtp_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkSFtp_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkSFtp_lastErrorXml($this->_cPtr);
	}

	function get_MaxPacketSize() {
		return CkSFtp_get_MaxPacketSize($this->_cPtr);
	}

	function put_MaxPacketSize($newVal) {
		CkSFtp_put_MaxPacketSize($this->_cPtr,$newVal);
	}

	function get_PasswordChangeRequested() {
		return CkSFtp_get_PasswordChangeRequested($this->_cPtr);
	}

	function get_PreserveDate() {
		return CkSFtp_get_PreserveDate($this->_cPtr);
	}

	function put_PreserveDate($newVal) {
		CkSFtp_put_PreserveDate($this->_cPtr,$newVal);
	}

	function get_ProtocolVersion() {
		return CkSFtp_get_ProtocolVersion($this->_cPtr);
	}

	function get_SessionLog($str) {
		CkSFtp_get_SessionLog($this->_cPtr,$str);
	}

	function sessionLog() {
		return CkSFtp_sessionLog($this->_cPtr);
	}

	function get_SoRcvBuf() {
		return CkSFtp_get_SoRcvBuf($this->_cPtr);
	}

	function put_SoRcvBuf($newVal) {
		CkSFtp_put_SoRcvBuf($this->_cPtr,$newVal);
	}

	function get_SoSndBuf() {
		return CkSFtp_get_SoSndBuf($this->_cPtr);
	}

	function put_SoSndBuf($newVal) {
		CkSFtp_put_SoSndBuf($this->_cPtr,$newVal);
	}

	function get_SocksHostname($str) {
		CkSFtp_get_SocksHostname($this->_cPtr,$str);
	}

	function socksHostname() {
		return CkSFtp_socksHostname($this->_cPtr);
	}

	function put_SocksHostname($newVal) {
		CkSFtp_put_SocksHostname($this->_cPtr,$newVal);
	}

	function get_SocksPassword($str) {
		CkSFtp_get_SocksPassword($this->_cPtr,$str);
	}

	function socksPassword() {
		return CkSFtp_socksPassword($this->_cPtr);
	}

	function put_SocksPassword($newVal) {
		CkSFtp_put_SocksPassword($this->_cPtr,$newVal);
	}

	function get_SocksPort() {
		return CkSFtp_get_SocksPort($this->_cPtr);
	}

	function put_SocksPort($newVal) {
		CkSFtp_put_SocksPort($this->_cPtr,$newVal);
	}

	function get_SocksUsername($str) {
		CkSFtp_get_SocksUsername($this->_cPtr,$str);
	}

	function socksUsername() {
		return CkSFtp_socksUsername($this->_cPtr);
	}

	function put_SocksUsername($newVal) {
		CkSFtp_put_SocksUsername($this->_cPtr,$newVal);
	}

	function get_SocksVersion() {
		return CkSFtp_get_SocksVersion($this->_cPtr);
	}

	function put_SocksVersion($newVal) {
		CkSFtp_put_SocksVersion($this->_cPtr,$newVal);
	}

	function get_TcpNoDelay() {
		return CkSFtp_get_TcpNoDelay($this->_cPtr);
	}

	function put_TcpNoDelay($newVal) {
		CkSFtp_put_TcpNoDelay($this->_cPtr,$newVal);
	}

	function get_UploadChunkSize() {
		return CkSFtp_get_UploadChunkSize($this->_cPtr);
	}

	function put_UploadChunkSize($newVal) {
		CkSFtp_put_UploadChunkSize($this->_cPtr,$newVal);
	}

	function get_UtcMode() {
		return CkSFtp_get_UtcMode($this->_cPtr);
	}

	function put_UtcMode($newVal) {
		CkSFtp_put_UtcMode($this->_cPtr,$newVal);
	}

	function get_Version($str) {
		CkSFtp_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkSFtp_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkSFtp_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkSFtp_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkSFtp_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkSFtp_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkSFtp_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function AccumulateBytes($sftpHandle,$maxBytes) {
		return CkSFtp_AccumulateBytes($this->_cPtr,$sftpHandle,$maxBytes);
	}

	function add64($n1,$n2) {
		return CkSFtp_add64($this->_cPtr,$n1,$n2);
	}

	function AuthenticatePk($username,$privateKey) {
		return CkSFtp_AuthenticatePk($this->_cPtr,$username,$privateKey);
	}

	function AuthenticatePw($login,$password) {
		return CkSFtp_AuthenticatePw($this->_cPtr,$login,$password);
	}

	function AuthenticatePwPk($username,$password,$privateKey) {
		return CkSFtp_AuthenticatePwPk($this->_cPtr,$username,$password,$privateKey);
	}

	function ClearAccumulateBuffer() {
		CkSFtp_ClearAccumulateBuffer($this->_cPtr);
	}

	function ClearCache() {
		CkSFtp_ClearCache($this->_cPtr);
	}

	function ClearSessionLog() {
		CkSFtp_ClearSessionLog($this->_cPtr);
	}

	function CloseHandle($sftpHandle) {
		return CkSFtp_CloseHandle($this->_cPtr,$sftpHandle);
	}

	function Connect($hostname,$port) {
		return CkSFtp_Connect($this->_cPtr,$hostname,$port);
	}

	function CopyFileAttr($localFilePath,$remotePathOrHandle,$bIsHandle) {
		return CkSFtp_CopyFileAttr($this->_cPtr,$localFilePath,$remotePathOrHandle,$bIsHandle);
	}

	function CreateDir($path) {
		return CkSFtp_CreateDir($this->_cPtr,$path);
	}

	function Disconnect() {
		CkSFtp_Disconnect($this->_cPtr);
	}

	function DownloadFile($sftpHandle,$toFilePath) {
		return CkSFtp_DownloadFile($this->_cPtr,$sftpHandle,$toFilePath);
	}

	function DownloadFileByName($remoteFilePath,$localFilePath) {
		return CkSFtp_DownloadFileByName($this->_cPtr,$remoteFilePath,$localFilePath);
	}

	function Eof($sftpHandle) {
		return CkSFtp_Eof($this->_cPtr,$sftpHandle);
	}

	function GetFileCreateDt($filePathOrHandle,$bFollowLinks,$bIsHandle) {
		$r=CkSFtp_GetFileCreateDt($this->_cPtr,$filePathOrHandle,$bFollowLinks,$bIsHandle);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkDateTime($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetFileCreateTime($filePathOrHandle,$bFollowLinks,$bIsHandle,$outSysTime) {
		return CkSFtp_GetFileCreateTime($this->_cPtr,$filePathOrHandle,$bFollowLinks,$bIsHandle,$outSysTime);
	}

	function getFileCreateTimeStr($pathOrHandle,$bFollowLinks,$bIsHandle) {
		return CkSFtp_getFileCreateTimeStr($this->_cPtr,$pathOrHandle,$bFollowLinks,$bIsHandle);
	}

	function fileCreateTimeStr($pathOrHandle,$bFollowLinks,$bIsHandle) {
		return CkSFtp_fileCreateTimeStr($this->_cPtr,$pathOrHandle,$bFollowLinks,$bIsHandle);
	}

	function getFileGroup($filePathOrHandle,$bFollowLinks,$bIsHandle) {
		return CkSFtp_getFileGroup($this->_cPtr,$filePathOrHandle,$bFollowLinks,$bIsHandle);
	}

	function fileGroup($filePathOrHandle,$bFollowLinks,$bIsHandle) {
		return CkSFtp_fileGroup($this->_cPtr,$filePathOrHandle,$bFollowLinks,$bIsHandle);
	}

	function GetFileLastAccess($filePathOrHandle,$bFollowLinks,$bIsHandle,$outSysTime) {
		return CkSFtp_GetFileLastAccess($this->_cPtr,$filePathOrHandle,$bFollowLinks,$bIsHandle,$outSysTime);
	}

	function GetFileLastAccessDt($filePathOrHandle,$bFollowLinks,$bIsHandle) {
		$r=CkSFtp_GetFileLastAccessDt($this->_cPtr,$filePathOrHandle,$bFollowLinks,$bIsHandle);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkDateTime($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function getFileLastAccessStr($pathOrHandle,$bFollowLinks,$bIsHandle) {
		return CkSFtp_getFileLastAccessStr($this->_cPtr,$pathOrHandle,$bFollowLinks,$bIsHandle);
	}

	function fileLastAccessStr($pathOrHandle,$bFollowLinks,$bIsHandle) {
		return CkSFtp_fileLastAccessStr($this->_cPtr,$pathOrHandle,$bFollowLinks,$bIsHandle);
	}

	function GetFileLastModified($filePathOrHandle,$bFollowLinks,$bIsHandle,$outSysTime) {
		return CkSFtp_GetFileLastModified($this->_cPtr,$filePathOrHandle,$bFollowLinks,$bIsHandle,$outSysTime);
	}

	function GetFileLastModifiedDt($filePathOrHandle,$bFollowLinks,$bIsHandle) {
		$r=CkSFtp_GetFileLastModifiedDt($this->_cPtr,$filePathOrHandle,$bFollowLinks,$bIsHandle);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkDateTime($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function getFileLastModifiedStr($pathOrHandle,$bFollowLinks,$bIsHandle) {
		return CkSFtp_getFileLastModifiedStr($this->_cPtr,$pathOrHandle,$bFollowLinks,$bIsHandle);
	}

	function fileLastModifiedStr($pathOrHandle,$bFollowLinks,$bIsHandle) {
		return CkSFtp_fileLastModifiedStr($this->_cPtr,$pathOrHandle,$bFollowLinks,$bIsHandle);
	}

	function getFileOwner($filePathOrHandle,$bFollowLinks,$bIsHandle) {
		return CkSFtp_getFileOwner($this->_cPtr,$filePathOrHandle,$bFollowLinks,$bIsHandle);
	}

	function fileOwner($filePathOrHandle,$bFollowLinks,$bIsHandle) {
		return CkSFtp_fileOwner($this->_cPtr,$filePathOrHandle,$bFollowLinks,$bIsHandle);
	}

	function GetFilePermissions($filePathOrHandle,$bFollowLinks,$bIsHandle) {
		return CkSFtp_GetFilePermissions($this->_cPtr,$filePathOrHandle,$bFollowLinks,$bIsHandle);
	}

	function GetFileSize32($filePathOrHandle,$bFollowLinks,$bIsHandle) {
		return CkSFtp_GetFileSize32($this->_cPtr,$filePathOrHandle,$bFollowLinks,$bIsHandle);
	}

	function GetFileSize64($filePathOrHandle,$bFollowLinks,$bIsHandle) {
		return CkSFtp_GetFileSize64($this->_cPtr,$filePathOrHandle,$bFollowLinks,$bIsHandle);
	}

	function getFileSizeStr($filePathOrHandle,$bFollowLinks,$bIsHandle) {
		return CkSFtp_getFileSizeStr($this->_cPtr,$filePathOrHandle,$bFollowLinks,$bIsHandle);
	}

	function fileSizeStr($filePathOrHandle,$bFollowLinks,$bIsHandle) {
		return CkSFtp_fileSizeStr($this->_cPtr,$filePathOrHandle,$bFollowLinks,$bIsHandle);
	}

	function InitializeSftp() {
		return CkSFtp_InitializeSftp($this->_cPtr);
	}

	function LastReadFailed($sftpHandle) {
		return CkSFtp_LastReadFailed($this->_cPtr,$sftpHandle);
	}

	function LastReadNumBytes($sftpHandle) {
		return CkSFtp_LastReadNumBytes($this->_cPtr,$sftpHandle);
	}

	function openDir($path) {
		return CkSFtp_openDir($this->_cPtr,$path);
	}

	function openFile($filePath,$access,$createDisp) {
		return CkSFtp_openFile($this->_cPtr,$filePath,$access,$createDisp);
	}

	function ReadDir($sftpHandle) {
		$r=CkSFtp_ReadDir($this->_cPtr,$sftpHandle);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkSFtpDir($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function ReadFileBytes($sftpHandle,$numBytes,$outBytes) {
		return CkSFtp_ReadFileBytes($this->_cPtr,$sftpHandle,$numBytes,$outBytes);
	}

	function ReadFileBytes32($sftpHandle,$offset,$numBytes,$outBytes) {
		return CkSFtp_ReadFileBytes32($this->_cPtr,$sftpHandle,$offset,$numBytes,$outBytes);
	}

	function ReadFileBytes64($sftpHandle,$offset64,$numBytes,$outBytes) {
		return CkSFtp_ReadFileBytes64($this->_cPtr,$sftpHandle,$offset64,$numBytes,$outBytes);
	}

	function ReadFileBytes64s($sftpHandle,$offset64,$numBytes,$outBytes) {
		return CkSFtp_ReadFileBytes64s($this->_cPtr,$sftpHandle,$offset64,$numBytes,$outBytes);
	}

	function readFileText($sftpHandle,$numBytes,$charset) {
		return CkSFtp_readFileText($this->_cPtr,$sftpHandle,$numBytes,$charset);
	}

	function readFileText32($sftpHandle,$offset32,$numBytes,$charset) {
		return CkSFtp_readFileText32($this->_cPtr,$sftpHandle,$offset32,$numBytes,$charset);
	}

	function readFileText64($sftpHandle,$offset64,$numBytes,$charset) {
		return CkSFtp_readFileText64($this->_cPtr,$sftpHandle,$offset64,$numBytes,$charset);
	}

	function readFileText64s($sftpHandle,$offset64,$numBytes,$charset) {
		return CkSFtp_readFileText64s($this->_cPtr,$sftpHandle,$offset64,$numBytes,$charset);
	}

	function realPath($originalPath,$composePath) {
		return CkSFtp_realPath($this->_cPtr,$originalPath,$composePath);
	}

	function RemoveDir($path) {
		return CkSFtp_RemoveDir($this->_cPtr,$path);
	}

	function RemoveFile($filePath) {
		return CkSFtp_RemoveFile($this->_cPtr,$filePath);
	}

	function RenameFileOrDir($oldPath,$newPath) {
		return CkSFtp_RenameFileOrDir($this->_cPtr,$oldPath,$newPath);
	}

	function ResumeDownloadFileByName($remoteFilePath,$localFilePath) {
		return CkSFtp_ResumeDownloadFileByName($this->_cPtr,$remoteFilePath,$localFilePath);
	}

	function ResumeUploadFileByName($remoteFilePath,$localFilePath) {
		return CkSFtp_ResumeUploadFileByName($this->_cPtr,$remoteFilePath,$localFilePath);
	}

	function SaveLastError($path) {
		return CkSFtp_SaveLastError($this->_cPtr,$path);
	}

	function SetCreateDt($pathOrHandle,$bIsHandle,$createTime) {
		return CkSFtp_SetCreateDt($this->_cPtr,$pathOrHandle,$bIsHandle,$createTime);
	}

	function SetCreateTime($pathOrHandle,$bIsHandle,$createTime) {
		return CkSFtp_SetCreateTime($this->_cPtr,$pathOrHandle,$bIsHandle,$createTime);
	}

	function SetCreateTimeStr($pathOrHandle,$bIsHandle,$createTimeStr) {
		return CkSFtp_SetCreateTimeStr($this->_cPtr,$pathOrHandle,$bIsHandle,$createTimeStr);
	}

	function SetLastAccessDt($pathOrHandle,$bIsHandle,$createTime) {
		return CkSFtp_SetLastAccessDt($this->_cPtr,$pathOrHandle,$bIsHandle,$createTime);
	}

	function SetLastAccessTime($pathOrHandle,$bIsHandle,$lastAccessTime) {
		return CkSFtp_SetLastAccessTime($this->_cPtr,$pathOrHandle,$bIsHandle,$lastAccessTime);
	}

	function SetLastAccessTimeStr($pathOrHandle,$bIsHandle,$createTimeStr) {
		return CkSFtp_SetLastAccessTimeStr($this->_cPtr,$pathOrHandle,$bIsHandle,$createTimeStr);
	}

	function SetLastModifiedDt($pathOrHandle,$bIsHandle,$createTime) {
		return CkSFtp_SetLastModifiedDt($this->_cPtr,$pathOrHandle,$bIsHandle,$createTime);
	}

	function SetLastModifiedTime($pathOrHandle,$bIsHandle,$lastModTime) {
		return CkSFtp_SetLastModifiedTime($this->_cPtr,$pathOrHandle,$bIsHandle,$lastModTime);
	}

	function SetLastModifiedTimeStr($pathOrHandle,$bIsHandle,$createTimeStr) {
		return CkSFtp_SetLastModifiedTimeStr($this->_cPtr,$pathOrHandle,$bIsHandle,$createTimeStr);
	}

	function SetOwnerAndGroup($pathOrHandle,$bIsHandle,$owner,$group) {
		return CkSFtp_SetOwnerAndGroup($this->_cPtr,$pathOrHandle,$bIsHandle,$owner,$group);
	}

	function SetPermissions($pathOrHandle,$bIsHandle,$perm) {
		return CkSFtp_SetPermissions($this->_cPtr,$pathOrHandle,$bIsHandle,$perm);
	}

	function UnlockComponent($unlockCode) {
		return CkSFtp_UnlockComponent($this->_cPtr,$unlockCode);
	}

	function UploadFile($sftpHandle,$fromFilePath) {
		return CkSFtp_UploadFile($this->_cPtr,$sftpHandle,$fromFilePath);
	}

	function UploadFileByName($remoteFilePath,$localFilePath) {
		return CkSFtp_UploadFileByName($this->_cPtr,$remoteFilePath,$localFilePath);
	}

	function WriteFileBytes($sftpHandle,$data) {
		return CkSFtp_WriteFileBytes($this->_cPtr,$sftpHandle,$data);
	}

	function WriteFileBytes32($sftpHandle,$offset,$data) {
		return CkSFtp_WriteFileBytes32($this->_cPtr,$sftpHandle,$offset,$data);
	}

	function WriteFileBytes64($sftpHandle,$offset64,$data) {
		return CkSFtp_WriteFileBytes64($this->_cPtr,$sftpHandle,$offset64,$data);
	}

	function WriteFileBytes64s($sftpHandle,$offset64,$data) {
		return CkSFtp_WriteFileBytes64s($this->_cPtr,$sftpHandle,$offset64,$data);
	}

	function WriteFileText($sftpHandle,$charset,$textData) {
		return CkSFtp_WriteFileText($this->_cPtr,$sftpHandle,$charset,$textData);
	}

	function WriteFileText32($sftpHandle,$offset32,$charset,$textData) {
		return CkSFtp_WriteFileText32($this->_cPtr,$sftpHandle,$offset32,$charset,$textData);
	}

	function WriteFileText64($sftpHandle,$offset64,$charset,$textData) {
		return CkSFtp_WriteFileText64($this->_cPtr,$sftpHandle,$offset64,$charset,$textData);
	}

	function WriteFileText64s($sftpHandle,$offset64,$charset,$textData) {
		return CkSFtp_WriteFileText64s($this->_cPtr,$sftpHandle,$offset64,$charset,$textData);
	}
}

class CkSFtpFile {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkSFtpFile') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkSFtpFile();
	}

	function get_Utf8() {
		return CkSFtpFile_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkSFtpFile_put_Utf8($this->_cPtr,$b);
	}

	function get_CreateTime($outSysTime) {
		CkSFtpFile_get_CreateTime($this->_cPtr,$outSysTime);
	}

	function get_CreateTimeStr($str) {
		CkSFtpFile_get_CreateTimeStr($this->_cPtr,$str);
	}

	function createTimeStr() {
		return CkSFtpFile_createTimeStr($this->_cPtr);
	}

	function get_FileType($str) {
		CkSFtpFile_get_FileType($this->_cPtr,$str);
	}

	function fileType() {
		return CkSFtpFile_fileType($this->_cPtr);
	}

	function get_Filename($str) {
		CkSFtpFile_get_Filename($this->_cPtr,$str);
	}

	function filename() {
		return CkSFtpFile_filename($this->_cPtr);
	}

	function get_Gid() {
		return CkSFtpFile_get_Gid($this->_cPtr);
	}

	function get_Group($str) {
		CkSFtpFile_get_Group($this->_cPtr,$str);
	}

	function group() {
		return CkSFtpFile_group($this->_cPtr);
	}

	function get_IsAppendOnly() {
		return CkSFtpFile_get_IsAppendOnly($this->_cPtr);
	}

	function get_IsArchive() {
		return CkSFtpFile_get_IsArchive($this->_cPtr);
	}

	function get_IsCaseInsensitive() {
		return CkSFtpFile_get_IsCaseInsensitive($this->_cPtr);
	}

	function get_IsCompressed() {
		return CkSFtpFile_get_IsCompressed($this->_cPtr);
	}

	function get_IsDirectory() {
		return CkSFtpFile_get_IsDirectory($this->_cPtr);
	}

	function get_IsEncrypted() {
		return CkSFtpFile_get_IsEncrypted($this->_cPtr);
	}

	function get_IsHidden() {
		return CkSFtpFile_get_IsHidden($this->_cPtr);
	}

	function get_IsImmutable() {
		return CkSFtpFile_get_IsImmutable($this->_cPtr);
	}

	function get_IsReadOnly() {
		return CkSFtpFile_get_IsReadOnly($this->_cPtr);
	}

	function get_IsRegular() {
		return CkSFtpFile_get_IsRegular($this->_cPtr);
	}

	function get_IsSparse() {
		return CkSFtpFile_get_IsSparse($this->_cPtr);
	}

	function get_IsSymLink() {
		return CkSFtpFile_get_IsSymLink($this->_cPtr);
	}

	function get_IsSync() {
		return CkSFtpFile_get_IsSync($this->_cPtr);
	}

	function get_IsSystem() {
		return CkSFtpFile_get_IsSystem($this->_cPtr);
	}

	function get_LastAccessTime($outSysTime) {
		CkSFtpFile_get_LastAccessTime($this->_cPtr,$outSysTime);
	}

	function get_LastAccessTimeStr($str) {
		CkSFtpFile_get_LastAccessTimeStr($this->_cPtr,$str);
	}

	function lastAccessTimeStr() {
		return CkSFtpFile_lastAccessTimeStr($this->_cPtr);
	}

	function get_LastErrorHtml($str) {
		CkSFtpFile_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkSFtpFile_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkSFtpFile_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkSFtpFile_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkSFtpFile_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkSFtpFile_lastErrorXml($this->_cPtr);
	}

	function get_LastModifiedTime($outSysTime) {
		CkSFtpFile_get_LastModifiedTime($this->_cPtr,$outSysTime);
	}

	function get_LastModifiedTimeStr($str) {
		CkSFtpFile_get_LastModifiedTimeStr($this->_cPtr,$str);
	}

	function lastModifiedTimeStr() {
		return CkSFtpFile_lastModifiedTimeStr($this->_cPtr);
	}

	function get_Owner($str) {
		CkSFtpFile_get_Owner($this->_cPtr,$str);
	}

	function owner() {
		return CkSFtpFile_owner($this->_cPtr);
	}

	function get_Permissions() {
		return CkSFtpFile_get_Permissions($this->_cPtr);
	}

	function get_Size32() {
		return CkSFtpFile_get_Size32($this->_cPtr);
	}

	function get_SizeStr($str) {
		CkSFtpFile_get_SizeStr($this->_cPtr,$str);
	}

	function sizeStr() {
		return CkSFtpFile_sizeStr($this->_cPtr);
	}

	function get_Uid() {
		return CkSFtpFile_get_Uid($this->_cPtr);
	}

	function get_Version($str) {
		CkSFtpFile_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkSFtpFile_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkSFtpFile_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkSFtpFile_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkSFtpFile_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkSFtpFile_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkSFtpFile_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function GetCreateDt() {
		$r=CkSFtpFile_GetCreateDt($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkDateTime($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetLastAccessDt() {
		$r=CkSFtpFile_GetLastAccessDt($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkDateTime($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function GetLastModifiedDt() {
		$r=CkSFtpFile_GetLastModifiedDt($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkDateTime($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function SaveLastError($path) {
		return CkSFtpFile_SaveLastError($this->_cPtr,$path);
	}
}

class CkSFtpDir {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkSFtpDir') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkSFtpDir();
	}

	function get_Utf8() {
		return CkSFtpDir_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkSFtpDir_put_Utf8($this->_cPtr,$b);
	}

	function get_LastErrorHtml($str) {
		CkSFtpDir_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkSFtpDir_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkSFtpDir_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkSFtpDir_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkSFtpDir_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkSFtpDir_lastErrorXml($this->_cPtr);
	}

	function get_NumFilesAndDirs() {
		return CkSFtpDir_get_NumFilesAndDirs($this->_cPtr);
	}

	function get_OriginalPath($str) {
		CkSFtpDir_get_OriginalPath($this->_cPtr,$str);
	}

	function originalPath() {
		return CkSFtpDir_originalPath($this->_cPtr);
	}

	function get_Version($str) {
		CkSFtpDir_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkSFtpDir_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkSFtpDir_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkSFtpDir_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkSFtpDir_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkSFtpDir_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkSFtpDir_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function GetFileObject($index) {
		$r=CkSFtpDir_GetFileObject($this->_cPtr,$index);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (!class_exists($c)) {
				return new CkSFtpFile($r);
			}
			return new $c($r);
		}
		return $r;
	}

	function getFilename($index) {
		return CkSFtpDir_getFilename($this->_cPtr,$index);
	}

	function filename($index) {
		return CkSFtpDir_filename($this->_cPtr,$index);
	}

	function SaveLastError($path) {
		return CkSFtpDir_SaveLastError($this->_cPtr,$path);
	}
}

class CkSsh {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkSsh') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkSsh();
	}

	function get_Utf8() {
		return CkSsh_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkSsh_put_Utf8($this->_cPtr,$b);
	}

	function get_ChannelOpenFailCode() {
		return CkSsh_get_ChannelOpenFailCode($this->_cPtr);
	}

	function get_ChannelOpenFailReason($str) {
		CkSsh_get_ChannelOpenFailReason($this->_cPtr,$str);
	}

	function channelOpenFailReason() {
		return CkSsh_channelOpenFailReason($this->_cPtr);
	}

	function get_ClientIdentifier($str) {
		CkSsh_get_ClientIdentifier($this->_cPtr,$str);
	}

	function clientIdentifier() {
		return CkSsh_clientIdentifier($this->_cPtr);
	}

	function put_ClientIdentifier($newVal) {
		CkSsh_put_ClientIdentifier($this->_cPtr,$newVal);
	}

	function get_ClientIpAddress($str) {
		CkSsh_get_ClientIpAddress($this->_cPtr,$str);
	}

	function clientIpAddress() {
		return CkSsh_clientIpAddress($this->_cPtr);
	}

	function put_ClientIpAddress($newVal) {
		CkSsh_put_ClientIpAddress($this->_cPtr,$newVal);
	}

	function get_ConnectTimeoutMs() {
		return CkSsh_get_ConnectTimeoutMs($this->_cPtr);
	}

	function put_ConnectTimeoutMs($newVal) {
		CkSsh_put_ConnectTimeoutMs($this->_cPtr,$newVal);
	}

	function get_DisconnectCode() {
		return CkSsh_get_DisconnectCode($this->_cPtr);
	}

	function get_DisconnectReason($str) {
		CkSsh_get_DisconnectReason($this->_cPtr,$str);
	}

	function disconnectReason() {
		return CkSsh_disconnectReason($this->_cPtr);
	}

	function get_ForceCipher($str) {
		CkSsh_get_ForceCipher($this->_cPtr,$str);
	}

	function forceCipher() {
		return CkSsh_forceCipher($this->_cPtr);
	}

	function put_ForceCipher($newVal) {
		CkSsh_put_ForceCipher($this->_cPtr,$newVal);
	}

	function get_HeartbeatMs() {
		return CkSsh_get_HeartbeatMs($this->_cPtr);
	}

	function put_HeartbeatMs($newVal) {
		CkSsh_put_HeartbeatMs($this->_cPtr,$newVal);
	}

	function get_HostKeyAlg($str) {
		CkSsh_get_HostKeyAlg($this->_cPtr,$str);
	}

	function hostKeyAlg() {
		return CkSsh_hostKeyAlg($this->_cPtr);
	}

	function put_HostKeyAlg($newVal) {
		CkSsh_put_HostKeyAlg($this->_cPtr,$newVal);
	}

	function get_HostKeyFingerprint($str) {
		CkSsh_get_HostKeyFingerprint($this->_cPtr,$str);
	}

	function hostKeyFingerprint() {
		return CkSsh_hostKeyFingerprint($this->_cPtr);
	}

	function get_HttpProxyAuthMethod($str) {
		CkSsh_get_HttpProxyAuthMethod($this->_cPtr,$str);
	}

	function httpProxyAuthMethod() {
		return CkSsh_httpProxyAuthMethod($this->_cPtr);
	}

	function put_HttpProxyAuthMethod($newVal) {
		CkSsh_put_HttpProxyAuthMethod($this->_cPtr,$newVal);
	}

	function get_HttpProxyDomain($str) {
		CkSsh_get_HttpProxyDomain($this->_cPtr,$str);
	}

	function httpProxyDomain() {
		return CkSsh_httpProxyDomain($this->_cPtr);
	}

	function put_HttpProxyDomain($newVal) {
		CkSsh_put_HttpProxyDomain($this->_cPtr,$newVal);
	}

	function get_HttpProxyHostname($str) {
		CkSsh_get_HttpProxyHostname($this->_cPtr,$str);
	}

	function httpProxyHostname() {
		return CkSsh_httpProxyHostname($this->_cPtr);
	}

	function put_HttpProxyHostname($newVal) {
		CkSsh_put_HttpProxyHostname($this->_cPtr,$newVal);
	}

	function get_HttpProxyPassword($str) {
		CkSsh_get_HttpProxyPassword($this->_cPtr,$str);
	}

	function httpProxyPassword() {
		return CkSsh_httpProxyPassword($this->_cPtr);
	}

	function put_HttpProxyPassword($newVal) {
		CkSsh_put_HttpProxyPassword($this->_cPtr,$newVal);
	}

	function get_HttpProxyPort() {
		return CkSsh_get_HttpProxyPort($this->_cPtr);
	}

	function put_HttpProxyPort($newVal) {
		CkSsh_put_HttpProxyPort($this->_cPtr,$newVal);
	}

	function get_HttpProxyUsername($str) {
		CkSsh_get_HttpProxyUsername($this->_cPtr,$str);
	}

	function httpProxyUsername() {
		return CkSsh_httpProxyUsername($this->_cPtr);
	}

	function put_HttpProxyUsername($newVal) {
		CkSsh_put_HttpProxyUsername($this->_cPtr,$newVal);
	}

	function get_IdleTimeoutMs() {
		return CkSsh_get_IdleTimeoutMs($this->_cPtr);
	}

	function put_IdleTimeoutMs($newVal) {
		CkSsh_put_IdleTimeoutMs($this->_cPtr,$newVal);
	}

	function get_IsConnected() {
		return CkSsh_get_IsConnected($this->_cPtr);
	}

	function get_KeepSessionLog() {
		return CkSsh_get_KeepSessionLog($this->_cPtr);
	}

	function put_KeepSessionLog($newVal) {
		CkSsh_put_KeepSessionLog($this->_cPtr,$newVal);
	}

	function get_LastErrorHtml($str) {
		CkSsh_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkSsh_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkSsh_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkSsh_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkSsh_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkSsh_lastErrorXml($this->_cPtr);
	}

	function get_MaxPacketSize() {
		return CkSsh_get_MaxPacketSize($this->_cPtr);
	}

	function put_MaxPacketSize($newVal) {
		CkSsh_put_MaxPacketSize($this->_cPtr,$newVal);
	}

	function get_NumOpenChannels() {
		return CkSsh_get_NumOpenChannels($this->_cPtr);
	}

	function get_PasswordChangeRequested() {
		return CkSsh_get_PasswordChangeRequested($this->_cPtr);
	}

	function get_ReadTimeoutMs() {
		return CkSsh_get_ReadTimeoutMs($this->_cPtr);
	}

	function put_ReadTimeoutMs($newVal) {
		CkSsh_put_ReadTimeoutMs($this->_cPtr,$newVal);
	}

	function get_SessionLog($str) {
		CkSsh_get_SessionLog($this->_cPtr,$str);
	}

	function sessionLog() {
		return CkSsh_sessionLog($this->_cPtr);
	}

	function get_SoRcvBuf() {
		return CkSsh_get_SoRcvBuf($this->_cPtr);
	}

	function put_SoRcvBuf($newVal) {
		CkSsh_put_SoRcvBuf($this->_cPtr,$newVal);
	}

	function get_SoSndBuf() {
		return CkSsh_get_SoSndBuf($this->_cPtr);
	}

	function put_SoSndBuf($newVal) {
		CkSsh_put_SoSndBuf($this->_cPtr,$newVal);
	}

	function get_SocksHostname($str) {
		CkSsh_get_SocksHostname($this->_cPtr,$str);
	}

	function socksHostname() {
		return CkSsh_socksHostname($this->_cPtr);
	}

	function put_SocksHostname($newVal) {
		CkSsh_put_SocksHostname($this->_cPtr,$newVal);
	}

	function get_SocksPassword($str) {
		CkSsh_get_SocksPassword($this->_cPtr,$str);
	}

	function socksPassword() {
		return CkSsh_socksPassword($this->_cPtr);
	}

	function put_SocksPassword($newVal) {
		CkSsh_put_SocksPassword($this->_cPtr,$newVal);
	}

	function get_SocksPort() {
		return CkSsh_get_SocksPort($this->_cPtr);
	}

	function put_SocksPort($newVal) {
		CkSsh_put_SocksPort($this->_cPtr,$newVal);
	}

	function get_SocksUsername($str) {
		CkSsh_get_SocksUsername($this->_cPtr,$str);
	}

	function socksUsername() {
		return CkSsh_socksUsername($this->_cPtr);
	}

	function put_SocksUsername($newVal) {
		CkSsh_put_SocksUsername($this->_cPtr,$newVal);
	}

	function get_SocksVersion() {
		return CkSsh_get_SocksVersion($this->_cPtr);
	}

	function put_SocksVersion($newVal) {
		CkSsh_put_SocksVersion($this->_cPtr,$newVal);
	}

	function get_StderrToStdout() {
		return CkSsh_get_StderrToStdout($this->_cPtr);
	}

	function put_StderrToStdout($newVal) {
		CkSsh_put_StderrToStdout($this->_cPtr,$newVal);
	}

	function get_TcpNoDelay() {
		return CkSsh_get_TcpNoDelay($this->_cPtr);
	}

	function put_TcpNoDelay($newVal) {
		CkSsh_put_TcpNoDelay($this->_cPtr,$newVal);
	}

	function get_Version($str) {
		CkSsh_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkSsh_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkSsh_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkSsh_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkSsh_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkSsh_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkSsh_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function AuthenticatePk($username,$privateKey) {
		return CkSsh_AuthenticatePk($this->_cPtr,$username,$privateKey);
	}

	function AuthenticatePw($login,$password) {
		return CkSsh_AuthenticatePw($this->_cPtr,$login,$password);
	}

	function AuthenticatePwPk($username,$password,$privateKey) {
		return CkSsh_AuthenticatePwPk($this->_cPtr,$username,$password,$privateKey);
	}

	function ChannelIsOpen($channelNum) {
		return CkSsh_ChannelIsOpen($this->_cPtr,$channelNum);
	}

	function ChannelPoll($channelNum,$pollTimeoutMs) {
		return CkSsh_ChannelPoll($this->_cPtr,$channelNum,$pollTimeoutMs);
	}

	function ChannelRead($channelNum) {
		return CkSsh_ChannelRead($this->_cPtr,$channelNum);
	}

	function ChannelReadAndPoll($channelNum,$pollTimeoutMs) {
		return CkSsh_ChannelReadAndPoll($this->_cPtr,$channelNum,$pollTimeoutMs);
	}

	function ChannelReadAndPoll2($channelNum,$pollTimeoutMs,$maxNumBytes) {
		return CkSsh_ChannelReadAndPoll2($this->_cPtr,$channelNum,$pollTimeoutMs,$maxNumBytes);
	}

	function ChannelReceiveToClose($channelNum) {
		return CkSsh_ChannelReceiveToClose($this->_cPtr,$channelNum);
	}

	function ChannelReceiveUntilMatch($channelNum,$matchPattern,$charset,$caseSensitive) {
		return CkSsh_ChannelReceiveUntilMatch($this->_cPtr,$channelNum,$matchPattern,$charset,$caseSensitive);
	}

	function ChannelReceiveUntilMatchN($channelNum,$matchPatterns,$charset,$caseSensitive) {
		return CkSsh_ChannelReceiveUntilMatchN($this->_cPtr,$channelNum,$matchPatterns,$charset,$caseSensitive);
	}

	function ChannelReceivedClose($channelNum) {
		return CkSsh_ChannelReceivedClose($this->_cPtr,$channelNum);
	}

	function ChannelReceivedEof($channelNum) {
		return CkSsh_ChannelReceivedEof($this->_cPtr,$channelNum);
	}

	function ChannelReceivedExitStatus($channelNum) {
		return CkSsh_ChannelReceivedExitStatus($this->_cPtr,$channelNum);
	}

	function ChannelSendClose($channelNum) {
		return CkSsh_ChannelSendClose($this->_cPtr,$channelNum);
	}

	function ChannelSendData($channelNum,$data) {
		return CkSsh_ChannelSendData($this->_cPtr,$channelNum,$data);
	}

	function ChannelSendEof($channelNum) {
		return CkSsh_ChannelSendEof($this->_cPtr,$channelNum);
	}

	function ChannelSendString($channelNum,$strData,$charset) {
		return CkSsh_ChannelSendString($this->_cPtr,$channelNum,$strData,$charset);
	}

	function ClearTtyModes() {
		CkSsh_ClearTtyModes($this->_cPtr);
	}

	function Connect($hostname,$port) {
		return CkSsh_Connect($this->_cPtr,$hostname,$port);
	}

	function Disconnect() {
		CkSsh_Disconnect($this->_cPtr);
	}

	function GetChannelExitStatus($channelNum) {
		return CkSsh_GetChannelExitStatus($this->_cPtr,$channelNum);
	}

	function GetChannelNumber($index) {
		return CkSsh_GetChannelNumber($this->_cPtr,$index);
	}

	function getChannelType($index) {
		return CkSsh_getChannelType($this->_cPtr,$index);
	}

	function channelType($index) {
		return CkSsh_channelType($this->_cPtr,$index);
	}

	function GetReceivedData($channelNum,$outBytes) {
		return CkSsh_GetReceivedData($this->_cPtr,$channelNum,$outBytes);
	}

	function GetReceivedDataN($channelNum,$numBytes,$outBytes) {
		return CkSsh_GetReceivedDataN($this->_cPtr,$channelNum,$numBytes,$outBytes);
	}

	function GetReceivedNumBytes($channelNum) {
		return CkSsh_GetReceivedNumBytes($this->_cPtr,$channelNum);
	}

	function GetReceivedStderr($channelNum,$outBytes) {
		return CkSsh_GetReceivedStderr($this->_cPtr,$channelNum,$outBytes);
	}

	function getReceivedText($channelNum,$charset) {
		return CkSsh_getReceivedText($this->_cPtr,$channelNum,$charset);
	}

	function receivedText($channelNum,$charset) {
		return CkSsh_receivedText($this->_cPtr,$channelNum,$charset);
	}

	function getReceivedTextS($channelNum,$substr,$charset) {
		return CkSsh_getReceivedTextS($this->_cPtr,$channelNum,$substr,$charset);
	}

	function receivedTextS($channelNum,$substr,$charset) {
		return CkSsh_receivedTextS($this->_cPtr,$channelNum,$substr,$charset);
	}

	function OpenCustomChannel($channelType) {
		return CkSsh_OpenCustomChannel($this->_cPtr,$channelType);
	}

	function OpenDirectTcpIpChannel($hostname,$port) {
		return CkSsh_OpenDirectTcpIpChannel($this->_cPtr,$hostname,$port);
	}

	function OpenSessionChannel() {
		return CkSsh_OpenSessionChannel($this->_cPtr);
	}

	function peekReceivedText($channelNum,$charset) {
		return CkSsh_peekReceivedText($this->_cPtr,$channelNum,$charset);
	}

	function ReKey() {
		return CkSsh_ReKey($this->_cPtr);
	}

	function SaveLastError($path) {
		return CkSsh_SaveLastError($this->_cPtr,$path);
	}

	function SendIgnore() {
		return CkSsh_SendIgnore($this->_cPtr);
	}

	function SendReqExec($channelNum,$command) {
		return CkSsh_SendReqExec($this->_cPtr,$channelNum,$command);
	}

	function SendReqPty($channelNum,$xTermEnvVar,$widthInChars,$heightInRows,$pixWidth,$pixHeight) {
		return CkSsh_SendReqPty($this->_cPtr,$channelNum,$xTermEnvVar,$widthInChars,$heightInRows,$pixWidth,$pixHeight);
	}

	function SendReqSetEnv($channelNum,$name,$value) {
		return CkSsh_SendReqSetEnv($this->_cPtr,$channelNum,$name,$value);
	}

	function SendReqShell($channelNum) {
		return CkSsh_SendReqShell($this->_cPtr,$channelNum);
	}

	function SendReqSignal($channelNum,$signalName) {
		return CkSsh_SendReqSignal($this->_cPtr,$channelNum,$signalName);
	}

	function SendReqSubsystem($channelNum,$subsystemName) {
		return CkSsh_SendReqSubsystem($this->_cPtr,$channelNum,$subsystemName);
	}

	function SendReqWindowChange($channelNum,$widthInChars,$heightInRows,$pixWidth,$pixHeight) {
		return CkSsh_SendReqWindowChange($this->_cPtr,$channelNum,$widthInChars,$heightInRows,$pixWidth,$pixHeight);
	}

	function SendReqX11Forwarding($channelNum,$singleConnection,$authProt,$authCookie,$screenNum) {
		return CkSsh_SendReqX11Forwarding($this->_cPtr,$channelNum,$singleConnection,$authProt,$authCookie,$screenNum);
	}

	function SendReqXonXoff($channelNum,$clientCanDo) {
		return CkSsh_SendReqXonXoff($this->_cPtr,$channelNum,$clientCanDo);
	}

	function SetTtyMode($name,$value) {
		return CkSsh_SetTtyMode($this->_cPtr,$name,$value);
	}

	function UnlockComponent($unlockCode) {
		return CkSsh_UnlockComponent($this->_cPtr,$unlockCode);
	}
}

class CkSshKey {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkSshKey') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkSshKey();
	}

	function get_Utf8() {
		return CkSshKey_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkSshKey_put_Utf8($this->_cPtr,$b);
	}

	function get_Comment($str) {
		CkSshKey_get_Comment($this->_cPtr,$str);
	}

	function comment() {
		return CkSshKey_comment($this->_cPtr);
	}

	function put_Comment($newVal) {
		CkSshKey_put_Comment($this->_cPtr,$newVal);
	}

	function get_IsDsaKey() {
		return CkSshKey_get_IsDsaKey($this->_cPtr);
	}

	function get_IsPrivateKey() {
		return CkSshKey_get_IsPrivateKey($this->_cPtr);
	}

	function get_IsRsaKey() {
		return CkSshKey_get_IsRsaKey($this->_cPtr);
	}

	function get_LastErrorHtml($str) {
		CkSshKey_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkSshKey_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkSshKey_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkSshKey_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkSshKey_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkSshKey_lastErrorXml($this->_cPtr);
	}

	function get_Password($str) {
		CkSshKey_get_Password($this->_cPtr,$str);
	}

	function password() {
		return CkSshKey_password($this->_cPtr);
	}

	function put_Password($newVal) {
		CkSshKey_put_Password($this->_cPtr,$newVal);
	}

	function get_Version($str) {
		CkSshKey_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkSshKey_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkSshKey_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkSshKey_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkSshKey_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkSshKey_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkSshKey_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function FromOpenSshPrivateKey($keyStr) {
		return CkSshKey_FromOpenSshPrivateKey($this->_cPtr,$keyStr);
	}

	function FromOpenSshPublicKey($keyStr) {
		return CkSshKey_FromOpenSshPublicKey($this->_cPtr,$keyStr);
	}

	function FromPuttyPrivateKey($keyStr) {
		return CkSshKey_FromPuttyPrivateKey($this->_cPtr,$keyStr);
	}

	function FromRfc4716PublicKey($keyStr) {
		return CkSshKey_FromRfc4716PublicKey($this->_cPtr,$keyStr);
	}

	function FromXml($xmlKey) {
		return CkSshKey_FromXml($this->_cPtr,$xmlKey);
	}

	function genFingerprint() {
		return CkSshKey_genFingerprint($this->_cPtr);
	}

	function GenerateDsaKey($numBits) {
		return CkSshKey_GenerateDsaKey($this->_cPtr,$numBits);
	}

	function GenerateRsaKey($numBits,$exponent) {
		return CkSshKey_GenerateRsaKey($this->_cPtr,$numBits,$exponent);
	}

	function loadText($path) {
		return CkSshKey_loadText($this->_cPtr,$path);
	}

	function SaveLastError($path) {
		return CkSshKey_SaveLastError($this->_cPtr,$path);
	}

	function SaveText($strToSave,$path) {
		return CkSshKey_SaveText($this->_cPtr,$strToSave,$path);
	}

	function toOpenSshPrivateKey($bEncrypt) {
		return CkSshKey_toOpenSshPrivateKey($this->_cPtr,$bEncrypt);
	}

	function toOpenSshPublicKey() {
		return CkSshKey_toOpenSshPublicKey($this->_cPtr);
	}

	function toPuttyPrivateKey($bEncrypt) {
		return CkSshKey_toPuttyPrivateKey($this->_cPtr,$bEncrypt);
	}

	function toRfc4716PublicKey() {
		return CkSshKey_toRfc4716PublicKey($this->_cPtr);
	}

	function toXml() {
		return CkSshKey_toXml($this->_cPtr);
	}
}

class CkCompression {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkCompression') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkCompression();
	}

	function get_Utf8() {
		return CkCompression_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkCompression_put_Utf8($this->_cPtr,$b);
	}

	function get_Algorithm($str) {
		CkCompression_get_Algorithm($this->_cPtr,$str);
	}

	function algorithm() {
		return CkCompression_algorithm($this->_cPtr);
	}

	function put_Algorithm($newVal) {
		CkCompression_put_Algorithm($this->_cPtr,$newVal);
	}

	function get_Charset($str) {
		CkCompression_get_Charset($this->_cPtr,$str);
	}

	function charset() {
		return CkCompression_charset($this->_cPtr);
	}

	function put_Charset($newVal) {
		CkCompression_put_Charset($this->_cPtr,$newVal);
	}

	function get_EncodingMode($str) {
		CkCompression_get_EncodingMode($this->_cPtr,$str);
	}

	function encodingMode() {
		return CkCompression_encodingMode($this->_cPtr);
	}

	function put_EncodingMode($newVal) {
		CkCompression_put_EncodingMode($this->_cPtr,$newVal);
	}

	function get_HeartbeatMs() {
		return CkCompression_get_HeartbeatMs($this->_cPtr);
	}

	function put_HeartbeatMs($newVal) {
		CkCompression_put_HeartbeatMs($this->_cPtr,$newVal);
	}

	function get_LastErrorHtml($str) {
		CkCompression_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkCompression_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkCompression_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkCompression_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkCompression_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkCompression_lastErrorXml($this->_cPtr);
	}

	function get_Version($str) {
		CkCompression_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkCompression_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkCompression_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkCompression_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkCompression_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkCompression_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkCompression_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function BeginCompressBytes($bData,$outData) {
		return CkCompression_BeginCompressBytes($this->_cPtr,$bData,$outData);
	}

	function beginCompressBytesENC($bData) {
		return CkCompression_beginCompressBytesENC($this->_cPtr,$bData);
	}

	function BeginCompressString($str,$outData) {
		return CkCompression_BeginCompressString($this->_cPtr,$str,$outData);
	}

	function beginCompressStringENC($str) {
		return CkCompression_beginCompressStringENC($this->_cPtr,$str);
	}

	function BeginDecompressBytes($bData,$outData) {
		return CkCompression_BeginDecompressBytes($this->_cPtr,$bData,$outData);
	}

	function BeginDecompressBytesENC($str,$outData) {
		return CkCompression_BeginDecompressBytesENC($this->_cPtr,$str,$outData);
	}

	function beginDecompressString($bData) {
		return CkCompression_beginDecompressString($this->_cPtr,$bData);
	}

	function beginDecompressStringENC($str) {
		return CkCompression_beginDecompressStringENC($this->_cPtr,$str);
	}

	function CompressBytes($bData,$outData) {
		return CkCompression_CompressBytes($this->_cPtr,$bData,$outData);
	}

	function compressBytesENC($bData) {
		return CkCompression_compressBytesENC($this->_cPtr,$bData);
	}

	function CompressFile($srcPath,$destPath) {
		return CkCompression_CompressFile($this->_cPtr,$srcPath,$destPath);
	}

	function CompressString($str,$outData) {
		return CkCompression_CompressString($this->_cPtr,$str,$outData);
	}

	function compressStringENC($str) {
		return CkCompression_compressStringENC($this->_cPtr,$str);
	}

	function DecompressBytes($bData,$outData) {
		return CkCompression_DecompressBytes($this->_cPtr,$bData,$outData);
	}

	function DecompressBytesENC($str,$outData) {
		return CkCompression_DecompressBytesENC($this->_cPtr,$str,$outData);
	}

	function DecompressFile($srcPath,$destPath) {
		return CkCompression_DecompressFile($this->_cPtr,$srcPath,$destPath);
	}

	function decompressString($bData) {
		return CkCompression_decompressString($this->_cPtr,$bData);
	}

	function decompressStringENC($str) {
		return CkCompression_decompressStringENC($this->_cPtr,$str);
	}

	function EndCompressBytes($outData) {
		return CkCompression_EndCompressBytes($this->_cPtr,$outData);
	}

	function endCompressBytesENC() {
		return CkCompression_endCompressBytesENC($this->_cPtr);
	}

	function EndCompressString($outData) {
		return CkCompression_EndCompressString($this->_cPtr,$outData);
	}

	function endCompressStringENC() {
		return CkCompression_endCompressStringENC($this->_cPtr);
	}

	function EndDecompressBytes($outData) {
		return CkCompression_EndDecompressBytes($this->_cPtr,$outData);
	}

	function EndDecompressBytesENC($outData) {
		return CkCompression_EndDecompressBytesENC($this->_cPtr,$outData);
	}

	function endDecompressString() {
		return CkCompression_endDecompressString($this->_cPtr);
	}

	function endDecompressStringENC() {
		return CkCompression_endDecompressStringENC($this->_cPtr);
	}

	function MoreCompressBytes($bData,$outData) {
		return CkCompression_MoreCompressBytes($this->_cPtr,$bData,$outData);
	}

	function moreCompressBytesENC($bData) {
		return CkCompression_moreCompressBytesENC($this->_cPtr,$bData);
	}

	function MoreCompressString($str,$outData) {
		return CkCompression_MoreCompressString($this->_cPtr,$str,$outData);
	}

	function moreCompressStringENC($str) {
		return CkCompression_moreCompressStringENC($this->_cPtr,$str);
	}

	function MoreDecompressBytes($bData,$outData) {
		return CkCompression_MoreDecompressBytes($this->_cPtr,$bData,$outData);
	}

	function MoreDecompressBytesENC($str,$outData) {
		return CkCompression_MoreDecompressBytesENC($this->_cPtr,$str,$outData);
	}

	function moreDecompressString($bData) {
		return CkCompression_moreDecompressString($this->_cPtr,$bData);
	}

	function moreDecompressStringENC($str) {
		return CkCompression_moreDecompressStringENC($this->_cPtr,$str);
	}

	function SaveLastError($path) {
		return CkCompression_SaveLastError($this->_cPtr,$path);
	}

	function UnlockComponent($unlockCode) {
		return CkCompression_UnlockComponent($this->_cPtr,$unlockCode);
	}
}

class CkBz2 {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkBz2') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkBz2();
	}

	function get_Utf8() {
		return CkBz2_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkBz2_put_Utf8($this->_cPtr,$b);
	}

	function get_HeartbeatMs() {
		return CkBz2_get_HeartbeatMs($this->_cPtr);
	}

	function put_HeartbeatMs($newVal) {
		CkBz2_put_HeartbeatMs($this->_cPtr,$newVal);
	}

	function get_LastErrorHtml($str) {
		CkBz2_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkBz2_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkBz2_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkBz2_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkBz2_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkBz2_lastErrorXml($this->_cPtr);
	}

	function get_Version($str) {
		CkBz2_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkBz2_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkBz2_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkBz2_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkBz2_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkBz2_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkBz2_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function CompressFile($inPath,$toPath) {
		return CkBz2_CompressFile($this->_cPtr,$inPath,$toPath);
	}

	function CompressFileToMem($inPath,$outBytes) {
		return CkBz2_CompressFileToMem($this->_cPtr,$inPath,$outBytes);
	}

	function CompressMemToFile($inData,$toPath) {
		return CkBz2_CompressMemToFile($this->_cPtr,$inData,$toPath);
	}

	function CompressMemory($inData,$outBytes) {
		return CkBz2_CompressMemory($this->_cPtr,$inData,$outBytes);
	}

	function SaveLastError($path) {
		return CkBz2_SaveLastError($this->_cPtr,$path);
	}

	function UncompressFile($inPath,$toPath) {
		return CkBz2_UncompressFile($this->_cPtr,$inPath,$toPath);
	}

	function UncompressFileToMem($inPath,$outBytes) {
		return CkBz2_UncompressFileToMem($this->_cPtr,$inPath,$outBytes);
	}

	function UncompressMemToFile($inData,$toPath) {
		return CkBz2_UncompressMemToFile($this->_cPtr,$inData,$toPath);
	}

	function UncompressMemory($inData,$outBytes) {
		return CkBz2_UncompressMemory($this->_cPtr,$inData,$outBytes);
	}

	function UnlockComponent($unlockCode) {
		return CkBz2_UnlockComponent($this->_cPtr,$unlockCode);
	}
}

class CkHtmlToText {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkHtmlToText') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkHtmlToText();
	}

	function get_Utf8() {
		return CkHtmlToText_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkHtmlToText_put_Utf8($this->_cPtr,$b);
	}

	function get_DecodeHtmlEntities() {
		return CkHtmlToText_get_DecodeHtmlEntities($this->_cPtr);
	}

	function put_DecodeHtmlEntities($newVal) {
		CkHtmlToText_put_DecodeHtmlEntities($this->_cPtr,$newVal);
	}

	function get_LastErrorHtml($str) {
		CkHtmlToText_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkHtmlToText_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkHtmlToText_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkHtmlToText_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkHtmlToText_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkHtmlToText_lastErrorXml($this->_cPtr);
	}

	function get_RightMargin() {
		return CkHtmlToText_get_RightMargin($this->_cPtr);
	}

	function put_RightMargin($newVal) {
		CkHtmlToText_put_RightMargin($this->_cPtr,$newVal);
	}

	function get_SuppressLinks() {
		return CkHtmlToText_get_SuppressLinks($this->_cPtr);
	}

	function put_SuppressLinks($newVal) {
		CkHtmlToText_put_SuppressLinks($this->_cPtr,$newVal);
	}

	function get_Version($str) {
		CkHtmlToText_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkHtmlToText_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkHtmlToText_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkHtmlToText_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkHtmlToText_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkHtmlToText_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkHtmlToText_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function IsUnlocked() {
		return CkHtmlToText_IsUnlocked($this->_cPtr);
	}

	function readFileToString($path,$srcCharset) {
		return CkHtmlToText_readFileToString($this->_cPtr,$path,$srcCharset);
	}

	function SaveLastError($path) {
		return CkHtmlToText_SaveLastError($this->_cPtr,$path);
	}

	function toText($html) {
		return CkHtmlToText_toText($this->_cPtr,$html);
	}

	function UnlockComponent($code) {
		return CkHtmlToText_UnlockComponent($this->_cPtr,$code);
	}

	function WriteStringToFile($str,$path,$charset) {
		return CkHtmlToText_WriteStringToFile($this->_cPtr,$str,$path,$charset);
	}
}

class CkCsv {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkCsv') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkCsv();
	}

	function get_Utf8() {
		return CkCsv_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkCsv_put_Utf8($this->_cPtr,$b);
	}

	function get_AutoTrim() {
		return CkCsv_get_AutoTrim($this->_cPtr);
	}

	function put_AutoTrim($newVal) {
		CkCsv_put_AutoTrim($this->_cPtr,$newVal);
	}

	function get_Crlf() {
		return CkCsv_get_Crlf($this->_cPtr);
	}

	function put_Crlf($newVal) {
		CkCsv_put_Crlf($this->_cPtr,$newVal);
	}

	function get_Delimiter($str) {
		CkCsv_get_Delimiter($this->_cPtr,$str);
	}

	function delimiter() {
		return CkCsv_delimiter($this->_cPtr);
	}

	function put_Delimiter($newVal) {
		CkCsv_put_Delimiter($this->_cPtr,$newVal);
	}

	function get_HasColumnNames() {
		return CkCsv_get_HasColumnNames($this->_cPtr);
	}

	function put_HasColumnNames($newVal) {
		CkCsv_put_HasColumnNames($this->_cPtr,$newVal);
	}

	function get_LastErrorHtml($str) {
		CkCsv_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkCsv_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkCsv_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkCsv_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkCsv_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkCsv_lastErrorXml($this->_cPtr);
	}

	function get_NumColumns() {
		return CkCsv_get_NumColumns($this->_cPtr);
	}

	function get_NumRows() {
		return CkCsv_get_NumRows($this->_cPtr);
	}

	function get_Version($str) {
		CkCsv_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkCsv_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkCsv_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkCsv_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkCsv_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkCsv_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkCsv_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function DeleteColumn($index) {
		return CkCsv_DeleteColumn($this->_cPtr,$index);
	}

	function DeleteColumnByName($columnName) {
		return CkCsv_DeleteColumnByName($this->_cPtr,$columnName);
	}

	function DeleteRow($index) {
		return CkCsv_DeleteRow($this->_cPtr,$index);
	}

	function getCell($row,$col) {
		return CkCsv_getCell($this->_cPtr,$row,$col);
	}

	function cell($row,$col) {
		return CkCsv_cell($this->_cPtr,$row,$col);
	}

	function getCellByName($row,$columnName) {
		return CkCsv_getCellByName($this->_cPtr,$row,$columnName);
	}

	function cellByName($row,$columnName) {
		return CkCsv_cellByName($this->_cPtr,$row,$columnName);
	}

	function getColumnName($index) {
		return CkCsv_getColumnName($this->_cPtr,$index);
	}

	function columnName($index) {
		return CkCsv_columnName($this->_cPtr,$index);
	}

	function GetIndex($columnName) {
		return CkCsv_GetIndex($this->_cPtr,$columnName);
	}

	function GetNumCols($row) {
		return CkCsv_GetNumCols($this->_cPtr,$row);
	}

	function LoadFile($path) {
		return CkCsv_LoadFile($this->_cPtr,$path);
	}

	function LoadFile2($path,$charset) {
		return CkCsv_LoadFile2($this->_cPtr,$path,$charset);
	}

	function LoadFromString($csvData) {
		return CkCsv_LoadFromString($this->_cPtr,$csvData);
	}

	function RowMatches($row,$matchPattern,$bCaseSensitive) {
		return CkCsv_RowMatches($this->_cPtr,$row,$matchPattern,$bCaseSensitive);
	}

	function SaveFile($path) {
		return CkCsv_SaveFile($this->_cPtr,$path);
	}

	function SaveFile2($path,$charset) {
		return CkCsv_SaveFile2($this->_cPtr,$path,$charset);
	}

	function SaveLastError($path) {
		return CkCsv_SaveLastError($this->_cPtr,$path);
	}

	function saveToString() {
		return CkCsv_saveToString($this->_cPtr);
	}

	function SetCell($row,$col,$content) {
		return CkCsv_SetCell($this->_cPtr,$row,$col,$content);
	}

	function SetCellByName($row,$columnName,$content) {
		return CkCsv_SetCellByName($this->_cPtr,$row,$columnName,$content);
	}

	function SetColumnName($index,$columnName) {
		return CkCsv_SetColumnName($this->_cPtr,$index,$columnName);
	}

	function SortByColumn($columnName,$bAscending,$bCaseSensitive) {
		return CkCsv_SortByColumn($this->_cPtr,$columnName,$bAscending,$bCaseSensitive);
	}
}

class CkTar {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkTar') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkTar();
	}

	function get_Utf8() {
		return CkTar_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkTar_put_Utf8($this->_cPtr,$b);
	}

	function get_Charset($str) {
		CkTar_get_Charset($this->_cPtr,$str);
	}

	function charset() {
		return CkTar_charset($this->_cPtr);
	}

	function put_Charset($newVal) {
		CkTar_put_Charset($this->_cPtr,$newVal);
	}

	function get_DirMode() {
		return CkTar_get_DirMode($this->_cPtr);
	}

	function put_DirMode($newVal) {
		CkTar_put_DirMode($this->_cPtr,$newVal);
	}

	function get_DirPrefix($str) {
		CkTar_get_DirPrefix($this->_cPtr,$str);
	}

	function dirPrefix() {
		return CkTar_dirPrefix($this->_cPtr);
	}

	function put_DirPrefix($newVal) {
		CkTar_put_DirPrefix($this->_cPtr,$newVal);
	}

	function get_FileMode() {
		return CkTar_get_FileMode($this->_cPtr);
	}

	function put_FileMode($newVal) {
		CkTar_put_FileMode($this->_cPtr,$newVal);
	}

	function get_GroupId() {
		return CkTar_get_GroupId($this->_cPtr);
	}

	function put_GroupId($newVal) {
		CkTar_put_GroupId($this->_cPtr,$newVal);
	}

	function get_GroupName($str) {
		CkTar_get_GroupName($this->_cPtr,$str);
	}

	function groupName() {
		return CkTar_groupName($this->_cPtr);
	}

	function put_GroupName($newVal) {
		CkTar_put_GroupName($this->_cPtr,$newVal);
	}

	function get_HeartbeatMs() {
		return CkTar_get_HeartbeatMs($this->_cPtr);
	}

	function put_HeartbeatMs($newVal) {
		CkTar_put_HeartbeatMs($this->_cPtr,$newVal);
	}

	function get_LastErrorHtml($str) {
		CkTar_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkTar_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkTar_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkTar_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkTar_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkTar_lastErrorXml($this->_cPtr);
	}

	function get_NoAbsolutePaths() {
		return CkTar_get_NoAbsolutePaths($this->_cPtr);
	}

	function put_NoAbsolutePaths($newVal) {
		CkTar_put_NoAbsolutePaths($this->_cPtr,$newVal);
	}

	function get_NumDirRoots() {
		return CkTar_get_NumDirRoots($this->_cPtr);
	}

	function get_ScriptFileMode() {
		return CkTar_get_ScriptFileMode($this->_cPtr);
	}

	function put_ScriptFileMode($newVal) {
		CkTar_put_ScriptFileMode($this->_cPtr,$newVal);
	}

	function get_UntarCaseSensitive() {
		return CkTar_get_UntarCaseSensitive($this->_cPtr);
	}

	function put_UntarCaseSensitive($newVal) {
		CkTar_put_UntarCaseSensitive($this->_cPtr,$newVal);
	}

	function get_UntarDebugLog() {
		return CkTar_get_UntarDebugLog($this->_cPtr);
	}

	function put_UntarDebugLog($newVal) {
		CkTar_put_UntarDebugLog($this->_cPtr,$newVal);
	}

	function get_UntarDiscardPaths() {
		return CkTar_get_UntarDiscardPaths($this->_cPtr);
	}

	function put_UntarDiscardPaths($newVal) {
		CkTar_put_UntarDiscardPaths($this->_cPtr,$newVal);
	}

	function get_UntarFromDir($str) {
		CkTar_get_UntarFromDir($this->_cPtr,$str);
	}

	function untarFromDir() {
		return CkTar_untarFromDir($this->_cPtr);
	}

	function put_UntarFromDir($newVal) {
		CkTar_put_UntarFromDir($this->_cPtr,$newVal);
	}

	function get_UntarMatchPattern($str) {
		CkTar_get_UntarMatchPattern($this->_cPtr,$str);
	}

	function untarMatchPattern() {
		return CkTar_untarMatchPattern($this->_cPtr);
	}

	function put_UntarMatchPattern($newVal) {
		CkTar_put_UntarMatchPattern($this->_cPtr,$newVal);
	}

	function get_UntarMaxCount() {
		return CkTar_get_UntarMaxCount($this->_cPtr);
	}

	function put_UntarMaxCount($newVal) {
		CkTar_put_UntarMaxCount($this->_cPtr,$newVal);
	}

	function get_UserId() {
		return CkTar_get_UserId($this->_cPtr);
	}

	function put_UserId($newVal) {
		CkTar_put_UserId($this->_cPtr,$newVal);
	}

	function get_UserName($str) {
		CkTar_get_UserName($this->_cPtr,$str);
	}

	function userName() {
		return CkTar_userName($this->_cPtr);
	}

	function put_UserName($newVal) {
		CkTar_put_UserName($this->_cPtr,$newVal);
	}

	function get_Version($str) {
		CkTar_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkTar_version($this->_cPtr);
	}

	function get_WriteFormat($str) {
		CkTar_get_WriteFormat($this->_cPtr,$str);
	}

	function writeFormat() {
		return CkTar_writeFormat($this->_cPtr);
	}

	function put_WriteFormat($newVal) {
		CkTar_put_WriteFormat($this->_cPtr,$newVal);
	}

	function get_DebugLogFilePath($str) {
		CkTar_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkTar_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkTar_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkTar_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkTar_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function AddDirRoot($dirPath) {
		return CkTar_AddDirRoot($this->_cPtr,$dirPath);
	}

	function getDirRoot($index) {
		return CkTar_getDirRoot($this->_cPtr,$index);
	}

	function dirRoot($index) {
		return CkTar_dirRoot($this->_cPtr,$index);
	}

	function listXml($tarPath) {
		return CkTar_listXml($this->_cPtr,$tarPath);
	}

	function SaveLastError($path) {
		return CkTar_SaveLastError($this->_cPtr,$path);
	}

	function UnlockComponent($unlockCode) {
		return CkTar_UnlockComponent($this->_cPtr,$unlockCode);
	}

	function Untar($tarPath) {
		return CkTar_Untar($this->_cPtr,$tarPath);
	}

	function UntarBz2($tarPath) {
		return CkTar_UntarBz2($this->_cPtr,$tarPath);
	}

	function UntarFirstMatchingToMemory($tarFileBytes,$matchPattern,$outBytes) {
		return CkTar_UntarFirstMatchingToMemory($this->_cPtr,$tarFileBytes,$matchPattern,$outBytes);
	}

	function UntarFromMemory($tarFileBytes) {
		return CkTar_UntarFromMemory($this->_cPtr,$tarFileBytes);
	}

	function UntarGz($tarPath) {
		return CkTar_UntarGz($this->_cPtr,$tarPath);
	}

	function UntarZ($tarPath) {
		return CkTar_UntarZ($this->_cPtr,$tarPath);
	}

	function VerifyTar($tarPath) {
		return CkTar_VerifyTar($this->_cPtr,$tarPath);
	}

	function WriteTar($tarPath) {
		return CkTar_WriteTar($this->_cPtr,$tarPath);
	}

	function WriteTarBz2($bz2Path) {
		return CkTar_WriteTarBz2($this->_cPtr,$bz2Path);
	}

	function WriteTarGz($gzPath) {
		return CkTar_WriteTarGz($this->_cPtr,$gzPath);
	}
}

class CkSocksProxy {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkSocksProxy') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkSocksProxy();
	}

	function get_Utf8() {
		return CkSocksProxy_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkSocksProxy_put_Utf8($this->_cPtr,$b);
	}

	function get_AllowUnauthenticatedSocks5() {
		return CkSocksProxy_get_AllowUnauthenticatedSocks5($this->_cPtr);
	}

	function put_AllowUnauthenticatedSocks5($newVal) {
		CkSocksProxy_put_AllowUnauthenticatedSocks5($this->_cPtr,$newVal);
	}

	function get_AuthenticatedSocks5() {
		return CkSocksProxy_get_AuthenticatedSocks5($this->_cPtr);
	}

	function get_ClientIp($str) {
		CkSocksProxy_get_ClientIp($this->_cPtr,$str);
	}

	function clientIp() {
		return CkSocksProxy_clientIp($this->_cPtr);
	}

	function get_ClientPort() {
		return CkSocksProxy_get_ClientPort($this->_cPtr);
	}

	function get_ConnectionPending() {
		return CkSocksProxy_get_ConnectionPending($this->_cPtr);
	}

	function get_LastErrorHtml($str) {
		CkSocksProxy_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkSocksProxy_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkSocksProxy_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkSocksProxy_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkSocksProxy_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkSocksProxy_lastErrorXml($this->_cPtr);
	}

	function get_ListenBindIpAddress($str) {
		CkSocksProxy_get_ListenBindIpAddress($this->_cPtr,$str);
	}

	function listenBindIpAddress() {
		return CkSocksProxy_listenBindIpAddress($this->_cPtr);
	}

	function put_ListenBindIpAddress($newVal) {
		CkSocksProxy_put_ListenBindIpAddress($this->_cPtr,$newVal);
	}

	function get_Login($str) {
		CkSocksProxy_get_Login($this->_cPtr,$str);
	}

	function login() {
		return CkSocksProxy_login($this->_cPtr);
	}

	function get_OutboundBindIpAddress($str) {
		CkSocksProxy_get_OutboundBindIpAddress($this->_cPtr,$str);
	}

	function outboundBindIpAddress() {
		return CkSocksProxy_outboundBindIpAddress($this->_cPtr);
	}

	function put_OutboundBindIpAddress($newVal) {
		CkSocksProxy_put_OutboundBindIpAddress($this->_cPtr,$newVal);
	}

	function get_OutboundBindPort() {
		return CkSocksProxy_get_OutboundBindPort($this->_cPtr);
	}

	function put_OutboundBindPort($newVal) {
		CkSocksProxy_put_OutboundBindPort($this->_cPtr,$newVal);
	}

	function get_Password($str) {
		CkSocksProxy_get_Password($this->_cPtr,$str);
	}

	function password() {
		return CkSocksProxy_password($this->_cPtr);
	}

	function get_ServerIp($str) {
		CkSocksProxy_get_ServerIp($this->_cPtr,$str);
	}

	function serverIp() {
		return CkSocksProxy_serverIp($this->_cPtr);
	}

	function get_ServerPort() {
		return CkSocksProxy_get_ServerPort($this->_cPtr);
	}

	function get_SocksVersion() {
		return CkSocksProxy_get_SocksVersion($this->_cPtr);
	}

	function get_Version($str) {
		CkSocksProxy_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkSocksProxy_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkSocksProxy_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkSocksProxy_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkSocksProxy_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkSocksProxy_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkSocksProxy_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function AllowConnection() {
		return CkSocksProxy_AllowConnection($this->_cPtr);
	}

	function getTunnelsXml() {
		return CkSocksProxy_getTunnelsXml($this->_cPtr);
	}

	function tunnelsXml() {
		return CkSocksProxy_tunnelsXml($this->_cPtr);
	}

	function Initialize($port) {
		return CkSocksProxy_Initialize($this->_cPtr,$port);
	}

	function ProceedSocks5() {
		return CkSocksProxy_ProceedSocks5($this->_cPtr);
	}

	function RejectConnection() {
		return CkSocksProxy_RejectConnection($this->_cPtr);
	}

	function SaveLastError($path) {
		return CkSocksProxy_SaveLastError($this->_cPtr,$path);
	}

	function StopAllTunnels($maxWaitMs) {
		return CkSocksProxy_StopAllTunnels($this->_cPtr,$maxWaitMs);
	}

	function UnlockComponent($unlockCode) {
		return CkSocksProxy_UnlockComponent($this->_cPtr,$unlockCode);
	}

	function WaitForConnection($maxWaitMs) {
		return CkSocksProxy_WaitForConnection($this->_cPtr,$maxWaitMs);
	}
}

class CkSshTunnel {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkSshTunnel') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkSshTunnel();
	}

	function get_Utf8() {
		return CkSshTunnel_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkSshTunnel_put_Utf8($this->_cPtr,$b);
	}

	function get_AcceptThreadSessionLogPath($str) {
		CkSshTunnel_get_AcceptThreadSessionLogPath($this->_cPtr,$str);
	}

	function acceptThreadSessionLogPath() {
		return CkSshTunnel_acceptThreadSessionLogPath($this->_cPtr);
	}

	function put_AcceptThreadSessionLogPath($newVal) {
		CkSshTunnel_put_AcceptThreadSessionLogPath($this->_cPtr,$newVal);
	}

	function get_ConnectLog($str) {
		CkSshTunnel_get_ConnectLog($this->_cPtr,$str);
	}

	function connectLog() {
		return CkSshTunnel_connectLog($this->_cPtr);
	}

	function put_ConnectLog($newVal) {
		CkSshTunnel_put_ConnectLog($this->_cPtr,$newVal);
	}

	function get_ConnectTimeoutMs() {
		return CkSshTunnel_get_ConnectTimeoutMs($this->_cPtr);
	}

	function put_ConnectTimeoutMs($newVal) {
		CkSshTunnel_put_ConnectTimeoutMs($this->_cPtr,$newVal);
	}

	function get_DestHostname($str) {
		CkSshTunnel_get_DestHostname($this->_cPtr,$str);
	}

	function destHostname() {
		return CkSshTunnel_destHostname($this->_cPtr);
	}

	function put_DestHostname($newVal) {
		CkSshTunnel_put_DestHostname($this->_cPtr,$newVal);
	}

	function get_DestPort() {
		return CkSshTunnel_get_DestPort($this->_cPtr);
	}

	function put_DestPort($newVal) {
		CkSshTunnel_put_DestPort($this->_cPtr,$newVal);
	}

	function get_HttpProxyAuthMethod($str) {
		CkSshTunnel_get_HttpProxyAuthMethod($this->_cPtr,$str);
	}

	function httpProxyAuthMethod() {
		return CkSshTunnel_httpProxyAuthMethod($this->_cPtr);
	}

	function put_HttpProxyAuthMethod($newVal) {
		CkSshTunnel_put_HttpProxyAuthMethod($this->_cPtr,$newVal);
	}

	function get_HttpProxyDomain($str) {
		CkSshTunnel_get_HttpProxyDomain($this->_cPtr,$str);
	}

	function httpProxyDomain() {
		return CkSshTunnel_httpProxyDomain($this->_cPtr);
	}

	function put_HttpProxyDomain($newVal) {
		CkSshTunnel_put_HttpProxyDomain($this->_cPtr,$newVal);
	}

	function get_HttpProxyHostname($str) {
		CkSshTunnel_get_HttpProxyHostname($this->_cPtr,$str);
	}

	function httpProxyHostname() {
		return CkSshTunnel_httpProxyHostname($this->_cPtr);
	}

	function put_HttpProxyHostname($newVal) {
		CkSshTunnel_put_HttpProxyHostname($this->_cPtr,$newVal);
	}

	function get_HttpProxyPassword($str) {
		CkSshTunnel_get_HttpProxyPassword($this->_cPtr,$str);
	}

	function httpProxyPassword() {
		return CkSshTunnel_httpProxyPassword($this->_cPtr);
	}

	function put_HttpProxyPassword($newVal) {
		CkSshTunnel_put_HttpProxyPassword($this->_cPtr,$newVal);
	}

	function get_HttpProxyPort() {
		return CkSshTunnel_get_HttpProxyPort($this->_cPtr);
	}

	function put_HttpProxyPort($newVal) {
		CkSshTunnel_put_HttpProxyPort($this->_cPtr,$newVal);
	}

	function get_HttpProxyUsername($str) {
		CkSshTunnel_get_HttpProxyUsername($this->_cPtr,$str);
	}

	function httpProxyUsername() {
		return CkSshTunnel_httpProxyUsername($this->_cPtr);
	}

	function put_HttpProxyUsername($newVal) {
		CkSshTunnel_put_HttpProxyUsername($this->_cPtr,$newVal);
	}

	function get_IdleTimeoutMs() {
		return CkSshTunnel_get_IdleTimeoutMs($this->_cPtr);
	}

	function put_IdleTimeoutMs($newVal) {
		CkSshTunnel_put_IdleTimeoutMs($this->_cPtr,$newVal);
	}

	function get_IsAccepting() {
		return CkSshTunnel_get_IsAccepting($this->_cPtr);
	}

	function get_KeepConnectLog() {
		return CkSshTunnel_get_KeepConnectLog($this->_cPtr);
	}

	function put_KeepConnectLog($newVal) {
		CkSshTunnel_put_KeepConnectLog($this->_cPtr,$newVal);
	}

	function get_LastErrorHtml($str) {
		CkSshTunnel_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkSshTunnel_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkSshTunnel_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkSshTunnel_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkSshTunnel_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkSshTunnel_lastErrorXml($this->_cPtr);
	}

	function get_ListenBindIpAddress($str) {
		CkSshTunnel_get_ListenBindIpAddress($this->_cPtr,$str);
	}

	function listenBindIpAddress() {
		return CkSshTunnel_listenBindIpAddress($this->_cPtr);
	}

	function put_ListenBindIpAddress($newVal) {
		CkSshTunnel_put_ListenBindIpAddress($this->_cPtr,$newVal);
	}

	function get_ListenPort() {
		return CkSshTunnel_get_ListenPort($this->_cPtr);
	}

	function get_MaxPacketSize() {
		return CkSshTunnel_get_MaxPacketSize($this->_cPtr);
	}

	function put_MaxPacketSize($newVal) {
		CkSshTunnel_put_MaxPacketSize($this->_cPtr,$newVal);
	}

	function get_OutboundBindIpAddress($str) {
		CkSshTunnel_get_OutboundBindIpAddress($this->_cPtr,$str);
	}

	function outboundBindIpAddress() {
		return CkSshTunnel_outboundBindIpAddress($this->_cPtr);
	}

	function put_OutboundBindIpAddress($newVal) {
		CkSshTunnel_put_OutboundBindIpAddress($this->_cPtr,$newVal);
	}

	function get_OutboundBindPort() {
		return CkSshTunnel_get_OutboundBindPort($this->_cPtr);
	}

	function put_OutboundBindPort($newVal) {
		CkSshTunnel_put_OutboundBindPort($this->_cPtr,$newVal);
	}

	function get_SoRcvBuf() {
		return CkSshTunnel_get_SoRcvBuf($this->_cPtr);
	}

	function put_SoRcvBuf($newVal) {
		CkSshTunnel_put_SoRcvBuf($this->_cPtr,$newVal);
	}

	function get_SoSndBuf() {
		return CkSshTunnel_get_SoSndBuf($this->_cPtr);
	}

	function put_SoSndBuf($newVal) {
		CkSshTunnel_put_SoSndBuf($this->_cPtr,$newVal);
	}

	function get_SocksHostname($str) {
		CkSshTunnel_get_SocksHostname($this->_cPtr,$str);
	}

	function socksHostname() {
		return CkSshTunnel_socksHostname($this->_cPtr);
	}

	function put_SocksHostname($newVal) {
		CkSshTunnel_put_SocksHostname($this->_cPtr,$newVal);
	}

	function get_SocksPassword($str) {
		CkSshTunnel_get_SocksPassword($this->_cPtr,$str);
	}

	function socksPassword() {
		return CkSshTunnel_socksPassword($this->_cPtr);
	}

	function put_SocksPassword($newVal) {
		CkSshTunnel_put_SocksPassword($this->_cPtr,$newVal);
	}

	function get_SocksPort() {
		return CkSshTunnel_get_SocksPort($this->_cPtr);
	}

	function put_SocksPort($newVal) {
		CkSshTunnel_put_SocksPort($this->_cPtr,$newVal);
	}

	function get_SocksUsername($str) {
		CkSshTunnel_get_SocksUsername($this->_cPtr,$str);
	}

	function socksUsername() {
		return CkSshTunnel_socksUsername($this->_cPtr);
	}

	function put_SocksUsername($newVal) {
		CkSshTunnel_put_SocksUsername($this->_cPtr,$newVal);
	}

	function get_SocksVersion() {
		return CkSshTunnel_get_SocksVersion($this->_cPtr);
	}

	function put_SocksVersion($newVal) {
		CkSshTunnel_put_SocksVersion($this->_cPtr,$newVal);
	}

	function get_SshHostname($str) {
		CkSshTunnel_get_SshHostname($this->_cPtr,$str);
	}

	function sshHostname() {
		return CkSshTunnel_sshHostname($this->_cPtr);
	}

	function put_SshHostname($newVal) {
		CkSshTunnel_put_SshHostname($this->_cPtr,$newVal);
	}

	function get_SshLogin($str) {
		CkSshTunnel_get_SshLogin($this->_cPtr,$str);
	}

	function sshLogin() {
		return CkSshTunnel_sshLogin($this->_cPtr);
	}

	function put_SshLogin($newVal) {
		CkSshTunnel_put_SshLogin($this->_cPtr,$newVal);
	}

	function get_SshPassword($str) {
		CkSshTunnel_get_SshPassword($this->_cPtr,$str);
	}

	function sshPassword() {
		return CkSshTunnel_sshPassword($this->_cPtr);
	}

	function put_SshPassword($newVal) {
		CkSshTunnel_put_SshPassword($this->_cPtr,$newVal);
	}

	function get_SshPort() {
		return CkSshTunnel_get_SshPort($this->_cPtr);
	}

	function put_SshPort($newVal) {
		CkSshTunnel_put_SshPort($this->_cPtr,$newVal);
	}

	function get_TcpNoDelay() {
		return CkSshTunnel_get_TcpNoDelay($this->_cPtr);
	}

	function put_TcpNoDelay($newVal) {
		CkSshTunnel_put_TcpNoDelay($this->_cPtr,$newVal);
	}

	function get_TunnelErrors($str) {
		CkSshTunnel_get_TunnelErrors($this->_cPtr,$str);
	}

	function tunnelErrors() {
		return CkSshTunnel_tunnelErrors($this->_cPtr);
	}

	function get_TunnelThreadSessionLogPath($str) {
		CkSshTunnel_get_TunnelThreadSessionLogPath($this->_cPtr,$str);
	}

	function tunnelThreadSessionLogPath() {
		return CkSshTunnel_tunnelThreadSessionLogPath($this->_cPtr);
	}

	function put_TunnelThreadSessionLogPath($newVal) {
		CkSshTunnel_put_TunnelThreadSessionLogPath($this->_cPtr,$newVal);
	}

	function get_Version($str) {
		CkSshTunnel_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkSshTunnel_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkSshTunnel_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkSshTunnel_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkSshTunnel_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkSshTunnel_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkSshTunnel_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function BeginAccepting($listenPort) {
		return CkSshTunnel_BeginAccepting($this->_cPtr,$listenPort);
	}

	function ClearTunnelErrors() {
		CkSshTunnel_ClearTunnelErrors($this->_cPtr);
	}

	function getTunnelsXml() {
		return CkSshTunnel_getTunnelsXml($this->_cPtr);
	}

	function tunnelsXml() {
		return CkSshTunnel_tunnelsXml($this->_cPtr);
	}

	function SaveLastError($path) {
		return CkSshTunnel_SaveLastError($this->_cPtr,$path);
	}

	function SetSshAuthenticationKey($key) {
		return CkSshTunnel_SetSshAuthenticationKey($this->_cPtr,$key);
	}

	function StopAccepting() {
		return CkSshTunnel_StopAccepting($this->_cPtr);
	}

	function StopAllTunnels($maxWaitMs) {
		return CkSshTunnel_StopAllTunnels($this->_cPtr,$maxWaitMs);
	}

	function UnlockComponent($unlockCode) {
		return CkSshTunnel_UnlockComponent($this->_cPtr,$unlockCode);
	}
}

class CkNtlm {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkNtlm') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkNtlm();
	}

	function get_Utf8() {
		return CkNtlm_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkNtlm_put_Utf8($this->_cPtr,$b);
	}

	function get_ClientChallenge($str) {
		CkNtlm_get_ClientChallenge($this->_cPtr,$str);
	}

	function clientChallenge() {
		return CkNtlm_clientChallenge($this->_cPtr);
	}

	function put_ClientChallenge($newVal) {
		CkNtlm_put_ClientChallenge($this->_cPtr,$newVal);
	}

	function get_DnsComputerName($str) {
		CkNtlm_get_DnsComputerName($this->_cPtr,$str);
	}

	function dnsComputerName() {
		return CkNtlm_dnsComputerName($this->_cPtr);
	}

	function put_DnsComputerName($newVal) {
		CkNtlm_put_DnsComputerName($this->_cPtr,$newVal);
	}

	function get_DnsDomainName($str) {
		CkNtlm_get_DnsDomainName($this->_cPtr,$str);
	}

	function dnsDomainName() {
		return CkNtlm_dnsDomainName($this->_cPtr);
	}

	function put_DnsDomainName($newVal) {
		CkNtlm_put_DnsDomainName($this->_cPtr,$newVal);
	}

	function get_Domain($str) {
		CkNtlm_get_Domain($this->_cPtr,$str);
	}

	function domain() {
		return CkNtlm_domain($this->_cPtr);
	}

	function put_Domain($newVal) {
		CkNtlm_put_Domain($this->_cPtr,$newVal);
	}

	function get_EncodingMode($str) {
		CkNtlm_get_EncodingMode($this->_cPtr,$str);
	}

	function encodingMode() {
		return CkNtlm_encodingMode($this->_cPtr);
	}

	function put_EncodingMode($newVal) {
		CkNtlm_put_EncodingMode($this->_cPtr,$newVal);
	}

	function get_Flags($str) {
		CkNtlm_get_Flags($this->_cPtr,$str);
	}

	function flags() {
		return CkNtlm_flags($this->_cPtr);
	}

	function put_Flags($newVal) {
		CkNtlm_put_Flags($this->_cPtr,$newVal);
	}

	function get_LastErrorHtml($str) {
		CkNtlm_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkNtlm_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkNtlm_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkNtlm_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkNtlm_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkNtlm_lastErrorXml($this->_cPtr);
	}

	function get_NetBiosComputerName($str) {
		CkNtlm_get_NetBiosComputerName($this->_cPtr,$str);
	}

	function netBiosComputerName() {
		return CkNtlm_netBiosComputerName($this->_cPtr);
	}

	function put_NetBiosComputerName($newVal) {
		CkNtlm_put_NetBiosComputerName($this->_cPtr,$newVal);
	}

	function get_NetBiosDomainName($str) {
		CkNtlm_get_NetBiosDomainName($this->_cPtr,$str);
	}

	function netBiosDomainName() {
		return CkNtlm_netBiosDomainName($this->_cPtr);
	}

	function put_NetBiosDomainName($newVal) {
		CkNtlm_put_NetBiosDomainName($this->_cPtr,$newVal);
	}

	function get_NtlmVersion() {
		return CkNtlm_get_NtlmVersion($this->_cPtr);
	}

	function put_NtlmVersion($newVal) {
		CkNtlm_put_NtlmVersion($this->_cPtr,$newVal);
	}

	function get_OemCodePage() {
		return CkNtlm_get_OemCodePage($this->_cPtr);
	}

	function put_OemCodePage($newVal) {
		CkNtlm_put_OemCodePage($this->_cPtr,$newVal);
	}

	function get_Password($str) {
		CkNtlm_get_Password($this->_cPtr,$str);
	}

	function password() {
		return CkNtlm_password($this->_cPtr);
	}

	function put_Password($newVal) {
		CkNtlm_put_Password($this->_cPtr,$newVal);
	}

	function get_ServerChallenge($str) {
		CkNtlm_get_ServerChallenge($this->_cPtr,$str);
	}

	function serverChallenge() {
		return CkNtlm_serverChallenge($this->_cPtr);
	}

	function put_ServerChallenge($newVal) {
		CkNtlm_put_ServerChallenge($this->_cPtr,$newVal);
	}

	function get_TargetName($str) {
		CkNtlm_get_TargetName($this->_cPtr,$str);
	}

	function targetName() {
		return CkNtlm_targetName($this->_cPtr);
	}

	function put_TargetName($newVal) {
		CkNtlm_put_TargetName($this->_cPtr,$newVal);
	}

	function get_UserName($str) {
		CkNtlm_get_UserName($this->_cPtr,$str);
	}

	function userName() {
		return CkNtlm_userName($this->_cPtr);
	}

	function put_UserName($newVal) {
		CkNtlm_put_UserName($this->_cPtr,$newVal);
	}

	function get_Version($str) {
		CkNtlm_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkNtlm_version($this->_cPtr);
	}

	function get_Workstation($str) {
		CkNtlm_get_Workstation($this->_cPtr,$str);
	}

	function workstation() {
		return CkNtlm_workstation($this->_cPtr);
	}

	function put_Workstation($newVal) {
		CkNtlm_put_Workstation($this->_cPtr,$newVal);
	}

	function get_DebugLogFilePath($str) {
		CkNtlm_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkNtlm_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkNtlm_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkNtlm_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkNtlm_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function CompareType3($msg1,$msg2) {
		return CkNtlm_CompareType3($this->_cPtr,$msg1,$msg2);
	}

	function genType1() {
		return CkNtlm_genType1($this->_cPtr);
	}

	function genType2($type1Msg) {
		return CkNtlm_genType2($this->_cPtr,$type1Msg);
	}

	function genType3($type2Msg) {
		return CkNtlm_genType3($this->_cPtr,$type2Msg);
	}

	function LoadType3($type3Msg) {
		return CkNtlm_LoadType3($this->_cPtr,$type3Msg);
	}

	function parseType1($type1Msg) {
		return CkNtlm_parseType1($this->_cPtr,$type1Msg);
	}

	function parseType2($type2Msg) {
		return CkNtlm_parseType2($this->_cPtr,$type2Msg);
	}

	function parseType3($type3Msg) {
		return CkNtlm_parseType3($this->_cPtr,$type3Msg);
	}

	function SaveLastError($path) {
		return CkNtlm_SaveLastError($this->_cPtr,$path);
	}

	function SetFlag($flagLetter,$on) {
		return CkNtlm_SetFlag($this->_cPtr,$flagLetter,$on);
	}

	function UnlockComponent($unlockCode) {
		return CkNtlm_UnlockComponent($this->_cPtr,$unlockCode);
	}
}

class CkDkim {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkDkim') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkDkim();
	}

	function get_Utf8() {
		return CkDkim_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkDkim_put_Utf8($this->_cPtr,$b);
	}

	function get_DkimAlg($str) {
		CkDkim_get_DkimAlg($this->_cPtr,$str);
	}

	function dkimAlg() {
		return CkDkim_dkimAlg($this->_cPtr);
	}

	function put_DkimAlg($newVal) {
		CkDkim_put_DkimAlg($this->_cPtr,$newVal);
	}

	function get_DkimBodyLengthCount() {
		return CkDkim_get_DkimBodyLengthCount($this->_cPtr);
	}

	function put_DkimBodyLengthCount($newVal) {
		CkDkim_put_DkimBodyLengthCount($this->_cPtr,$newVal);
	}

	function get_DkimCanon($str) {
		CkDkim_get_DkimCanon($this->_cPtr,$str);
	}

	function dkimCanon() {
		return CkDkim_dkimCanon($this->_cPtr);
	}

	function put_DkimCanon($newVal) {
		CkDkim_put_DkimCanon($this->_cPtr,$newVal);
	}

	function get_DkimDomain($str) {
		CkDkim_get_DkimDomain($this->_cPtr,$str);
	}

	function dkimDomain() {
		return CkDkim_dkimDomain($this->_cPtr);
	}

	function put_DkimDomain($newVal) {
		CkDkim_put_DkimDomain($this->_cPtr,$newVal);
	}

	function get_DkimHeaders($str) {
		CkDkim_get_DkimHeaders($this->_cPtr,$str);
	}

	function dkimHeaders() {
		return CkDkim_dkimHeaders($this->_cPtr);
	}

	function put_DkimHeaders($newVal) {
		CkDkim_put_DkimHeaders($this->_cPtr,$newVal);
	}

	function get_DkimSelector($str) {
		CkDkim_get_DkimSelector($this->_cPtr,$str);
	}

	function dkimSelector() {
		return CkDkim_dkimSelector($this->_cPtr);
	}

	function put_DkimSelector($newVal) {
		CkDkim_put_DkimSelector($this->_cPtr,$newVal);
	}

	function get_DomainKeyAlg($str) {
		CkDkim_get_DomainKeyAlg($this->_cPtr,$str);
	}

	function domainKeyAlg() {
		return CkDkim_domainKeyAlg($this->_cPtr);
	}

	function put_DomainKeyAlg($newVal) {
		CkDkim_put_DomainKeyAlg($this->_cPtr,$newVal);
	}

	function get_DomainKeyCanon($str) {
		CkDkim_get_DomainKeyCanon($this->_cPtr,$str);
	}

	function domainKeyCanon() {
		return CkDkim_domainKeyCanon($this->_cPtr);
	}

	function put_DomainKeyCanon($newVal) {
		CkDkim_put_DomainKeyCanon($this->_cPtr,$newVal);
	}

	function get_DomainKeyDomain($str) {
		CkDkim_get_DomainKeyDomain($this->_cPtr,$str);
	}

	function domainKeyDomain() {
		return CkDkim_domainKeyDomain($this->_cPtr);
	}

	function put_DomainKeyDomain($newVal) {
		CkDkim_put_DomainKeyDomain($this->_cPtr,$newVal);
	}

	function get_DomainKeyHeaders($str) {
		CkDkim_get_DomainKeyHeaders($this->_cPtr,$str);
	}

	function domainKeyHeaders() {
		return CkDkim_domainKeyHeaders($this->_cPtr);
	}

	function put_DomainKeyHeaders($newVal) {
		CkDkim_put_DomainKeyHeaders($this->_cPtr,$newVal);
	}

	function get_DomainKeySelector($str) {
		CkDkim_get_DomainKeySelector($this->_cPtr,$str);
	}

	function domainKeySelector() {
		return CkDkim_domainKeySelector($this->_cPtr);
	}

	function put_DomainKeySelector($newVal) {
		CkDkim_put_DomainKeySelector($this->_cPtr,$newVal);
	}

	function get_HeartbeatMs() {
		return CkDkim_get_HeartbeatMs($this->_cPtr);
	}

	function put_HeartbeatMs($newVal) {
		CkDkim_put_HeartbeatMs($this->_cPtr,$newVal);
	}

	function get_LastErrorHtml($str) {
		CkDkim_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkDkim_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkDkim_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkDkim_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkDkim_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkDkim_lastErrorXml($this->_cPtr);
	}

	function get_Version($str) {
		CkDkim_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkDkim_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkDkim_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkDkim_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkDkim_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkDkim_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkDkim_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function AddDkimSignature($mimeIn,$outBytes) {
		return CkDkim_AddDkimSignature($this->_cPtr,$mimeIn,$outBytes);
	}

	function AddDomainKeySignature($mimeIn,$outBytes) {
		return CkDkim_AddDomainKeySignature($this->_cPtr,$mimeIn,$outBytes);
	}

	function LoadDkimPk($privateKey,$optionalPassword) {
		return CkDkim_LoadDkimPk($this->_cPtr,$privateKey,$optionalPassword);
	}

	function LoadDkimPkBytes($privateKeyDer,$optionalPassword) {
		return CkDkim_LoadDkimPkBytes($this->_cPtr,$privateKeyDer,$optionalPassword);
	}

	function LoadDkimPkFile($privateKeyFilepath,$optionalPassword) {
		return CkDkim_LoadDkimPkFile($this->_cPtr,$privateKeyFilepath,$optionalPassword);
	}

	function LoadDomainKeyPk($privateKey,$optionalPassword) {
		return CkDkim_LoadDomainKeyPk($this->_cPtr,$privateKey,$optionalPassword);
	}

	function LoadDomainKeyPkBytes($privateKeyDer,$optionalPassword) {
		return CkDkim_LoadDomainKeyPkBytes($this->_cPtr,$privateKeyDer,$optionalPassword);
	}

	function LoadDomainKeyPkFile($privateKeyFilepath,$optionalPassword) {
		return CkDkim_LoadDomainKeyPkFile($this->_cPtr,$privateKeyFilepath,$optionalPassword);
	}

	function LoadPublicKey($selector,$domain,$publicKey) {
		return CkDkim_LoadPublicKey($this->_cPtr,$selector,$domain,$publicKey);
	}

	function LoadPublicKeyFile($selector,$domain,$publicKeyFilepath) {
		return CkDkim_LoadPublicKeyFile($this->_cPtr,$selector,$domain,$publicKeyFilepath);
	}

	function NumDkimSignatures($mimeData) {
		return CkDkim_NumDkimSignatures($this->_cPtr,$mimeData);
	}

	function NumDomainKeySignatures($mimeData) {
		return CkDkim_NumDomainKeySignatures($this->_cPtr,$mimeData);
	}

	function PrefetchPublicKey($selector,$domain) {
		return CkDkim_PrefetchPublicKey($this->_cPtr,$selector,$domain);
	}

	function SaveLastError($path) {
		return CkDkim_SaveLastError($this->_cPtr,$path);
	}

	function UnlockComponent($unlockCode) {
		return CkDkim_UnlockComponent($this->_cPtr,$unlockCode);
	}

	function VerifyDkimSignature($sigIdx,$mimeData) {
		return CkDkim_VerifyDkimSignature($this->_cPtr,$sigIdx,$mimeData);
	}

	function VerifyDomainKeySignature($sigIdx,$mimeData) {
		return CkDkim_VerifyDomainKeySignature($this->_cPtr,$sigIdx,$mimeData);
	}
}

class CkDirTree {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_chilkat_9_4_1_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CkDirTree') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CkDirTree();
	}

	function get_Utf8() {
		return CkDirTree_get_Utf8($this->_cPtr);
	}

	function put_Utf8($b) {
		CkDirTree_put_Utf8($this->_cPtr,$b);
	}

	function get_BaseDir($str) {
		CkDirTree_get_BaseDir($this->_cPtr,$str);
	}

	function baseDir() {
		return CkDirTree_baseDir($this->_cPtr);
	}

	function put_BaseDir($newVal) {
		CkDirTree_put_BaseDir($this->_cPtr,$newVal);
	}

	function get_DoneIterating() {
		return CkDirTree_get_DoneIterating($this->_cPtr);
	}

	function get_FileSize32() {
		return CkDirTree_get_FileSize32($this->_cPtr);
	}

	function get_FullPath($str) {
		CkDirTree_get_FullPath($this->_cPtr,$str);
	}

	function fullPath() {
		return CkDirTree_fullPath($this->_cPtr);
	}

	function get_FullUncPath($str) {
		CkDirTree_get_FullUncPath($this->_cPtr,$str);
	}

	function fullUncPath() {
		return CkDirTree_fullUncPath($this->_cPtr);
	}

	function get_IsDirectory() {
		return CkDirTree_get_IsDirectory($this->_cPtr);
	}

	function get_LastErrorHtml($str) {
		CkDirTree_get_LastErrorHtml($this->_cPtr,$str);
	}

	function lastErrorHtml() {
		return CkDirTree_lastErrorHtml($this->_cPtr);
	}

	function get_LastErrorText($str) {
		CkDirTree_get_LastErrorText($this->_cPtr,$str);
	}

	function lastErrorText() {
		return CkDirTree_lastErrorText($this->_cPtr);
	}

	function get_LastErrorXml($str) {
		CkDirTree_get_LastErrorXml($this->_cPtr,$str);
	}

	function lastErrorXml() {
		return CkDirTree_lastErrorXml($this->_cPtr);
	}

	function get_Recurse() {
		return CkDirTree_get_Recurse($this->_cPtr);
	}

	function put_Recurse($newVal) {
		CkDirTree_put_Recurse($this->_cPtr,$newVal);
	}

	function get_RelativePath($str) {
		CkDirTree_get_RelativePath($this->_cPtr,$str);
	}

	function relativePath() {
		return CkDirTree_relativePath($this->_cPtr);
	}

	function get_Version($str) {
		CkDirTree_get_Version($this->_cPtr,$str);
	}

	function version() {
		return CkDirTree_version($this->_cPtr);
	}

	function get_DebugLogFilePath($str) {
		CkDirTree_get_DebugLogFilePath($this->_cPtr,$str);
	}

	function debugLogFilePath() {
		return CkDirTree_debugLogFilePath($this->_cPtr);
	}

	function put_DebugLogFilePath($newVal) {
		CkDirTree_put_DebugLogFilePath($this->_cPtr,$newVal);
	}

	function get_VerboseLogging() {
		return CkDirTree_get_VerboseLogging($this->_cPtr);
	}

	function put_VerboseLogging($newVal) {
		CkDirTree_put_VerboseLogging($this->_cPtr,$newVal);
	}

	function AdvancePosition() {
		return CkDirTree_AdvancePosition($this->_cPtr);
	}

	function BeginIterate() {
		return CkDirTree_BeginIterate($this->_cPtr);
	}

	function SaveLastError($path) {
		return CkDirTree_SaveLastError($this->_cPtr,$path);
	}
}


?>
